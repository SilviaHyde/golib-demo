(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    470745,       9349]
NotebookOptionsPosition[    448305,       8980]
NotebookOutlinePosition[    449544,       9018]
CellTagsIndexPosition[    449428,       9012]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}]], "InitializationCell",
 CellLabel->
  "5/21/20 01:16:13 \
In[1]:=",ExpressionUUID->"73654024-6bf4-474d-a8ed-cfd4a34270fd"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "sideEft", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sideEft", "[", 
   RowBox[{"log_", ":", "Echo"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pipe", "[", 
    RowBox[{
     RowBox[{"branch", "[", 
      RowBox[{
       RowBox[{"#", "/*", "log"}], ",", "Identity"}], "]"}], ",", "Last"}], 
    "]"}], "&"}]}]}], "InitializationCell",
 CellLabel->
  "5/21/20 01:16:13 \
In[2]:=",ExpressionUUID->"64f2032d-2257-406d-be4a-e67ddd076aa0"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "safePs", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"safePs", "=", 
   RowBox[{"pipe", "[", "\[IndentingNewLine]", 
    RowBox[{"RunProcess", "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#StandardError", "=!=", "\"\<\>\""}], ",", 
        RowBox[{
         RowBox[{"Echo", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<ERROR:\>\"", ",", "Red", ",", "Bold"}], "]"}]}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}], ",", "#"}], "]"}], "&"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "InitializationCell",
 CellLabel->
  "5/21/20 01:16:13 \
In[4]:=",ExpressionUUID->"3cfb02b0-c687-499c-acd3-231b16d7d474"],

Cell[CellGroupData[{

Cell["WSTP", "Chapter",ExpressionUUID->"57deb468-cda9-4bde-b2f2-2d9ff81070de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<target\>\"", "\[Rule]", "\"\<addtwo.exe\>\""}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<src\>\"", "\[Rule]", 
     RowBox[{"{", "\"\<addtwo.c\>\"", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<tm\>\"", "\[Rule]", 
     RowBox[{"{", "\"\<addtwo.tm\>\"", "}"}]}]}], "\[IndentingNewLine]", 
   "|>"}], "//", "\[IndentingNewLine]", 
  RowBox[{"pipe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"branch", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "File", " ", "name", " ", "for", " ", "our", " ", "compiling", " ", 
       RowBox[{"target", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"#target", "&"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Ordinary", " ", "c", " ", 
        RowBox[{"files", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"#src", "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"(*", " ", 
       RowBox[{"Convert", " ", "all", " ", "tm", " ", "to", " ", 
        RowBox[{"c", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"pipe", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"#tm", "&"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Map", "@", 
         RowBox[{"pipe", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"branch", "[", 
            RowBox[{"Identity", ",", 
             RowBox[{"StringTemplate", "[", "\"\<``.c\>\"", "]"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"sideEft", "[", 
             RowBox[{
              RowBox[{"Echo", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", "8"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<tm process:\>\"", ",", "8", ",", "Black", ",", "Bold"}],
                  "]"}]}], "]"}], "&"}], "]"}], "@", "\[IndentingNewLine]", 
            RowBox[{"Apply", "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"safePs", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<wsprep\>\"", ",", "#1", ",", "\"\<-o\>\"", ",", "#2"}], 
                 "}"}], "]"}], "&"}], ")"}]}]}], "\[IndentingNewLine]", ",", 
           "Last"}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"sideEft", "[", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "8"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\\tdebug:\>\"", ",", "8", ",", "Red", ",", "Bold"}], 
          "]"}]}], "]"}], "&"}], "]"}], "@", "Identity"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"(*", " ", 
     RowBox[{"Compilation", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Apply", "@", 
     RowBox[{"pipe", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", 
         RowBox[{
          RowBox[{"{", "##2", "}"}], "//", "Flatten"}]}], "}"}], "&"}], 
      "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<target\>\"", ",", "\"\<src\>\""}], "}"}], ",", "#"}], 
      "]"}], "&"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sideEft", "[", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "8"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<compile process:\>\"", ",", "8", ",", "Black", ",", "Bold"}], 
          "]"}]}], "]"}], "&"}], "]"}], "@", "\[IndentingNewLine]", 
     RowBox[{"pipe", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<tcc\>\"", ",", "\"\<-lwstp64i4\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<-o\>\"", ",", "#target"}], "}"}], ",", "#src"}], 
         "}"}], "&"}], "\[IndentingNewLine]", ",", "Flatten", 
       "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"sideEft", "[", 
         RowBox[{
          RowBox[{"Echo", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", "8"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\\tdebug:\>\"", ",", "8", ",", "Red", ",", "Bold"}],
              "]"}]}], "]"}], "&"}], "]"}], "@", "Identity"}], 
       "\[IndentingNewLine]", ",", "safePs"}], "\[IndentingNewLine]", "]"}]}],
     "\[IndentingNewLine]", ",", 
    RowBox[{"#target", "&"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "5/12/20 16:21:43 \
In[7]:=",ExpressionUUID->"52765244-645c-498e-b505-0fb7d8440efc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox["\<\"tm process:\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontSize->8,
    FontWeight->Bold,
    FontColor->GrayLevel[0]],
   "EchoLabel"], " ", 
  StyleBox[
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
    "\[RightAssociation]"}],
   StripOnInput->False,
   FontSize->8]}]], "Echo",ExpressionUUID->"e3721684-c0b3-4aa7-95c3-\
b67a86216f62"],

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox["\<\"\\tdebug:\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontSize->8,
    FontWeight->Bold,
    FontColor->RGBColor[1, 0, 0]],
   "EchoLabel"], " ", 
  StyleBox[
   RowBox[{"{", 
    RowBox[{"\<\"addtwo.exe\"\>", ",", 
     RowBox[{"{", "\<\"addtwo.c\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"addtwo.tm.c\"\>", "}"}]}], "}"}],
   StripOnInput->False,
   FontSize->8]}]], "Echo",ExpressionUUID->"57d1a96c-86a0-4619-a0a7-\
37002d735407"],

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox["\<\"\\tdebug:\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontSize->8,
    FontWeight->Bold,
    FontColor->RGBColor[1, 0, 0]],
   "EchoLabel"], " ", 
  StyleBox[
   RowBox[{"{", 
    RowBox[{"\<\"tcc\"\>", ",", "\<\"-lwstp64i4\"\>", ",", "\<\"-o\"\>", 
     ",", "\<\"addtwo.exe\"\>", ",", "\<\"addtwo.c\"\>", 
     ",", "\<\"addtwo.tm.c\"\>"}], "}"}],
   StripOnInput->False,
   FontSize->8]}]], "Echo",ExpressionUUID->"b602af14-94f5-4fd8-aa15-\
bc90a1826f8b"],

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox["\<\"ERROR:\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontWeight->Bold,
    FontColor->RGBColor[1, 0, 0]],
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
    RowBox[{"\<\"StandardError\"\>", 
     "\[Rule]", "\<\"In file included from \
addtwo.c:13:\\r\\nc:/portable/tcc/include/wstp.h:1028: error: ';' expected \
(got \\\"wsint64\\\")\\r\\n\"\>"}]}], "\[RightAssociation]"}]}]], "Echo",Expre\
ssionUUID->"f3663dfa-eb8c-41ed-a1bc-c69c63e75c0b"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "5/12/20 16:21:43 \
Out[7]=",ExpressionUUID->"80966364-5c9b-490d-a4a0-70d8201a16db"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LibraryLink", "Chapter",ExpressionUUID->"e9c318d5-87fc-416d-a460-dc221cf38ef5"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<LibraryLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`MinGWCompiler`\>\"", 
  "]"}]}], "InitializationCell",
 CellLabel->
  "5/21/20 02:54:37 \
In[30]:=",ExpressionUUID->"3bac92d4-f201-486d-83e3-25cf96f1a557"],

Cell[CellGroupData[{

Cell["Compiler configurations", "Subsubsection",ExpressionUUID->"de4657a8-f2b5-4274-a541-f225beb5e255"],

Cell[TextData[{
 "Set ",
 StyleBox["gccCfg", "Input"],
 " as default."
}], "Comment",ExpressionUUID->"3957be75-6c77-47d1-9ba9-ff0d4e069406"],

Cell[BoxData["$CCompiler"], "tempInput",
 CellLabel->
  "5/12/20 21:46:15 \
In[1]:=",ExpressionUUID->"6f7eca13-7cd9-4d47-ab27-05714e2a1075"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"extraOpts", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-O2\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<ShellOutputFunction\>\"", "\[Rule]", 
       RowBox[{"pipe", "[", "\[IndentingNewLine]", 
        RowBox[{"StringTrim", ",", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
            RowBox[{"LineBreakWithin", "\[Rule]", "False"}]}], "]"}], "&"}], 
         ",", "ToBoxes", "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"PaneBox", "[", 
           RowBox[{"#", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1000", ",", 
               RowBox[{"UpTo", "[", "300", "]"}]}], "}"}]}], ",", 
            RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}], "&"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"Cell", "[", 
           RowBox[{
            RowBox[{"BoxData", "[", "#", "]"}], ",", "\"\<Output\>\""}], 
           "]"}], "&"}], ",", "CellPrint"}], "\[IndentingNewLine]", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"pipe", "[", "\[IndentingNewLine]", 
       RowBox[{"StringTrim", ",", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"LineBreakWithin", "\[Rule]", "False"}]}], "]"}], "&"}], 
        ",", "ToBoxes", "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"BoxData", "@", "#"}], ",", "\"\<Program\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", ".97", "]"}]}], ",", 
           RowBox[{"FontColor", "\[Rule]", 
            RowBox[{"GrayLevel", "[", "0.1", "]"}]}], ",", 
           RowBox[{"PageWidth", "\[Rule]", "\[Infinity]"}]}], "]"}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"PaneBox", "[", 
          RowBox[{"#", ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1000", ",", "300"}], "}"}]}], ",", 
           RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"BoxData", "[", "#", "]"}], ",", "\"\<Output\>\""}], "]"}],
          "&"}], ",", "CellPrint"}], "\[IndentingNewLine]", "]"}], "*)"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"tccCfg", "=", 
   RowBox[{"extraOpts", "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Compiler\>\"", "\[Rule]", "GenericCCompiler"}], ",", 
      RowBox[{
      "\"\<CompilerInstallation\>\"", "\[Rule]", 
       "\"\<C:\\\\Portable\\\\tcc\>\""}], ",", 
      RowBox[{"\"\<CompilerName\>\"", "\[Rule]", "\"\<tcc.exe\>\""}]}], 
     "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gccCfg", "=", 
   RowBox[{"extraOpts", "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Compiler\>\"", "\[Rule]", "GenericCCompiler"}], ",", 
      RowBox[{
      "\"\<CompilerInstallation\>\"", "\[Rule]", 
       "\"\<C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\>\""}]\
, ",", 
      RowBox[{"\"\<CompilerName\>\"", "\[Rule]", "\"\<gcc.exe\>\""}]}], 
     "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gppCfg", "=", 
   RowBox[{"extraOpts", "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Compiler\>\"", "\[Rule]", "GenericCCompiler"}], ",", 
      RowBox[{
      "\"\<CompilerInstallation\>\"", "\[Rule]", 
       "\"\<C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\>\""}]\
, ",", 
      RowBox[{"\"\<CompilerName\>\"", "\[Rule]", "\"\<g++.exe\>\""}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mingw64Cfg", "=", 
   RowBox[{"extraOpts", "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<MinGW\>\""}], ",", 
      RowBox[{"\"\<Compiler\>\"", "\[Rule]", "MinGWCompiler"}], ",", 
      RowBox[{
      "\"\<CompilerInstallation\>\"", "\[Rule]", 
       "\"\<C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\>\""}]\
}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$CCompiler", "=", "mingw64Cfg"}], ";"}]}], "InitializationCell",
 CellLabel->
  "5/21/20 02:54:41 \
In[33]:=",ExpressionUUID->"baa4b874-6df5-4938-934d-141debb31da6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Demo: division of two real numbers (successful)", "Subsubsection",ExpressionUUID->"fa10438c-f68b-435b-9233-de48363284bb"],

Cell["\<\
TCC compiles much faster than GCC, but the result executes much slower.\
\>", "Text",ExpressionUUID->"872528fc-ae01-41ea-aff7-21862e4b0632"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateLibrary", "[", 
  RowBox[{
   RowBox[{"File", "@", "\"\<Division\\\\Division.cpp\>\""}], ",", 
   "\"\<liblink_Division_gcc\>\"", ",", 
   RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", "\"\<Division\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"abcbce66-24fe-4b02-b3a2-37d76ed88b52"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\Working-\
flerkengen1-19304-2876-14>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\\
mingw64\\\\bin\\\\gcc.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\Working-flerkengen1-\
19304-2876-14\\\\liblink_Division_gcc.dll\\\" -O2  -I\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\Division.cpp\\\"  -L\
\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 300},
  Scrollbars->True]], "Output",ExpressionUUID->"19616bca-6f86-4dda-a5b4-\
e97e14dce740"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\\
liblink_Division_gcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 02:12:59 \
Out[75]=",ExpressionUUID->"186dfd1c-e7ad-4405-9aac-da007abc30c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$CCompiler", "=", "tccCfg"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CreateLibrary", "[", 
    RowBox[{
     RowBox[{"File", "@", "\"\<Division\\\\Division.c\>\""}], ",", 
     "\"\<liblink_Division_tcc\>\"", ",", 
     RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", "\"\<Division\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/13/20 02:34:10 \
In[77]:=",ExpressionUUID->"6ff22cba-0cf9-43d2-bd9c-2c9a014e283f"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\Working-\
flerkengen1-19304-2876-15>C:\\\\Portable\\\\tcc\\\\tcc.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\Working-flerkengen1-\
19304-2876-15\\\\liblink_Division_tcc.dll\\\" -O2  -I\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\Division.c\\\"  -L\\\
\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 300},
  Scrollbars->True]], "Output",ExpressionUUID->"7ba96931-91c0-470f-bf32-\
a4952b750b17"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Division\\\\\
liblink_Division_tcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 02:34:10 \
Out[77]=",ExpressionUUID->"a9f2c189-e830-424d-acab-4f4dae935c6c"]
}, Open  ]],

Cell[TextData[{
 "List all exported functions in DLL using ",
 StyleBox["tcc -impdef", "Program"],
 " :"
}], "Text",ExpressionUUID->"2f604d2f-046a-4d2f-ba7f-76b108b2360d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<tcc\>\"", ",", "\"\<-impdef\>\"", "\[IndentingNewLine]", ",", 
    "\"\<Division\\\\liblink_Division_gcc.dll\>\"", "\[IndentingNewLine]", 
    ",", "\"\<-o\>\"", ",", "\"\<Division\\\\liblink_Division_gcc.def\>\""}], 
   "\[IndentingNewLine]", "}"}], "//", "safePs"}]], "tempInput",
 CellLabel->
  "5/12/20 21:30:43 \
In[31]:=",ExpressionUUID->"b13b6944-696d-4d3e-9fc3-a27a417853ef"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "5/12/20 21:30:43 \
Out[31]=",ExpressionUUID->"58b583d8-a07b-4a3e-9bb7-ce41630834ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<Division\\\\liblink_Division_gcc.def\>\"", ",", "\"\<Lines\>\""}], 
   "]"}], "//", "Multicolumn"}]], "tempInput",
 CellLabel->
  "5/12/20 21:30:58 \
In[32]:=",ExpressionUUID->"df1b1821-d49c-4705-9f24-1385dc1b5f5a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LIBRARY liblink_Division_gcc.dll\"\>", "\<\"Division\"\>", \
"\<\"WolframLibrary_uninitialize\"\>"},
    {"\<\"\"\>", "\<\"WolframLibrary_getVersion\"\>", ""},
    {"\<\"EXPORTS\"\>", "\<\"WolframLibrary_initialize\"\>", ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/12/20 21:30:58 \
Out[32]=",ExpressionUUID->"ddca59c2-5d26-4ebf-875b-7804a04f7504"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$LibraryPath", "=", 
     RowBox[{"$LibraryPath", "~", "Append", "~", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Directory", "[", "]"}], ",", "\"\<Division\>\""}], "}"}], 
       "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"func", "=", 
    RowBox[{"LibraryFunctionLoad", "[", 
     RowBox[{
     "\"\<liblink_Division_tcc.dll\>\"", "\[IndentingNewLine]", ",", 
      "\"\<Division\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Real", ",", "Real"}], "}"}], ",", "Real"}], 
     "\[IndentingNewLine]", "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "5/13/20 02:34:23 \
In[78]:=",ExpressionUUID->"50f5e027-218f-4e7f-8d64-52122f62d19d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LibraryFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Division\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Division\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"Real", ",", "Real"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "Real", ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"liblink_Division_tcc.dll\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LibraryFunction[
  "D:\\gitrepos\\golib-demo\\draft\\Division\\liblink_Division_tcc.dll", 
   "Division", {Real, Real}, Real],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "5/13/20 02:34:23 \
Out[78]=",ExpressionUUID->"734fbe5b-3bb9-47aa-b982-e2ecce074a0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LibraryFunctionInformation", "[", "func", "]"}], "//", 
     "Association"}], "//", 
    RowBox[{"MapAt", "[", 
     RowBox[{"FileNameTake", ",", "\"\<File\>\""}], "]"}]}], "//", 
   "Dataset"}], "//", "DatasetGrid"}]], "tempInput",
 CellLabel->
  "5/13/20 02:34:26 \
In[79]:=",ExpressionUUID->"8e889a9c-a9c1-48e3-ac15-34e741dbe6ed"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      ItemBox[
       PaneBox["\<\"ReturnType\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox["Real",
         ShowStringCharacters->True,
         FontFamily->"Source Code Pro"],
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{60, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"ArgumentTypes\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"Real", ",", "Real"}], "}"}],
         StripOnInput->False,
         ShowStringCharacters->False],
        ImageMargins->{{5, 3}, {4, 5}}],
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"File\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"liblink_Division_tcc.dll\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{230.40000000000003`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"Function\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"Division\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{76.80000000000001, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]}
    },
    AutoDelete->False,
    BaseStyle->{FontFamily -> "Verdana", FontSize -> 12},
    FrameStyle->GrayLevel[0.7490196078431373],
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  StripOnInput->False,
  ShowAutoStyles->False,
  NumberMarks->False,
  LineBreakWithin->False]], "Output",
 CellLabel->
  "5/13/20 02:34:27 \
Out[79]=",ExpressionUUID->"0f2e1acb-aa36-4f24-abf5-1e4c85be3462"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"branch", "[", 
     RowBox[{"func", ",", "Divide"}], "]"}], "@@@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "2"}], "}"}]}], "]"}]}], "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Dividers", "\[Rule]", "Center"}]}], "]"}], "&"}]}]], "Input",
 CellLabel->
  "5/13/20 02:34:30 \
In[80]:=",ExpressionUUID->"e10405ce-30f7-4a0d-8581-4175bcdc2659"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.6782087995847339`", "0.31088799679141416`", "0.20624340984142256`", 
     "0.4733633331442672`", "0.9292099830911636`", "1.347062196777993`"},
    {"0.6782087995847339`", "0.31088799679141416`", "0.20624340984142256`", 
     "0.4733633331442672`", "0.9292099830911636`", "1.347062196777993`"}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/13/20 02:34:30 \
Out[80]=",ExpressionUUID->"6bdd1f39-7fe3-4698-b8ac-53e29d4af4e6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"LibraryFunctionUnload", "[", "func", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Remove", "[", "func", "]"}]}], "Input",
 CellLabel->
  "5/13/20 02:34:32 \
In[81]:=",ExpressionUUID->"43f556ba-8853-4883-9491-5ef41b703a9c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: addition of two real numbers (successful)", "Subsubsection",ExpressionUUID->"580cdcd0-72eb-4191-abc9-b65e2380a377"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateLibrary", "[", 
  RowBox[{
   RowBox[{"File", "@", "\"\<Addition\\\\Addition.cpp\>\""}], 
   "\[IndentingNewLine]", ",", "\"\<liblink_Addition_gcc\>\"", 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", "\"\<Addition\>\""}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"\"\<IncludeDirectories\>\"", "\[Rule]", 
     RowBox[{
     "{", "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\inc\>\"", "}"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<LibraryDirectories\>\"", "\[Rule]", 
     RowBox[{"{", "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\>\"", "}"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<Libraries\>\"", "\[Rule]", 
     RowBox[{"{", "\"\<libgoutil\>\"", "}"}]}]}], "*)"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/13/20 14:47:58 \
In[167]:=",ExpressionUUID->"28b35412-3bc0-423c-8eb3-60f087d80b23"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\Working-\
flerkengen1-19304-2876-40>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\\
mingw64\\\\bin\\\\gcc.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\Working-flerkengen1-\
19304-2876-40\\\\liblink_Addition_gcc.dll\\\" -O2  -I\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\Addition.cpp\\\"  -L\
\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 
    UpTo[300]},
  Scrollbars->True]], "Output",ExpressionUUID->"1622f3aa-32f3-4efb-80d0-\
3d3d388981b2"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\\
liblink_Addition_gcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 14:47:58 \
Out[167]=",ExpressionUUID->"23c2f9e8-fed1-4c7d-ada3-4f651c7fc958"]
}, Open  ]],

Cell[TextData[{
 "List all exported functions in DLL using ",
 StyleBox["tcc -impdef", "Program"],
 " :"
}], "Text",ExpressionUUID->"b69474c4-8b37-43a7-b043-744273d3da8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<tcc\>\"", ",", "\"\<-impdef\>\"", "\[IndentingNewLine]", ",", 
    "\"\<Addition\\\\liblink_Addition_gcc.dll\>\"", "\[IndentingNewLine]", 
    ",", "\"\<-o\>\"", ",", "\"\<Addition\\\\liblink_Addition_gcc.def\>\""}], 
   "\[IndentingNewLine]", "}"}], "//", "safePs"}]], "tempInput",
 CellLabel->
  "5/13/20 03:13:32 \
In[133]:=",ExpressionUUID->"c52eed22-318d-4819-baab-c0479880ead6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "5/13/20 03:13:32 \
Out[133]=",ExpressionUUID->"3d22dd9f-d60f-4198-a1fe-66118f5ecf6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<Addition\\\\liblink_Addition_gcc.def\>\"", ",", "\"\<Lines\>\""}], 
   "]"}], "//", "Multicolumn"}]], "tempInput",
 CellLabel->
  "5/13/20 03:13:34 \
In[134]:=",ExpressionUUID->"40ea4245-b535-4b72-a7fe-327061ad8069"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LIBRARY liblink_Addition_gcc.dll\"\>", "\<\"Addition\"\>", \
"\<\"WolframLibrary_initialize\"\>"},
    {"\<\"\"\>", "\<\"MMinus\"\>", "\<\"WolframLibrary_uninitialize\"\>"},
    {"\<\"EXPORTS\"\>", "\<\"WolframLibrary_getVersion\"\>", ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/13/20 03:13:34 \
Out[134]=",ExpressionUUID->"cdaad315-699a-4529-8c58-1f29a65de6bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\libgoutil.dll\>\"\
", "]"}]], "Input",
 CellLabel->
  "5/13/20 03:57:31 \
In[143]:=",ExpressionUUID->"c4d85d43-e72e-4f35-a7eb-87159faa09c7"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\\
libgoutil.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 03:57:31 \
Out[143]=",ExpressionUUID->"47a899fe-3d24-4444-b2a1-ebb205b36979"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"func", "=", 
  RowBox[{"LibraryFunctionLoad", "[", 
   RowBox[{
   "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Addition\\\\liblink_Addition_\
gcc.dll\>\"", "\[IndentingNewLine]", ",", "\"\<Addition\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"Integer", ",", "Integer"}], "}"}], ",", "Integer"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "5/13/20 03:57:32 \
In[144]:=",ExpressionUUID->"13aa06a4-39c1-429e-a4b8-bd5ee382a05e"],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction", "libload", 
   "\"The function \\!\\(\\*RowBox[{\\\"\\\\\\\"Addition\\\\\\\"\\\"}]\\) was \
not loaded from the file \
\\!\\(\\*RowBox[{\\\"\\\\\\\"D:\\\\\\\\\\\\\\\\gitrepos\\\\\\\\\\\\\\\\golib-\
demo\\\\\\\\\\\\\\\\draft\\\\\\\\\\\\\\\\Addition\\\\\\\\\\\\\\\\liblink_\
Addition_gcc.dll\\\\\\\"\\\"}]\\).\"", 2, 144, 81, 19048939273408150536, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "5/13/20 03:57:32 During evaluation of \
In[144]:=",ExpressionUUID->"78b01015-39e5-469c-b9e7-19d55b015f5a"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->
  "5/13/20 03:57:32 \
Out[144]=",ExpressionUUID->"92cbba78-653e-41ec-8dbb-cc92fa2efd8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["LibraryLink`$LibraryError"], "Input",
 CellLabel->
  "5/13/20 03:57:38 \
In[145]:=",ExpressionUUID->"c23ced02-e372-4133-8a45-9353160dd50c"],

Cell[BoxData["\<\"Library load error 126: The specified module could not be \
found.\\r\\n\"\>"], "Output",
 CellLabel->
  "5/13/20 03:57:38 \
Out[145]=",ExpressionUUID->"75751607-56cc-4dc5-9301-405795249523"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LibraryFunctionInformation", "[", "func", "]"}], "//", 
     "Association"}], "//", 
    RowBox[{"MapAt", "[", 
     RowBox[{"FileNameTake", ",", "\"\<File\>\""}], "]"}]}], "//", 
   "Dataset"}], "//", "DatasetGrid"}]], "tempInput",
 CellLabel->
  "5/13/20 03:04:07 \
In[115]:=",ExpressionUUID->"6ac0ffb9-3976-49c4-823c-c122126d1784"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      ItemBox[
       PaneBox["\<\"ReturnType\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox["Integer",
         ShowStringCharacters->True,
         FontFamily->"Source Code Pro"],
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{60, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"ArgumentTypes\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"Integer", ",", "Integer"}], "}"}],
         StripOnInput->False,
         ShowStringCharacters->False],
        ImageMargins->{{5, 3}, {4, 5}}],
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"File\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"liblink_Addition_gcc.dll\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{230.40000000000003`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"Function\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"Addition\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{76.80000000000001, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]}
    },
    AutoDelete->False,
    BaseStyle->{FontFamily -> "Verdana", FontSize -> 12},
    FrameStyle->GrayLevel[0.7490196078431373],
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  StripOnInput->False,
  ShowAutoStyles->False,
  NumberMarks->False,
  LineBreakWithin->False]], "Output",
 CellLabel->
  "5/13/20 03:04:07 \
Out[115]=",ExpressionUUID->"d0543bc0-c672-48fc-80f9-200f66c49002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"branch", "[", 
     RowBox[{"func", ",", "Plus"}], "]"}], "@@@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "2"}], "}"}]}], "]"}]}], "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Dividers", "\[Rule]", "Center"}]}], "]"}], "&"}]}]], "Input",
 CellLabel->
  "5/13/20 03:07:07 \
In[123]:=",ExpressionUUID->"5636bab5-4705-4c39-bc42-ce3c4df70b90"],

Cell[BoxData[
 TagBox[GridBox[{
    {"6", "15", "1", 
     RowBox[{"-", "3"}], "11", "1"},
    {"6", "15", "1", 
     RowBox[{"-", "3"}], "11", "1"}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/13/20 03:07:07 \
Out[123]=",ExpressionUUID->"77c0309d-d013-4143-8865-b24a85293084"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"LibraryFunctionUnload", "[", "func", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Remove", "[", "func", "]"}]}], "Input",
 CellLabel->
  "5/13/20 03:07:08 \
In[124]:=",ExpressionUUID->"c2a7c018-8f30-4998-8e43-a1f83dcd38f5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: async task (successful)", "Subsubsection",ExpressionUUID->"f84aaa14-5571-4af7-973f-4598fdf9564b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateLibrary", "[", 
  RowBox[{
   RowBox[{
   "File", "@", "\"\<AsynchronousReals\\\\AsynchronousReals.cpp\>\""}], 
   "\[IndentingNewLine]", ",", "\"\<liblink_AsynchronousReals_gcc\>\"", 
   "\[IndentingNewLine]", ",", 
   RowBox[{
   "\"\<TargetDirectory\>\"", "\[Rule]", "\"\<AsynchronousReals\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/13/20 17:31:40 \
In[237]:=",ExpressionUUID->"3d088984-a192-48e2-93aa-747118432f88"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\AsynchronousReals\\\\\
Working-flerkengen1-19304-2876-64>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\
\\mingw64\\\\bin\\\\gcc.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\AsynchronousReals\\\\Working-\
flerkengen1-19304-2876-64\\\\liblink_AsynchronousReals_gcc.dll\\\" -O2  \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\AsynchronousReals\\\\\
AsynchronousReals.cpp\\\"  -L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 
    UpTo[300]},
  Scrollbars->True]], "Output",ExpressionUUID->"c55f9ca0-aa2c-4a66-87d6-\
31427e67b2f0"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\AsynchronousReals\\\
\\liblink_AsynchronousReals_gcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 17:31:41 \
Out[237]=",ExpressionUUID->"a0fea159-0111-4f95-9e89-096940782192"]
}, Open  ]],

Cell[TextData[{
 "List all exported functions in DLL using ",
 StyleBox["tcc -impdef", "Program"],
 " :"
}], "Text",ExpressionUUID->"7bcc7e1d-aac2-45eb-ae15-b061c30557f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<tcc\>\"", ",", "\"\<-impdef\>\"", "\[IndentingNewLine]", ",", 
    "\"\<AsynchronousReals\\\\liblink_AsynchronousReals_gcc.dll\>\"", 
    "\[IndentingNewLine]", ",", "\"\<-o\>\"", ",", 
    "\"\<AsynchronousReals\\\\liblink_AsynchronousReals_gcc.def\>\""}], 
   "\[IndentingNewLine]", "}"}], "//", "safePs"}]], "tempInput",
 CellLabel->
  "5/13/20 17:31:49 \
In[238]:=",ExpressionUUID->"33b648fa-4f63-4d74-bbcf-19bfbb163f44"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "5/13/20 17:31:49 \
Out[238]=",ExpressionUUID->"dbe48e1d-61cc-487b-bbbb-23cfe1ea3335"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<AsynchronousReals\\\\liblink_AsynchronousReals_gcc.def\>\"", ",", 
    "\"\<Lines\>\""}], "]"}], "//", "Multicolumn"}]], "tempInput",
 CellLabel->
  "5/13/20 17:31:50 \
In[239]:=",ExpressionUUID->"f03ee6ae-29db-4fb6-909d-c03c7665eb9b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LIBRARY liblink_AsynchronousReals_gcc.dll\"\>", \
"\<\"WolframLibrary_getVersion\"\>", "\<\"start_background_task\"\>"},
    {"\<\"\"\>", "\<\"WolframLibrary_initialize\"\>", ""},
    {"\<\"EXPORTS\"\>", "\<\"WolframLibrary_uninitialize\"\>", ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/13/20 17:31:50 \
Out[239]=",ExpressionUUID->"a187980c-7e1d-4c20-be7a-9cdcdf55772d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StartBackgroundTask", "=", 
  RowBox[{"LibraryFunctionLoad", "[", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\AsynchronousReals\\\\liblink_\
AsynchronousReals_gcc.dll\>\"", "\[IndentingNewLine]", ",", 
    "\"\<start_background_task\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"Integer", ",", "Real"}], "}"}], ",", "Integer"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "5/13/20 17:31:53 \
In[240]:=",ExpressionUUID->"5ac40876-1a26-43ad-80b4-58c468496e64"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LibraryFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"start_background_task\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"start_background_task\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"Integer", ",", "Real"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "Integer", ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"liblink_AsynchronousReals_gcc.dll\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LibraryFunction[
  "D:\\gitrepos\\golib-demo\\draft\\AsynchronousReals\\liblink_\
AsynchronousReals_gcc.dll", "start_background_task", {Integer, Real}, Integer],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "5/13/20 17:31:53 \
Out[240]=",ExpressionUUID->"6bf7b824-fcd4-4434-95ed-efbb06f93f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LibraryFunctionInformation", "[", "StartBackgroundTask", "]"}], 
     "//", "Association"}], "//", 
    RowBox[{"MapAt", "[", 
     RowBox[{"FileNameTake", ",", "\"\<File\>\""}], "]"}]}], "//", 
   "Dataset"}], "//", "DatasetGrid"}]], "tempInput",
 CellLabel->
  "5/13/20 17:31:55 \
In[241]:=",ExpressionUUID->"38eb0b1c-d0f3-4c98-a625-45d435c32d6f"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      ItemBox[
       PaneBox["\<\"ReturnType\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox["Integer",
         ShowStringCharacters->True,
         FontFamily->"Source Code Pro"],
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{60, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"ArgumentTypes\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"Integer", ",", "Real"}], "}"}],
         StripOnInput->False,
         ShowStringCharacters->False],
        ImageMargins->{{5, 3}, {4, 5}}],
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"File\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"liblink_AsynchronousReals_gcc.dll\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{316.80000000000007`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"Function\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"start_background_task\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{201.60000000000002`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]}
    },
    AutoDelete->False,
    BaseStyle->{FontFamily -> "Verdana", FontSize -> 12},
    FrameStyle->GrayLevel[0.7490196078431373],
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  StripOnInput->False,
  ShowAutoStyles->False,
  NumberMarks->False,
  LineBreakWithin->False]], "Output",
 CellLabel->
  "5/13/20 17:31:55 \
Out[241]=",ExpressionUUID->"2d90d006-7391-464d-9eca-3358b7402fe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Internal`CreateAsynchronousTask"}]], "tempInput",
 CellLabel->
  "5/13/20 17:37:44 \
In[250]:=",ExpressionUUID->"4383b62c-42a9-4ab0-b6a1-ba731585cf32"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Internal`CreateAsynchronousTask\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, True, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"Blocking\"\>", "\[Rule]", "False"}]},
                    {
                    
                    RowBox[{"\<\"PostRemoveAsynchronousTask\"\>", "\[Rule]", 
                    "None"}]},
                    {
                    
                    RowBox[{"\<\"PostStartAsynchronousTask\"\>", "\[Rule]", 
                    "None"}]},
                    {
                    
                    RowBox[{"\<\"PostStopAsynchronousTask\"\>", "\[Rule]", 
                    "None"}]},
                    {
                    
                    RowBox[{"\<\"PreRemoveAsynchronousTask\"\>", "\[Rule]", 
                    "None"}]},
                    {
                    
                    RowBox[{"\<\"PreStartAsynchronousTask\"\>", "\[Rule]", 
                    "None"}]},
                    {
                    
                    RowBox[{"\<\"PreStopAsynchronousTask\"\>", "\[Rule]", 
                    "None"}]},
                    {
                    RowBox[{"\<\"TaskDetail\"\>", "\[Rule]", "\<\"\"\>"}]},
                    {
                    RowBox[{"\<\"UserData\"\>", "\[Rule]", "None"}]},
                    {
                    RowBox[{"\<\"Visible\"\>", "\[Rule]", "True"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "10", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"Blocking\"\>", "\[Rule]", "False"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "10", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldRest", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Internal`CreateAsynchronousTask\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Internal`CreateAsynchronousTask\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Internal`CreateAsynchronousTask", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "Blocking" -> False, "PostRemoveAsynchronousTask" -> None, 
      "PostStartAsynchronousTask" -> None, "PostStopAsynchronousTask" -> None,
       "PreRemoveAsynchronousTask" -> None, "PreStartAsynchronousTask" -> 
      None, "PreStopAsynchronousTask" -> None, "TaskDetail" -> "", "UserData" -> 
      None, "Visible" -> True}, "Attributes" -> {HoldRest, Protected}, 
    "FullName" -> "Internal`CreateAsynchronousTask"], False]]], "Output",
 CellLabel->
  "5/13/20 17:37:45 \
Out[250]=",ExpressionUUID->"5ff510bb-95fe-4b09-8455-f71b58951fff"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"task", "=", 
  RowBox[{"Internal`CreateAsynchronousTask", "[", "\[IndentingNewLine]", 
   RowBox[{"StartBackgroundTask", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"2000", ",", 
      RowBox[{"RandomReal", "[", "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"FullForm", "[", 
       RowBox[{"{", "##", "}"}], "]"}], "]"}], "&"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"\"\<TaskDetail\>\"", "\[Rule]", "\"\<background_task\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "5/13/20 17:33:10 \
In[242]:=",ExpressionUUID->"5695ac2c-1aff-40db-ab26-50a0a73417cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "AsynchronousTaskObject", "[", "\<\"background_task\"\>", ",", "2", ",", 
   RowBox[{" ", "<>"}], "]"}],
  AsynchronousTaskObject[
  "background_task", 2, 19048939273408150536]]], "Output",
 CellLabel->
  "5/13/20 17:33:10 \
Out[242]=",ExpressionUUID->"0e46f2cf-d674-4883-9ff2-1c5a71260f93"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"RemoveAsynchronousTask", "[", "task", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Remove", "[", "task", "]"}]}], "Input",ExpressionUUID->"321837de-\
9e4b-47e3-8f91-d048945ef1c1"],

Cell[BoxData[{
 RowBox[{"LibraryFunctionUnload", "[", "StartBackgroundTask", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Remove", "[", "StartBackgroundTask", "]"}]}], "Input",ExpressionUUID\
->"5005ed1f-c950-42fc-b1e7-8120f1d93279"]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: managed C++ (successful)", "Subsubsection",ExpressionUUID->"86b51591-fa9b-4d41-849e-224051275482"],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$CCompiler", "=", "gppCfg"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CompileTemplate", "[", 
    RowBox[{"template", "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", 
      RowBox[{"Directory", "[", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-Wall -Wextra\>\""}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<Defines\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(*", "\"\<__int64=wint64\>\"", "*)"}], 
       RowBox[{"(*", "\"\<MLINTERFACE=3\>\"", "*)"}], "}"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"\"\<Libraries\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<stdc++\>\"", "}"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"Language", "\[Rule]", "\"\<C++\>\""}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-std=c++11\>\""}]}], 
      "*)"}], "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<Debug\>\"", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "tempInput",ExpressionUUID->\
"228df198-a599-4ee4-bfb6-8448acedbef7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$CCompiler", "=", "gppCfg"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CreateLibrary", "[", 
    RowBox[{
     RowBox[{"File", "@", "\"\<demo_managed_cxx\\\\demo_managed.cxx\>\""}], 
     "\[IndentingNewLine]", ",", "\"\<liblink_demo_managed_cxx_gcc\>\"", 
     "\[IndentingNewLine]", ",", 
     RowBox[{
     "\"\<TargetDirectory\>\"", "\[Rule]", "\"\<demo_managed_cxx\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/13/20 18:06:26 \
In[252]:=",ExpressionUUID->"dfc50d0c-a4e8-4ead-90ae-a3f34a5afeb2"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_managed_cxx\\\\\
Working-flerkengen1-19304-2876-66>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\
\\mingw64\\\\bin\\\\g++.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_managed_cxx\\\\Working-\
flerkengen1-19304-2876-66\\\\liblink_demo_managed_cxx_gcc.dll\\\" -O2  \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_managed_cxx\\\\demo_managed.\
cxx\\\"  -L\\\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\12.1\
\\\\SystemFiles\\\\Links\\\\MathLink\\\\DeveloperKit\\\\Windows-x86-64\\\\\
CompilerAdditions\\\" -L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 
    UpTo[300]},
  Scrollbars->True]], "Output",ExpressionUUID->"1160e45a-7860-4fb5-81d6-\
f714e75c7e82"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_managed_cxx\\\
\\liblink_demo_managed_cxx_gcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 18:06:26 \
Out[252]=",ExpressionUUID->"4362876e-41c9-414d-90e7-72868732bb5f"]
}, Open  ]],

Cell[TextData[{
 "List all exported functions in DLL using ",
 StyleBox["tcc -impdef", "Program"],
 " :"
}], "Text",ExpressionUUID->"c9ca833b-5311-4a71-9b21-6615d43ba59b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<tcc\>\"", ",", "\"\<-impdef\>\"", "\[IndentingNewLine]", ",", 
    "\"\<demo_managed_cxx\\\\liblink_demo_managed_cxx_gcc.dll\>\"", 
    "\[IndentingNewLine]", ",", "\"\<-o\>\"", ",", 
    "\"\<demo_managed_cxx\\\\liblink_demo_managed_cxx_gcc.def\>\""}], 
   "\[IndentingNewLine]", "}"}], "//", "safePs"}]], "tempInput",
 CellLabel->
  "5/13/20 18:06:43 \
In[253]:=",ExpressionUUID->"19e66e33-6949-4f98-a805-2eed00ed876a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "5/13/20 18:06:43 \
Out[253]=",ExpressionUUID->"96098baf-3530-4459-9b1e-94b61e8d87f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<demo_managed_cxx\\\\liblink_demo_managed_cxx_gcc.def\>\"", ",", 
    "\"\<Lines\>\""}], "]"}], "//", "Multicolumn"}]], "tempInput",
 CellLabel->
  "5/13/20 18:06:45 \
In[254]:=",ExpressionUUID->"cdddd817-837a-4cde-b58c-67a5ec6e3a00"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LIBRARY liblink_demo_managed_cxx_gcc.dll\"\>", \
"\<\"WolframLibrary_getVersion\"\>", \
"\<\"_Z15manage_instanceP21st_WolframLibraryDataix\"\>", \
"\<\"getInstanceState\"\>"},
    {"\<\"\"\>", "\<\"WolframLibrary_initialize\"\>", \
"\<\"generateFromInstance\"\>", "\<\"releaseInstance\"\>"},
    {"\<\"EXPORTS\"\>", "\<\"WolframLibrary_uninitialize\"\>", \
"\<\"getAllInstanceIDs\"\>", "\<\"setInstanceState\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/13/20 18:06:45 \
Out[254]=",ExpressionUUID->"a9ebba5e-fc20-4d77-ba36-37c5d5017696"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lib", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], ",", "\"\<demo_managed_cxx\>\"", 
        ",", "\"\<liblink_demo_managed_cxx_gcc.dll\>\""}], "}"}], "]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"setInstanceState", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"lib", ",", "\"\<setInstanceState\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"Integer", ",", "1"}], "}"}]}], "}"}], ",", 
       "\"\<Void\>\""}], "]"}]}], "\[IndentingNewLine]", ";", 
    RowBox[{"getInstanceState", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"lib", ",", "\"\<getInstanceState\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"{", "Integer", "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Integer", ",", "1"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ";", 
    RowBox[{"releaseInstance", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"lib", ",", "\"\<releaseInstance\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"{", "Integer", "}"}], "}"}], ",", "\"\<Void\>\""}], "]"}]}], 
    "\[IndentingNewLine]", ";", 
    RowBox[{"generateFromInstance", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"lib", ",", "\"\<generateFromInstance\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"Integer", ",", "_"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Real", ",", "_"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    ";", 
    RowBox[{"getAllInstanceIDs", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"lib", ",", "\"\<getAllInstanceIDs\>\"", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Integer", ",", "1"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ";"}]}], "]"}]], "Input",ExpressionUUID->"1f5272cf-\
a373-42dd-aaa4-614fc3c35ff1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LibraryFunctionInformation", "[", "generateFromInstance", "]"}],
      "//", "Association"}], "//", 
    RowBox[{"MapAt", "[", 
     RowBox[{"FileNameTake", ",", "\"\<File\>\""}], "]"}]}], "//", 
   "Dataset"}], "//", "DatasetGrid"}]], "tempInput",
 CellLabel->
  "5/13/20 18:11:39 \
In[259]:=",ExpressionUUID->"fd53d612-c737-40d5-abb3-529aa12ba9c8"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      ItemBox[
       PaneBox["\<\"ReturnType\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"Real", ",", "_"}], "}"}],
         StripOnInput->False,
         ShowStringCharacters->False],
        ImageMargins->{{5, 3}, {4, 5}}],
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"ArgumentTypes\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        TemplateBox[{"\"  { \"", 
          SubscriptBox["\"\[Ellipsis]\"", "2"], "\" }  \""},
         "RowDefault"],
        ImageMargins->{{5, 3}, {4, 5}}],
       BaseStyle->{
         GrayLevel[0.5]},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"File\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"liblink_demo_managed_cxx_gcc.dll\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{307.20000000000005`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"Function\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"generateFromInstance\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{192.00000000000003`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]}
    },
    AutoDelete->False,
    BaseStyle->{FontFamily -> "Verdana", FontSize -> 12},
    FrameStyle->GrayLevel[0.7490196078431373],
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  StripOnInput->False,
  ShowAutoStyles->False,
  NumberMarks->False,
  LineBreakWithin->False]], "Output",
 CellLabel->
  "5/13/20 18:11:39 \
Out[259]=",ExpressionUUID->"b2f1c5d0-52ae-49f4-9ab5-0be53756382c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"LibraryUnload", "@", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directory", "[", "]"}], ",", "\"\<demo_managed_cxx\>\"", ",", 
     "\"\<liblink_demo_managed_cxx_gcc.dll\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Remove", "[", 
  RowBox[{
  "setInstanceState", ",", "getInstanceState", ",", "releaseInstance", ",", 
   "generateFromInstance", ",", "getAllInstanceIDs"}], "]"}]}], "Input",
 CellLabel->
  "5/13/20 18:13:57 \
In[260]:=",ExpressionUUID->"2002e1ac-5920-492e-85d9-a8a89571ef0a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: external FFmpeg libs", "Subsubsection",ExpressionUUID->"35afc057-47d4-41ab-9ada-2dcc3b3c2315"],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$CCompiler", "=", "gppCfg"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CreateLibrary", "[", 
    RowBox[{
     RowBox[{"File", "@", "\"\<demo_managed_cxx\\\\demo_managed.cxx\>\""}], 
     "\[IndentingNewLine]", ",", "\"\<liblink_demo_managed_cxx_gcc\>\"", 
     "\[IndentingNewLine]", ",", 
     RowBox[{
     "\"\<TargetDirectory\>\"", "\[Rule]", "\"\<demo_managed_cxx\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "tempInput",\
ExpressionUUID->"b2d0bfa5-993d-48b7-a11f-3d67a46f8f51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\"\<avutil-52\>\"", ",", "\"\<swscale-2\>\"", ",", "\"\<avcodec-55\>\"", 
   ",", "\"\<avformat-55\>\"", ",", "\"\<swresample-0\>\"", ",", 
   "\"\<postproc-52\>\"", ",", "\"\<avfilter-4\>\"", ",", 
   "\"\<avdevice-55\>\""}], "}"}]], "tempInput",ExpressionUUID->"0caf8968-\
29ba-4d49-9b1e-dfd8c8e78458"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pipe", "[", 
   RowBox[{"FileNameTake", ",", "FileBaseName"}], "]"}], "/@", 
  RowBox[{
  "FileNames", "[", 
   "\"\<C:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\lib\\\\*.lib\>\"", 
   "]"}]}]], "tempInput",
 CellLabel->
  "5/13/20 18:56:09 \
In[272]:=",ExpressionUUID->"a3314c96-17a1-4511-af87-6e99dfbedeb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"avcodec\"\>", ",", "\<\"avdevice\"\>", ",", "\<\"avfilter\"\>",
    ",", "\<\"avformat\"\>", ",", "\<\"avutil\"\>", ",", "\<\"postproc\"\>", 
   ",", "\<\"swresample\"\>", ",", "\<\"swscale\"\>"}], "}"}]], "Output",
 CellLabel->
  "5/13/20 18:56:09 \
Out[272]=",ExpressionUUID->"c357134a-1720-4974-aaaa-39377a2e3ee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lib", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$CCompiler", "=", "gppCfg"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"CreateLibrary", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"File", "@", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<demo_ffmpeg\>\"", ",", "\"\<image_video.cxx\>\""}], 
         "}"}], "]"}]}], "\[IndentingNewLine]", ",", 
      "\"\<liblink_ffmpeg_gcc\>\"", "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Debug\>\"", "\[Rule]", "True"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-std=c++17\>\""}]}],
        "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Defines\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"(*", "\"\<_WIN32\>\"", "*)"}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", "\"\<demo_ffmpeg\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<IncludeDirectories\>\"", "\[Rule]", 
       RowBox[{
       "{", "\[IndentingNewLine]", 
        "\"\<C:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include\>\"", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         ",", "\"\<C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\\
lib\\\\gcc\\\\x86_64-w64-mingw32\\\\8.1.0\\\\include\\\\c++\>\""}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<LibraryDirectories\>\"", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "\"\<C:\\\\Portable\\\\ffmpeg-4.2.2-win64-shared\\\\bin\>\"", ","}], 
         "*)"}], "\[IndentingNewLine]", 
        "\"\<C:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\lib\>\"", 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Libraries\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<avcodec\>\"", ",", "\"\<avdevice\>\"", ",", "\"\<avfilter\>\"", 
         ",", "\"\<avformat\>\"", ",", "\"\<avutil\>\"", ",", 
         "\"\<postproc\>\"", ",", "\"\<swresample\>\"", ",", 
         "\"\<swscale\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "5/13/20 20:07:05 \
In[344]:=",ExpressionUUID->"e8c535b1-dd38-488d-b66a-5cc377895739"],

Cell[BoxData["\<\"\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\\
Working-flerkengen1-19304-2876-81>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\
\\mingw64\\\\bin\\\\g++.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\Working-\
flerkengen1-19304-2876-81\\\\liblink_ffmpeg_gcc.dll\\\" -g -O2  \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
-I\\\"C:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx\\\
\"  -L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\" -L\\\"C:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\lib\\\"  -l\\\"avcodec\
\\\" -l\\\"avdevice\\\" -l\\\"avfilter\\\" -l\\\"avformat\\\" \
-l\\\"avutil\\\" -l\\\"postproc\\\" -l\\\"swresample\\\" -l\\\"swscale\\\"  \
2>&1 \\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.\
cxx: In function 'void \
ffmpegInitialize()':\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\
\\image_video.cxx:52:18: warning: 'void av_register_all()' is deprecated \
[-Wdeprecated-declarations]\\n  av_register_all();\\n                  ^\\nIn \
file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:13:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavformat/avformat.h:\
2050:6: note: declared here\\n void av_register_all(void);\\n      \
^~~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\\
image_video.cxx:52:18: warning: 'void av_register_all()' is deprecated \
[-Wdeprecated-declarations]\\n  av_register_all();\\n                  ^\\nIn \
file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:13:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavformat/avformat.h:\
2050:6: note: declared here\\n void av_register_all(void);\\n      \
^~~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\\
image_video.cxx: In function 'int videoHandleNew(const char*, int, int, \
AVPixelFormat, \
st_VideoHandle**)':\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\\
image_video.cxx:79:44: warning: 'AVStream::codec' is deprecated \
[-Wdeprecated-declarations]\\n   if \
((*vh)->avFormatContext->streams[ii]->codec->codec_type == \
AVMEDIA_TYPE_VIDEO) {\\n                                            \
^~~~~\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:13:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavformat/avformat.h:\
885:21: note: declared here\\n     AVCodecContext *codec;\\n                  \
   ^~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_\
video.cxx:79:44: warning: 'AVStream::codec' is deprecated \
[-Wdeprecated-declarations]\\n   if \
((*vh)->avFormatContext->streams[ii]->codec->codec_type == \
AVMEDIA_TYPE_VIDEO) {\\n                                            \
^~~~~\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:13:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavformat/avformat.h:\
885:21: note: declared here\\n     AVCodecContext *codec;\\n                  \
   ^~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_\
video.cxx:79:44: warning: 'AVStream::codec' is deprecated \
[-Wdeprecated-declarations]\\n   if \
((*vh)->avFormatContext->streams[ii]->codec->codec_type == \
AVMEDIA_TYPE_VIDEO) {\\n                                            \
^~~~~\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:13:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavformat/avformat.h:\
885:21: note: declared here\\n     AVCodecContext *codec;\\n                  \
   ^~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_\
video.cxx:89:84: warning: 'AVStream::codec' is deprecated \
[-Wdeprecated-declarations]\\n  (*vh)->avCodecContext = \
(*vh)->avFormatContext->streams[(*vh)->videoStreamIndex]->codec;\\n           \
                                                                         ^~~~~\
\\nIn file included from D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\
\\\\image_video.cxx:13:\\nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/\
libavformat/avformat.h:885:21: note: declared here\\n     AVCodecContext \
*codec;\\n                     \
^~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.\
cxx:89:84: warning: 'AVStream::codec' is deprecated \
[-Wdeprecated-declarations]\\n  (*vh)->avCodecContext = \
(*vh)->avFormatContext->streams[(*vh)->videoStreamIndex]->codec;\\n           \
                                                                         ^~~~~\
\\nIn file included from D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\
\\\\image_video.cxx:13:\\nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/\
libavformat/avformat.h:885:21: note: declared here\\n     AVCodecContext \
*codec;\\n                     \
^~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.\
cxx:89:84: warning: 'AVStream::codec' is deprecated \
[-Wdeprecated-declarations]\\n  (*vh)->avCodecContext = \
(*vh)->avFormatContext->streams[(*vh)->videoStreamIndex]->codec;\\n           \
                                                                         ^~~~~\
\\nIn file included from D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\
\\\\image_video.cxx:13:\\nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/\
libavformat/avformat.h:885:21: note: declared here\\n     AVCodecContext \
*codec;\\n                     \
^~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.\
cxx:112:134: warning: 'int avpicture_get_size(AVPixelFormat, int, int)' is \
deprecated [-Wdeprecated-declarations]\\n  (*vh)->videoBuffer = (uint8_t \
*)malloc(avpicture_get_size((*vh)->format, (*vh)->avCodecContext->width, \
(*vh)->avCodecContext->height));\\n                                           \
                                                                              \
             ^\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:12:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavcodec/avcodec.h:\
5510:5: note: declared here\\n int avpicture_get_size(enum AVPixelFormat \
pix_fmt, int width, int height);\\n     ^~~~~~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\
\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:112:134: warning: \
'int avpicture_get_size(AVPixelFormat, int, int)' is deprecated \
[-Wdeprecated-declarations]\\n  (*vh)->videoBuffer = (uint8_t \
*)malloc(avpicture_get_size((*vh)->format, (*vh)->avCodecContext->width, \
(*vh)->avCodecContext->height));\\n                                           \
                                                                              \
             ^\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:12:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavcodec/avcodec.h:\
5510:5: note: declared here\\n int avpicture_get_size(enum AVPixelFormat \
pix_fmt, int width, int height);\\n     ^~~~~~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\
\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:115:144: warning: \
'int avpicture_fill(AVPicture*, const uint8_t*, AVPixelFormat, int, int)' is \
deprecated [-Wdeprecated-declarations]\\n  avpicture_fill((AVPicture \
*)(*vh)->avFrameData, (*vh)->videoBuffer, (*vh)->format, \
(*vh)->avCodecContext->width, (*vh)->avCodecContext->height);\\n              \
                                                                              \
                                                    ^\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:12:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavcodec/avcodec.h:\
5495:5: note: declared here\\n int avpicture_fill(AVPicture *picture, const \
uint8_t *ptr,\\n     ^~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\
\\demo_ffmpeg\\\\image_video.cxx:115:144: warning: 'int \
avpicture_fill(AVPicture*, const uint8_t*, AVPixelFormat, int, int)' is \
deprecated [-Wdeprecated-declarations]\\n  avpicture_fill((AVPicture \
*)(*vh)->avFrameData, (*vh)->videoBuffer, (*vh)->format, \
(*vh)->avCodecContext->width, (*vh)->avCodecContext->height);\\n              \
                                                                              \
                                                    ^\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:12:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavcodec/avcodec.h:\
5495:5: note: declared here\\n int avpicture_fill(AVPicture *picture, const \
uint8_t *ptr,\\n     ^~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\
\\demo_ffmpeg\\\\image_video.cxx: In function 'void \
ffmpegSkipFrame(st_VideoHandle**)':\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\
\\demo_ffmpeg\\\\image_video.cxx:150:84: warning: 'int \
avcodec_decode_video2(AVCodecContext*, AVFrame*, int*, const AVPacket*)' is \
deprecated [-Wdeprecated-declarations]\\n    \
avcodec_decode_video2((*vh)->avCodecContext, (*vh)->avFrameRaw, &status, \
&packet);\\n                                                                  \
                  ^\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:12:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavcodec/avcodec.h:\
4828:5: note: declared here\\n int avcodec_decode_video2(AVCodecContext \
*avctx, AVFrame *picture,\\n     \
^~~~~~~~~~~~~~~~~~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\
\\image_video.cxx:150:84: warning: 'int \
avcodec_decode_video2(AVCodecContext*, AVFrame*, int*, const AVPacket*)' is \
deprecated [-Wdeprecated-declarations]\\n    \
avcodec_decode_video2((*vh)->avCodecContext, (*vh)->avFrameRaw, &status, \
&packet);\\n                                                                  \
                  ^\\nIn file included from \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\image_video.cxx:12:\\\
nC:\\\\Portable\\\\ffmpeg-4.2.2-win64-dev\\\\include/libavcodec/avcodec.h:\
4828:5: note: declared here\\n int avcodec_decode_video2(AVCodecContext \
*avctx, AVFrame *picture,\\n     ^~~~~~~~~~~~~~~~~~~~~\"\>"], "Print",
 CellLabel->
  "5/13/20 20:07:06 During evaluation of \
In[344]:=",ExpressionUUID->"991aa152-6398-4722-9d9b-07a6efea7078"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\\
liblink_ffmpeg_gcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 20:07:06 \
Out[344]=",ExpressionUUID->"97ccaae6-254c-41ca-bd1d-e6c672a95a1a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LibraryLoad", "/@", 
  RowBox[{
  "FileNames", "[", 
   "\"\<C:\\\\Portable\\\\ffmpeg-4.2.2-win64-shared\\\\bin\\\\*.dll\>\"", 
   "]"}]}]], "Input",
 CellLabel->
  "5/13/20 19:20:22 \
In[294]:=",ExpressionUUID->"2c65c3ef-4e45-4b2b-8e5f-f149de3bc7d7"],

Cell["\<\
void manageInstance     libData , mbool mode , mint id
int  releaseInstance    libData , mint Argc  , MArgument * Args , MArgument res
int  oCreate            libData , mint Argc  , MArgument * Args , MArgument  \
Res
int  oSeekFrame         libData , mint Argc  , MArgument * Args , MArgument Res
int  oSeekSeconds       libData , mint Argc  , MArgument * Args , MArgument Res
int  oSkipFrame         libData , mint Argc  , MArgument * Args , MArgument Res
int  oNextFrame         libData , mint Argc  , MArgument * Args , MArgument \
Res\
\>", "Program",ExpressionUUID->"cc8707d2-c53f-470b-8cd4-af19a4082e5f"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "dll", "=", 
     "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\liblink_\
ffmpeg_gcc.dll\>\""}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vDemo`nextFrame", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"dll", ",", "\"\<oNextFrame\>\"", ",", 
       RowBox[{"{", "_Integer", "}"}], ",", 
       RowBox[{"LibraryDataType", "[", "Image", "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", ";", 
    RowBox[{"vDemo`skipFrame", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"dll", ",", "\"\<oSkipFrame\>\"", ",", 
       RowBox[{"{", "_Integer", "}"}], ",", 
       RowBox[{"LibraryDataType", "[", "Image", "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", ";", 
    RowBox[{"vDemo`seekSeconds", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"dll", ",", "\"\<oSeekSeconds\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"_Integer", ",", "_Real", ",", "_Integer"}], "}"}], ",", 
       RowBox[{"LibraryDataType", "[", "Image", "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", ";", 
    RowBox[{"vDemo`seekFrame", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"dll", ",", "\"\<oSeekFrame\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"_Integer", ",", "_Integer", ",", "_Integer"}], "}"}], ",", 
       RowBox[{"LibraryDataType", "[", "Image", "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", ";", 
    RowBox[{"vDemo`openFile", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{"dll", ",", "\"\<oCreate\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"_Integer", ",", "\"\<UTF8String\>\""}], "}"}], ",", 
       "\"\<Void\>\""}], "]"}]}], "\[IndentingNewLine]", ";"}]}], 
  "]"}]], "Input",
 CellLabel->
  "5/13/20 20:09:49 \
In[346]:=",ExpressionUUID->"4b10f55d-4a14-41fb-8fc9-2d8acab6fac1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Names", "[", "\"\<vDemo`*\>\"", "]"}], "//", 
   RowBox[{"Map", "[", 
    RowBox[{"pipe", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", ",", "InputForm", ",", "Inactive"}], "]"}], "&"}], ",", 
      RowBox[{"Inactive", "[", "LibraryFunctionUnload", "]"}]}], "]"}], 
    "]"}]}], "//", "Activate"}]], "Input",
 CellLabel->
  "5/13/20 20:14:00 \
In[368]:=",ExpressionUUID->"b571c803-8e71-4e7b-9943-fbd26f5831ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellLabel->
  "5/13/20 20:14:00 \
Out[368]=",ExpressionUUID->"6a847f09-bc61-4b6c-a9c7-542f12af45a9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Names", "[", "\"\<vDemo`*\>\"", "]"}], "//", 
   RowBox[{"pipe", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", ",", "InputForm", ",", "Inactive"}], "]"}], "&"}], "/@",
        "#"}], "&"}], ",", 
     RowBox[{"Apply", "@", 
      RowBox[{"Inactive", "[", "Remove", "]"}]}]}], "]"}]}], "//", 
  "Activate"}]], "Input",
 CellLabel->
  "5/13/20 20:14:56 \
In[370]:=",ExpressionUUID->"14e43755-0aa8-49c5-b706-ce71556c80f8"],

Cell[BoxData[
 RowBox[{"LibraryUnload", "[", 
  "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\liblink_ffmpeg_\
gcc.dll\>\"", "]"}]], "tempInput",
 CellLabel->
  "5/13/20 20:05:47 \
In[342]:=",ExpressionUUID->"079f6e97-2d4e-464e-b7c0-0ba2f274ff2c"],

Cell[BoxData[
 RowBox[{"LibraryUnload", "/@", 
  RowBox[{
  "FileNames", "[", 
   "\"\<C:\\\\Portable\\\\ffmpeg-4.2.2-win64-shared\\\\bin\\\\*.dll\>\"", 
   "]"}]}]], "tempInput",
 CellLabel->
  "5/13/20 20:06:30 \
In[343]:=",ExpressionUUID->"33ec9f01-16bb-4c4c-9b53-922eb35bef1e"],

Cell["\<\
Carefully unset the instance will trigger automatic release, so \
releaseInstance is not absolutely needed:\
\>", "Comment",ExpressionUUID->"470feae1-98be-4d9a-a617-1b66da82221d"],

Cell[BoxData[
 RowBox[{"releaseInstance", "=", 
  RowBox[{"LibraryFunctionLoad", "[", 
   RowBox[{
   "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_ffmpeg\\\\liblink_\
ffmpeg_gcc.dll\>\"", ",", "\"\<releaseInstance\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"{", "Integer", "}"}], "}"}], ",", "\"\<Void\>\""}], 
   "]"}]}]], "tempInput",
 CellLabel->
  "5/13/20 19:47:34 \
In[323]:=",ExpressionUUID->"4b8ad0d8-270f-48be-a7bd-8b773b231dbf"],

Cell[TextData[{
 "Set ",
 StyleBox["$HistoryLength=0", "Input"],
 " to avoid ",
 StyleBox["inst", "Input"],
 " be referenced by ",
 StyleBox["Out[]", "Input"],
 ", thus preventing releasing:"
}], "Comment",ExpressionUUID->"1695aed4-970b-4820-9be1-622754ce3341"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$HistoryLength", "=", "0"}], "}"}], ",", 
   RowBox[{
    RowBox[{"inst", "=", 
     RowBox[{"CreateManagedLibraryExpression", "[", 
      RowBox[{"\"\<VideoInstance\>\"", ",", "\"\<videoHead\>\""}], "]"}]}], 
    ";", 
    RowBox[{"ToString", "[", "inst", "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "5/13/20 20:12:19 \
In[353]:=",ExpressionUUID->"d808d10a-f679-499f-a895-5b2a8a67dda2"],

Cell[BoxData["\<\"videoHead[1]\"\>"], "Output",
 CellLabel->
  "5/13/20 20:12:20 \
Out[353]=",ExpressionUUID->"122b312d-f06c-485f-ba89-8028c0997530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inst", "//", 
  RowBox[{"branch", "[", 
   RowBox[{"ManagedLibraryExpressionQ", ",", "ManagedLibraryExpressionID"}], 
   "]"}]}]], "Input",
 CellLabel->
  "5/13/20 20:13:23 \
In[365]:=",ExpressionUUID->"dfd8218e-0337-4f14-80e3-51fc63f7845e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "1"}], "}"}]], "Output",
 CellLabel->
  "5/13/20 20:13:23 \
Out[365]=",ExpressionUUID->"72200734-c2cc-461b-942b-56f7c95c4c99"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"vDemo`openFile", "[", 
  RowBox[{
   RowBox[{"ManagedLibraryExpressionID", "[", "inst", "]"}], ",", 
   "\"\<C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\Documentation\\\\English\\\\System\\\\\
ExampleData\\\\Caminandes.mp4\>\""}], "]"}]], "Input",
 CellLabel->
  "5/13/20 20:12:32 \
In[354]:=",ExpressionUUID->"c0e87854-088c-49c1-a8a6-a356f97bf09e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"vDemo`nextFrame", "[", 
     RowBox[{"ManagedLibraryExpressionID", "[", "inst", "]"}], "]"}], ",", 
    "10"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vDemo`nextFrame", "[", 
  RowBox[{"ManagedLibraryExpressionID", "[", "inst", "]"}], "]"}]}], "Input",
 CellLabel->
  "5/13/20 20:12:48 \
In[361]:=",ExpressionUUID->"f54ea43b-83cc-447b-8db4-3694db0891a6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3VdXJE2+7/ctc6FLvQW9C93qUrdH0gs4Z2nrLN1srbW3tM7Ze2bPzGP7
ad9435hu2uC9LzxUFRSFpwoovG9o/9hxP0UGZHVVkSYiMiIzq2DW+g7dQENB
80B++h8R+T/9p//nP/xf/+0//MM//Mv/QP7vP/zH//K//PM//8d//d/+R/Kb
/+Of/uX//s//9I//5//6T//vP/7nf/zn//k//Xfkmbv/zT/8w/9OfvHfk1+3
vuqCaG2vu7lqb+gxrKOx91qdTX2O624ZYKgPPa39wvW2DTDX1z5oWn/HkGED
nQGpDXWPMMX69swet+nH057eYEeAuUDXiGXD3aPcjfSM0YZ7jRvpG+fO7G3Z
vb3R/gnTxgYm0xrvN26sb0Ioo/ehoomhaZNC3E0Gwo4SeZ9e5vTj9VtTwzPX
8uqxjA/zNzEy46BQWpOjYW8bCyppYnSaqfGRKcvGhiczGk9rIvClscFR9vpH
uBrtG2ZqpDfgSsM9Q0oLdA+K1dN/rcGuXqkNdPY4qr+j27S+9i6uets6uetp
7WCuq7mNq86mVts6GlsYakzW3tBgWdvr18y1vnplWsvLl4Y11ddL6Fmyxud1
pjU8qzXtdV1Nsn/I+J+bbrLyk5Wj2FzEVk/rYEbq/GRnKCtHeWkpUVux5NRM
rHbSncSaqJ2cxmMoFk/xuCrt9ZndoypvLOG1kXLZSyKe8ipnNrr1lKin+Axl
7ikuQ6U0PmCdbGepyAuLiXiKJzdsZeUpp8aS7SkntmL1lbGxGg2zsxWLr6xM
pc5WbJ5icZVWpqd4rcRqJlZDOZstifiJ3VO8dmLxkxeWEnWUKlNZucptT432
jtNEzSMzJ/MdtbMjNU0Ggimpuz732g25YhS/Pz4/eWpydNYmj/3kkqtkzaeu
N5Escz7FGounZFjLLXP5adbl1FNuG4vXVqJzLFZzeW+spmRmpuKxFa+3eGzF
Z6xnponYysxTvD7imTk5MZS9h8TqbRu6it9MXthJhom0Aj2j3Ml632mPw+Ga
PVYnseaWm9wyjtueSreRSN5ci3vtn2ywxk3ImY1E8oGdsthTVuv9eJocsk+l
sVTkhr9sTdU7wJVbxnLLWyrWCMo2FqunMnPbV7yzK+vqmbJyV6q9Mj0l20o8
e5+czZWcGGqIy1M8brKzE4+lpPpFwFEqfSVjz5MMS6XuH5LpIJWGybSIN/Mk
2cnxxPTIbFpeX6f7sczPEUtev3/VqTHTl6bGIlfNGOa5oxS5itVT4s6aSGty
+DJRX7HOtXgaHRjxpJH+YeGG+wJMXbNW3+C1eG0lw1te779y4i2VxmL3VrOl
qVht5cRYsvZd8TiK11SZnuK1kshZEU7X5Bk76Hpif5bfSyJucttPrI6yOjtB
T6bFku9XcJ8Tq5f8eB6Dm4bxn5ece0rFdbTXtskFi8gqOBpxPV5PfXGRaMae
8l3jISmpN9lkWlMj6em+YskNW3mVKnddm3MZeIo1N5wlMttSZSyVZ17I8FRm
smzF6y4n+6++OEu+pYw85d45enyOYjWUaH3tgavkmkn2/iZpfmFwk9P09yPy
ft32U+aZDG7vMxIxx9RwyDRvLSTj45DjBbPr5dvUeMZvPhLNuZNyzFOSfKV+
ljVpWubsymiOJdNXXptJ9dyMyVgDQ5aN9n9Jtbn8slaQ1Vqy92CJesvMU27a
StbM6ksvmOOxloin5J8BwW6nL+6xT+xtyJ8zOZ09SZ8FSToHnOU8cNFE1uvx
nmFneR6eD/cXWfmJJXc95DQ2S6maT+RaXvtEpNDYnOup9NT0+JxBs4Z57iUF
nnLnzEBzT1klMr/KxRmW9HWGgwEai6es8nq25QdfeXu+YKutqVjXBDoxlqyz
LGQ7ysxTas/OU+MmJ/V3DGfkzpxJ9Zo8W68Int3t+vnhLjvKylMq7cTrjemR
sG1qnKO2L48/N0xwW3Z5Ss+Zkawy9lPWNhFmzl17TTlyVWq8xlK9X8sv+8CY
LHblKZbsZllmHpNpLT+cLejm+YLsvmpNS7ateKwl555XL68lY14l4imZbmI1
1HX3yG2gc+QqtW7yw7o8FeeAq7oHk9N1e6LxGkr1XIfFT14ZS9ZjS4/dTyrm
EzcxNz53XhqJJ34n3XpKlqVkeUokI09ZJWKtbLSXsLOGhq/FYyw7czmdabl9
5oUf92WxmarVNJW2cnKmhQpP2c2sMj2l5sw8fkPZu0dVzs+BULm3yY37xmZD
qhw1OThNU2EoWSYJjs4wp8Y66suFa/LbsjevvRSanMuupmYt45ljqfEXm6em
R6/HayzZ3nIrqeYycJRdMp3F0nD/oGmBvgHDhnr7aSqM5cX5gvbOakvLylU8
vuJ1lvzzAl+lWarjVXrtL18Y1vai3jInnpLhJtYZlAo7DXWPGaTOTqrW5cm0
lMg5dV7cn4nVRaKJOkrWTIfHTLypdZCsxynuppmJeaa8vmZ3M9bPidP88Bhk
pNJTntvHZU/xWkrEU/a+EveUXU685ZekO2t49FoixnJqLhWm0vLiflkqfMXr
KV5feWErNmO9Sqvz9atrpmI1VmosnnJ2Xp5aRxmb6DKW18nMD2fnuTFXUn0W
uFfJsJSRp1T6idcaobFZrlTaTF3snnLLA9mQ1w7x82Pj+ji89km2JsFS2eap
XHGW1LmWgafsctNZdtbidZaMNYNerxFM91S7YXa+kjHDkrkm8HqvDetqeE1N
ZZeduTI95fy8cfWG4jWStZ/GM1LjJr+syZNxZp3XZrLKqaOmhoI01Wv3ZFlJ
JO+txPIxZ/81+W3Zm9cuCU9Fs7PpSDK7NYA89nJ+76tppoJj5uW6s6SuHxwZ
EzKVTHOpNFVmuXemYIepqXiNxeIr2cYyd5b/PCXTTl546rqh0j3lxtl5bq3F
k+Ent1wl4z5O+ixJ1T1pVftJ9nohp/s4eM9RlrfXXXv880KFpxaYE30fuRzP
54/3cyn6tt3PBzbJ0uzW/zm1lbOClrG6S0v0zAu/xnL+oe19u4ijWPPCWHbO
krX/KtVZrGe4+2N9YIdtMozFYi256wQbrpXpqdRkeUr++ePyDOXUUlaOGu6d
uEqdnbxejyfLK9mUyvsrOVnDZzY7cmN/hedngkn0lOzraK8to9o8t916Srml
PPKUzDmVaF6bSLWnjM6XF/WUKnfJXi/o5JwL1ecLyp9hdabF4itZxpK1D8vY
Wdc9lVp3Y8M1UxllN79y4ilVXpLhKOsZVKqf0hvqI3+2f9xRwwMTwo0MTpo2
FphWntf+8YunRNbzaU4Smd+oXA/kpr3kuu/WEF41M70onKq3637zwnltGs8t
ZbGfyvv5lPWcSrW3/GwuoXshj40bNj46ZpnbzvJiD5aVtVhdpf7M9q5kmZay
yg1jsa4TZPNWI81tT8m9l5PKc/jszcRqKK2RvkmaSjtZWcktP40PBy3jMYcK
33g1g+I5Y8JqFsWzBs6LvRRu7gFx9vG5ZwBWD/g5u4/De59kW+KekpHXNpL2
fSXLPMWbG/5yKyFrmXjKKlmekrV+0M3zBDPvmyUyu5Lrqy7T3PaVrH1Yxr5q
TMvIU3pOTHXdU0NgTdU9b52cT+50jZ4bcyYnjrLzkNNk24Q3LzxlZKaJkcsm
R8OmOdlLJMNNuXZNxuopldfRXrvIi5nSbV+aDS5dteBJXjtOmf9Szqlgzema
QTHHyXFWNvrLcn41PmGaiKnsmhq9nh/WCao6r513LSC7sXpMs7KUE2fJWCPI
uv+KfZ1go2FGnmJxFauneIyk2k5WhpKxx8lo35IbdpI9UxJJ90JmVnMZr60l
Ok8SOdPcylFWlhJdFyfDT373Fd/jdXo9zJfX1/HuOUFdfnkcMoqEFl0tm43F
9N+/gKecJG6qsG2qzeVmzL6y8JQKYxl5yqmx3N53xeMr0VmVva/MPSXDV7Js
JcNX1qYy9pReT5NxRs6yMpeop1Te91Zk9iTrTAhZMyYn6/WceMhpsmzip0Tu
SytzFiXqKJZrmeQ1Vyi9cHA+y1s0bSa0pKzk+/CBgfxsJ3dMs+xhN9tTPP+t
hqajtmXDbIrVU6x5bSUhW01MmsZrKjdmWipnWH64B5bdeRbXrdVrmwpjyVgT
yHo+u52x0j3VnEzEU7yuyvSUG2vyZBhKxrl6RmfguWUnmTOlW08591PmXigZ
54OL7oti8dO1a66Qdd77iN9TIh6aDS8Lde3t+MATXifiEP/6iK258MpVS1zd
VE+xWErEU36eT+VS11w1OZXMylYqrcXjMFmzK7/aimWfVXp9NBZXiTjLDVvx
usrMVpmesnKVnadYXeXUU6ruf6t6DmV2prhf7KTSUHZr2dLmMj40j57d23Zy
j1lRR4mcv2B1PWPnJJHcdJH445RvJh5XeW2Z7Jrl5E6innKaqLWU7eNS9b0k
NGfYTDA9r4wVnA7fiKYmg2mleorHUV47i/ccDKvzBb28rzDvWYGj/f3JdEOx
5s7sqoO4qd0i1fuuWpIZmSrTVqyesnMVj6dkrs+T6Sie+zrZ3dvJ6bl6qvY1
iVhIRix+cdtRvLMmnnjuqyvqJ5ZZlJ1FZsOLTKnwmDuJuSkysyLUtbfjg2v7
29w2VGqXzpmfXbnWracc/LsMo6dYUuEsr53jpqHMPGWXTG+pchnrOkEZ51l4
se8q1VNGuW0sI09lJstTbL5qTTNVZpmu6mvhy8xZmZ4SNRPP2Xoy1vCJOMrM
Uqlnxakwk9szpWxJm/M4mSE5zeyeuiyecnK2udm6GpZrGFZH+dFVfI9ZnZ1Y
XOX1Nb58H8jNrcfr3efK2FIyUrluUNp+LlXfU8JR7kS9JWKvUHBGOK+9JOIo
EU+xWku1vWQay+1zAvmNNWDayEC/abzWkrcu8Lqn0uNbJ8jvq9a0+ltbLPOb
p2Su1XPDUEaWYvGU25ZS5RjRZL8/vznKylOyDJWWQkM5vQ6S/X55PaXCS6y5
YRJZbvH6MeZK87NrKaUbaCGyaliuGstrT3k1v3LiKb/FY67kfiqHnnJ7piXL
U7LPCpThq3RnmXvKyldO5ljO9l11JZPhKX5rtdF0Tw20pWfnK1F3iXpK1b4n
Wfug7DK7l5Eba/ay2VM8tpL1fmTndB0fj5l49xPxuiMys2SaG+6xev/O4vNP
NLImJb85LNc9pfvlume8zcxPMhP1lSv7uRj+GxX6njEzL6VMf82G7GMyWGiW
Oa+9JHNOljyjYjpom5/M5ZWnnM6w7M01aBmPr+xmWLq7nK4LvKw7zVJmWflK
1FWXtVNHDbYbl+kqlniMxeMp1YaS4SaR+8Gm3hPWK0O5ucYuV2Pd8yR7LxTL
OVkqZkGiVvHeSkvELis2sdtHlqX86Ck/WMcsN94Hu39iUlucW+NOtbHczP6/
zxWx//ZnF5ji9VUkfBmLqyzNFY4wx2MvtxI1WHh6htlTqozl5dkX02MTrp0V
yOYra0/JdpbTvVipnjLK3liy7n91uT9rqONLZrbi8RWrqVg95dVZfCoNleoo
J566tVN2+knGHErG+XYyLDUjOXVOYk2ekdxM9pzETZN4nWwTsdspfq2F6Bpt
cT5mmv46MpqfWzVN3n9TclPpKVnu4t+vxe4pvzrLC0/JcJWX5wnaeUrlfYQv
C1im2lUyzrew8hSLq8zWAbIU6Lws1VFGObGV5iY7X2V6ys0zzZ14yomhzCzF
6ymv51BGxvCjpWS4x6vZk9Nz+JzYiec6Jc1C2rUOSYanRK6zrK4N2YvRLO1y
9Tp+Sva1vp8dkiuJesorX7mRMnspclOmocRd5dxTXuXEXpqnaMFQMrdN5eXe
Kl5PyZ9ZWXtK1FasnhobkGUqa0/Zm8qZpwKdHTQRU/F4ymx+xeMp1WdHyJhB
GRmJJf08bz+s18t127hpJFE7ybynksy9SZYGunKUjLxzFPt1HcufF7+O9Yen
nJhARl5bx7OPn8NRMvKbrbLZU86ac7VrLpqZcVQ4HBZqJhROsxRvXs2zZHks
OD5JTWWWfGcNW8bjKydzrGQDA6bZOevSWj2W8TuL73x23VEsnrJ0VkeLYQPt
zZb1tzXRWD2l8iw+mWv5nFhK1FPZtE7PawO57SaRe+mKnCOh4lw81jmUikR8
JPPf52Ulfk0bT8uvnlLlKLc9pfrjsGopun4ttz2lYsal0mLCtppbMu0meuqa
rxx6StRUTj3lxFSy9mD5xVNsprL2lFNf8XpqfNCpqXptTWXnKpmeEjEVi6fs
Xp7pKS/ONJflKaeWyhVPee0ft43Ec265inV8bvhJhpHmyHUQa9loJ14/+XtW
kGK0DNu5Gfd8zvXHKO/v3U9xf+3Pr0hNur8sHMVrK5VzrchslCllppqdNUy1
qTRPpeaFqfzsKXFX8blJtq1kecrcVL1pyTWVla+Mzwl0Yiq/ecoLQ8m0lIin
/HaOhNdOUuEmESfx+mk2uJCWyvsw8Zzt4IadWD2VjTYyamkhnpbKuYETT3np
qOwpNz3F3cJqTnnKbXd9ic1Tynxl4inVpsr0lFNf5aqn+F01QvPaVXa2YvGU
sat6hUzF7yu2+1sZzalYXeUXT8mcR6meSRkZisdTmndkmMqv6/lUzI1kWsnq
bHKeMv1k5ik33CSyns+pl/Si5FqUp3ly7ZZNLRAv8TavwFX8ee0UZy3OryuK
zcii6W+P5evHk69p4iaZRYmdjJI2i40u01R5Sp6zxBwl3VcWnhK1lQxPidjK
izPXnbjK7JwKPluNMOU3W2me0uNz1XVPqXAV732tzFxlZSsvPCXbTqKeku2o
VE+pmDmpcFQ2eMmt+ZIKT7l9nyareZTbbvKDp0QsJCu7uVU2eUqdbbxIraf0
vPzas7SaZE+ZJe3rOHXmdWUrN+I32IJtrniL0VOyZ1Y8nnK6LtCr+wTzmovV
U+m2YvOUSneJnGOR6qnMrF3VR7NylYx1gNy2svCUpbM6Ww1LtZPVyzM9xesl
WYZi9ZQqRyU9NUrex1hQSlPjIaGmJ8LKCk3NKi88HRGO5R72PPHcy1G/JyS9
L6QCMxmeeyXZULLcdOsp9rWAvMn0lPe+YWtpYUMwNv8sL65LyS+eSra4xpzU
uZXT7xX6nMtFT8lyE29SjcXpKVFXZfpK1FMy9lx5Pc/iNdZlo4ZNj31Jtq1E
fMXqqcmAtamuu6rPMDtX2dmKx1RWthrp/pJsTxmZSqan/DB/cuooGZ4S9ZNM
T7nhJT97isdPmYbK9JQb97MV9ZRfjeT59WcWeIot7w2kxkf+9pSe119/Ip6S
6a5s8hTfGkBr03jurEgkmZu2mg3bp9pXXp5lwb9OcIxm5Smj/OorFk+l129q
Kh5byXSWmacy85unZNtJ9j2keJoeCaflhZ9EPeVXG4k4KBy6jP9+9sY5OTOX
/tyV5CUrP7k9a8rleZIqT4nsvcmmZK+T8yrZnlr0OJWecnvWZbVfS8rZGUzu
WmQykPZ6dqmYcSX9leIpo1S5isVTqn3l9Lx1p75KdZJoZnMrFm95sTYwWSBg
mpmnUpNhK5l7rezWBJo6q6vNMDNnZb4801NO1+qJGsqtNX2ZfrLzlFdWUmUm
J7Mj2Y5KnRPJcpSopa7tT5bkqMz92bm850m2aby8jlV13X/rpFtPcbUUE+om
eYrNVPZOcpobnnIyv5LtKSe24rGWu8YaN02GrezmVzK9xeOpqWFrU123Vb9h
dq5iNZZqW/ndU27NoFQYKtNTXvpJpqFUmCkUNE6fL7Ek005OPWV63hOnp+zO
uXJ7L5Sb+5xUzaY8v5Zd5F/3pdpYXrslm42UFZ4S9JPs/DL3WuTsi7GWhPLS
Wbyecuqr1CIz5rllKzfvHWzuLXNP+clXKmzFttdqkDYZMDeViK3cPNPCcF7V
00Ez85SdqZx6yk0/yVjH54an/HBmhMr5Uy55ysxRyfX2nF7i8VSunBfBaimv
TaS1vLzJlFNfeW2QbM6Jf1bJ352Mbj2l3lWqPJU+sxLzlOfuikYNU20rK085
8ZWfz7Nw6iknttILjl/m5tzKma++eErPzlWstpK534r3bIvR3s6kqYyyclZq
1zw1OI7MJgKTQk0OTwk1NTIt3PRokLvgWCiZV2fw+cZPHC6S4SQn+5yE5k5m
frKJd4/03FVm93dRkVtnKaedq8xw/SR0LcdhIJXx2sprk2RLsudJsjyl57Wn
llfWHednW4muDzRfL6jWT24Yy8pTqn3F4ylVsyunnmLz1SR3btlKhq9U7r9K
9ZRZLLaS7StHc6u+TppTT+lzqkxPidopmwyV6qfMVJ5X7qf1e3bnQsieLaly
E4+dVHsq9d9Hc91RrJ4Svn6T7KmVlYRhTudVmXntFNl+8aOdbj3lTW7ajH9+
tSwlL43F4ymnvso0lqinRF3FO8OS56wpIVOJ+krUU5n5ZWY1OTJEM/MUz8zK
qzMtzDzlxFRm6/3cMJQTO6kwlApP+cVNvOdE3HqKzVKZ+6Gz2UpO/p1Z5Voj
T68fBT0l0yF+8ItfvJTznvLT174PTGX/fWuZKVnOkm0tU1fNz6fllq3mZtPz
q6v4jTXFnN9sZeYsVa5icVRmsuZVMs+yYHJVf1daY31dSVMZZeWsVGs58ZSb
hnK6jk+1p/x4Bp+Tc8tl73tS6SlRUzk1lIinvJwlyfCTm6bKZk/JnvH42TLZ
YiSufVRul/H1t7K6wV2umcq6FZqbnnJllpXhKae+EvWUU1/554xAtZ4SXRPI
6ysvZlYsnmKdV6k4v8KRq3ziKTdmUSJ2cuooHk/50U5ODJWWR+eVuzGLsnOU
0f4nGfugvPaTCkO5OafyxFwSPSVqK689k8te8o2nTL7+RDzlprO8M9WKYazz
KlX+cstTqnxl5yk3XOXUU+lN03g85fZaQBnzK9G9VuyuCiSzMxXLvIp3LaAs
V12zlYeecntPlBuGCo2HDVN5n1xVZ+45NZST+0D5yUuse6FY9kVlu6FU+8lt
T3k1n+LdV8XjiVz0lNcOuvWUO+by2lOy/KRinuWmp5yuDdSbn4sym8qteZUz
a02bptpYbnvK6fmA1sYKXMuJqVLnVZm5dYaFmaecmMrMU6J28mpvlCxHqfCU
H+1kZCgzT6leo8diKBEjyTqfL1sM5bad3J5LuW4pBk+Z5gPT3NrIx5GvLZbW
iHG8zM25F5u1jOdSsmdVnq8HXFgwTLWteD3llavsjWXuKLuy0VZO1wCKeEqV
q1w5u2Kg27Dx/u6kqYyyclaqtWR5yu11fbIdJctTfjITi5+u5ZKhcsVT2eqj
bLOO3TWd9H+zZzz/L7Nrcw4fuMivnlojn1+7ZL4tX+Sxk2R6SuWerevfa1ZN
k2ktz/damXhK1FaqPeXk/Ao1tlLrKbddZecrWecBinjKiaucekrYVT73lJ8N
xeMoJ57y4wyK2U9XRcLztFzzlGYjHk/ZnS+RbW5SNUPyZGbE4Syv1kfZzR2W
tc8dS1nsJJm+4X5/skxxw/zkP0+Z+0nUUyzzqSXyema54isGT6myldNzK7w8
c302HEzmhqe8shWrp5zPq4ZpLJ5ysrfKyfo/obWAPvWUW44SPVeC11E8nvKb
nUQNleooM0/JOP9B5Zl7olmd1bdwO3uS6imV12VeecrsY2Bdz2Xrqyzxk+fz
HlV+8fjxxNY2ufLKU6pMxeMp0VmVUVaeUuGqa8bi9JToekDW2ZXIuRVee0rU
VqKe8uIcC1ZPiZtq+FqyXJVqKytPifjK1lWDPb7xlFtr+pycz+fEUjSfnmMu
w052lkr1VC75yc5Oqj2VC35S7Sk3WyXXn2Y5fdup16S8tkrLwXrBnLVSDs1/
ZHtKtq9E/i1BTjHTRI3F4ywWTymdWQl6yomrZM6vUt3l7rzK2FNO5lZuu0pk
XsXiKT5bXXeUSlfpTQ0PueMq4imjJgZ6qKnMsrJWqrcyPeXkHAkZa/qceorH
TjOTs9fywxo+GVZi9VMue0rEUbI8lS1+cnPNnZVjVPlG1uNgfTxm16eqPHWj
Zk+3nnLNWH70lFNTsTiL11PSXbW4eC23TCXzvlYy1wGy+creU07XBPpxHWBo
4jJeV5n7yt5TKlzF4ylHrsoiT3kxi5JpKd1TXq/nc9NP18qB9X1OHLVILLTo
Ezv5YbZ06ym+x2d3ncrrKS/z3Eo3yE9ueIrHWe57Sq2bVHtKmqsMPOWWq0TO
WeeZWc3OqnAVn6NkGUuFq5x4yqmrvjRC89JVvLZicpWJo/zkKS/mT7LW96n0
lB/2QYk0NyPPQm6dw+fEUbqdjMpFT6nY53DTPZX5OFmulW899aXY6hZfHtgi
1z1llPv/rcbTsptTqZpdOfWUY1tZeEq1qZzcv0rkPAs5c6uQJ57yy1kWmZ5y
7qsRw2T7ysxZuqesEvLVUK9lk4O9rnrKyzV8svdJmVnKqadU+EmGk1K9ZJfb
jhI1k9mvWb1kl5uG8uOeJ796SoWFZMZ6vex3T7nmI4/95FdX3RxPxQ1jtZJs
Ty1f5ZmrbDwl4ione6qceMsdX4WkmsqrtYGitrLzFL+rjD3F6yoeU6XaisVT
PDMsHk9pMyqzrKyV6i0WT/nFUY7OmWCwlBNPyZ4/yXQUq6VUekr3EKulnK7X
c1quGOrWU+7Gcy3ulac8nzHdeorJTfFYwrZbT8mdXS0b5KqtGD3llalknBGo
wlN+M5XfPMVuKmtP8bhKtae4zrDwyFNO51B+nEfdZE+xOorHU7ymUr1mT7al
FhX4yUtHqfSU1+vs/Bbv9bijMwAZy8UZCos13HCHXz4+2R+rek8ZO8rJej8Z
rjLylApXmdqKw1N+MJXM8yucespPpnLtbEAOTxmbis1PbphKxFPMc6os9pQK
S8nwlJ2l3PCUm3uhRMpWT8m0lCpPeWkpWZ7y274lv8U748gWP3nti1tPufvx
in7957KnVLkqzVcKPaXCVH7zlEpT+e08QK2ZKX5TpbtK3FMqTDU9ElBiKmqm
YfN1f371lCpLueUprdkpNZ5y62wJUUuJeCrVQiKecnIWXzZ5Khst5Wx/eW54
ao1cm5pl5ykWV6mcH+WaoWR6w+/u8vrj8dpTKr3l1FOqTOWGp7ycU7nlqWw1
lainRE112SjNL6bSPJWatBkVsVRmt5669ZQKQ6XmdO6keh6lar+U3hKxz1KW
WUnUTrK9dJMsZeYqu+tUr42UTZ6ysoEqT/nFVV5/HH73lFNXOfWUsr1VnJ4S
NZUKW2lmsjMWyz6qzEQ8pdJVuegpo2R6itVUop6ydZWBp1KbDvR77imv90Lx
OonVUnaeUn3/KFWOmo8s2eaXdXxOLaWZiNVORt166mZbisdTqa5ivV712kp+
8ZRqF2WLp1R68dZT7K5aXl4WamlpSVoippJhq8vmTJufj3AVjc7aFomEaXOz
4tmZijW3zwBM9dbstN6EZTNT41xZeYkn2fOqa8YaG6RNj9o3NTJgmZ2dzLLa
X2V3/6rRgW4aq6f8MF9S6ahUS4l6SoWfZM2dvPSUm45isRJL2egpr9fz3XRP
rXFev3rtJRWW8tpBudR6fMswN943z0xWrPVkXnoqs9XVVdrNdZW5p0RtxeIq
J56SaSpZzuJ1VSQ4zeQpUVu56SleU9HGh5g9xeqqVFuxOMstT/nFUmn2mXCW
naesikzPJbP3VMSwSHjOtrmZqLTmIwtcRefsm48uMrUwv+Q41vt3qNorbBbv
+hDWcsVSfvAUn4k2HJd6rWiV0fWh14aKr/K3vpZQFq81vDSIcRtCrcc3mRN9
H06Lka9hWa3Rr311rWpWYunKUzfXVWye4nVVNs2pZJjKb57yvakEPMVqKta5
lQpP+XHfU655isVSsjzF6yg7T8k0lOYfp37KRUvxesqvlvKflfzlKSNTeT2P
8oujzDzF66ib4CmvfCXTU26YislVGZ66ea7i8xSPr1jmVPNzzmZVfjGVG57K
KVMJeorHVLngKVXr+/ziqVRXWc2jeC3l1FM8dlqYW7wWi5XsDKU7x8xQRp4S
cVSuWYom4WzzbHeUfCu54ykRV+m5vW/n2no9D+1k5SlRR4l7yv15jxNDeWEq
2Z5yw1Winro5rspuT6k0lcoZVbZ4SvpeKuIoPVFPyTKV3z2lcr/UrafUWcrK
U6n2sZpDpVrHiZNYHOW2p2S6yezn+k23lF88FSPXpmapcNWtp9R4it9d2e0p
t1ylylQqneXEU7ngKq88xeIqGZ7KRlOJeiobTGXpKpc9xWIrEVOZe2oaTguN
B5U0MxkmFpKb9jb1ZqdmbItMz5o2F5RnKV5P8a7nM3OUladk73WS5alcs5RM
T2Wjo/T96jJnRSJZWUrEVSy28pOnvDKU3kbMHUMZJ982XpTNcypPTMXoqVxw
lbGtnHmK1VdWnsrMb67ym6dETOX52r8UR8nwlBNXOZ1dpVpLtqdUWerWU+KO
oj5iMJSRp1SdG5ENllK1lo9lX3Q2OErt3qjs8ZSIq8x8deupL5Yy89TG+nbO
e2pjPWHarakUrv/j9JSfXOXUVpdFbVOxBlD//UI0YmgqJ77y2lQsrnLqKVFT
OfWVsKkMPKUVHPuSF6ZyuvdKpqdUWkq2o4yKTDr3VGailmLxlIw5VGqL0aVk
Ks/g87ujVHqK9ZwpvxnKjbMlst1ToqZKTV9vdhM8pZvJqlRDOSmXPCViq1tT
MZpK0FO54yp7Tzkxlt1aQBZPibjK76aS4SmnpnJrTkWbCNh6yomtsnk+pdJR
fvIUr6VUesqppVLtZNRNtZTKMyaYz+xl9FR2z59y01NOXeXdOXRX+5Q8tJNh
Dh0l7q7s8BTvvCqXTCXbVbS1NdrNdZWYp2S5isdTvK7ys6k0T102mcxtU7m6
/o94KjMrT7lhKj94SpWfwmNfcstSKjyl5xdL2TlKxFPZZinlZ/M5cFSqp9za
+3TrKfmeEjVVLnhK2E4+8NSX2D3jl25NJc9TN9dVzjzF4yozT+W6qYxsZeQp
J7byYu2fpakM/KQVGv+SlaVEXeWWqZx6StX+qOReJhcMlWkpVZ6KhtydTTm1
FI+nssFSbvvJqaVuPeW9p5xaStRV2eQpqW4yaDPulaVy21Nu2CprTZXhqZvn
KjmeEt1npXsqM5mu8svZf6nNhYKWnvLCVKK2Uu0pVbMqt+dTquzklaOMPGXm
KitLsXgqM1WekmEpVk/53VLZ6Kjc9xT72eFp1ojHpRVbXzdPoqNEXOXGPher
3PSSTE8lNnctuwmeEjWVSl9lnatMPHVzXCXPUyKuWpyfMzUVq6u8PK9CpadE
XCXLVLyusnOUU0+5ua9K5nkUKmdQfvCUkaWy1VOyLMXiqVtLqbPUTfaUqTVk
eckuhZ5isdWtp9g8Zeenm+opp6668bMqG0/lkqvc8hSPqew8xeoqL89XV+2p
rJpVKfaUbFPJXu+n8kwJP/iJxVKZnpJtKRZXyfKUiKXsPHVrKXWOSk36XmvO
VF7z2F6HERfxtE4sJCO3PGWW5+cgxPTcM5NVTh3F7y7vLeSlrVRaPStcxeip
XHJVuq3UeIrVVKyeUmkqGdZS7Snfumpy2DArRzn1lJPz1Xlc5RdPqZhHmTpI
gqWy0VO8llqaX7bMLTPJtFS2z6Ry2VPc11+3nsoZT9mZicVTqh31pW2a1wby
2lc31lScnsoFV7kxn2I1FY+n/G4qHleJekr0HEBlrjLxVKapjDwlw1W57CkV
cyg7B9nZivnPMjhKhqfMXKXSU3aWyjZP5YqjvPaTCk95smbNgSduPSXWZjyh
pK2NbUfpPsq2/GqtnHeVoKf8Y6p57lQbisdUvJ7KFVc58ZTT89WFjDU9mszK
UJmFJy6z8pRTX4neB1jGWkBVnlKxro/HUo5jtFS2eYrFUl56yq9uukmOcuop
Lwwly1q3nlJvJLcsdespdWsDs3FmpdpT/jBV9nsqM7+aSuYaQM1Tl015ZipR
T/GYSvdUZrJdlSueUnW/KLccNTc1S3PbU5kxe2ouSluIzqe1OL9g2NLConUe
eSobHHUTDCXiKa+NJNNXt57Kbk9tb+6ktZW4jNs0iYSnbWxseBLv14tb/526
5iqHnvLSVJeu4veU1vLil5YWoq5kZKfF+VnTFqIzts3PhW2bmw1KLTIzzd1s
eCotzVFmuWUqIyfxJuopFaYSc1W/YVMjfZZNDvfSZHsqFywly1OillLlKVtL
3XpKmZ+yzVJ2nvLaQapScf+pW0+p81Smn8w8xdpN95TIGRY55SoJnvLWVAu0
XPRUrpkqNStPibhKeE4VHEtLtqmcekr9rEqup7T5kki54ijPPRWeTTY/Q97O
rHG6o6R76qpbT+XeeX23bmK4XnPBTHFyvWqW12cV+MFIMhwl6qlkW1ue5pm1
BD3lpqmU2kqSp7wz1UJafvaUsamsPSXTVCp8JeqpaFi+qYRcleEpUVex+MmJ
p9TNqrz3VLY6ysxSPJ6SvtZPkad4LHXrqdxe33cT1vGZZXdN6IaZboKnZLlJ
1FG57Cml1nLgKS9cJX2PlURPeWOqBcP86qnrprL3FKupRFwlw1kqPaV8VmXi
KVFTqfSUGlN55ykVMykWT5kZKM1DDixF/3wwzNRcaMa0VBuJpHlK79ZT2esp
r/3EY6hs9ZSs9W5u2ilXPKXKTiJ+uumekmUrp/cd4L3fgdNisZiUZHvKfVMZ
e8rOVV56Kt1WbJ5y01QirlLtKWWzKgtP8Zhqduoy1Z6Scd+qdG8Ze8rOVE49
5WdLsZjK9s/eQE8tLy4lE72Xrqyy3VB+cJTTf6vNFSOJeEqmkZgt5YNz4tz2
kkpL3XRPOTGVjHu5ZaOpVHjKXVNZe8rMVKme4jFV5p9z7rGIElN5MatS7Skl
prLxFKurdE/xuErUUzJNJdtTqpwkupaPx0+strJ83ekwzW+eynSVck9Jvv86
b07OOEpN+GdYlntKxtoXX3hKvz5TaKhUT7jlJrOknWkg6C+v7HTrKTWeEjWV
rPtj35rKbVPZe8rIVEYukpFqT/GayqmrVJlK1FOi56ur8lSmo3hM5cRT8kw1
YJiVs1Kt5aanZO5vcjKnkuUpK0u57alUU4mcRZFqqVzxlKOfX1loqWz3k5ue
MpvPuO2nW0/deiqXPZWNrlLlKXdMxeapaynyFL+r+D0l6ion1pJtKieecnLP
KlFPmZnKylOqTXVTPKXivAhVRYMzNDsrsaTCU8luPeVbT2WLobz2EtNaP0FP
2e2pd8tTPJaS6ilBV5n6ZjNxmY/tlEuekumsm+ipm2sqMU+tLH3JW1OJe0qG
q7yaUzn1lNP7ACdtxeGpVFPZOSp71v3511N+NVR0OmJejnnKzk1m3XrKn5bK
hXV8pnYyyoGnUk3Fun/IbT/ddE/x+mgnsWtbLntKxFV+8JRXphJ1lUpPqTWV
fz3FZirnnnJiKq/W/mme0stlT/GcUZETnpoMgrfIVEhq+po7s3Tz2OXoz956
Kqs95fTnVS56ygsbCVvK4bVb6nUhz3Vk3GEb2vWrTZvkelgv82Us18ey14Ol
ussNT8n2k5WpctVTPF8DfvFUts2pstNU/vaUvankeMqprdw2VaqnnLjKLU9F
pi/jcZQbnnJuKu885aaheD3ktFtP3XrKb57icZNXcygzH6nylNm1oBeeYrFU
pqcyTcXqKaPr6dTncZtLsadE1uqJWurWU849lWtr/0RspdpTakzlf09Zm8of
nmJ1lax7/94kT/l7RiXXU1bmkWkpL800H5q1TTeNF45i8dRiJErLBk/JWLvn
qqX84CmDn73057yPPWW1/o75zzhwlMy+OCnG3EZi3bLNrQ3bWK6Tja6nM59n
eh3O6Im0NXOCnnK69+nWU+6Zi8VeN81T2Wkq557iSb6pIr4zlZWznHgq1VRG
nvLCVJHQ+LVS/SSaTGOJOMuPnnJrDuWFn0Q9JctOueopry0l/HPOxTMlUudP
yadGljLwlO4Sr/dFsexpEplLpV7HGV3jyf63eFFPybBUpqfMroetPGWb7qWt
XcOMPEVLbF2m+yrHPbW9vW2b11bKVk9l014qNzwl11TuesqJqdz0lGxXyfKU
bqpc9xSLqfzsKatSXeWmp7xa06fKUyotdespDy3lpEwjrZCf46vr7K3FaHY/
51Uban2Nr43YZlp211C8c6fN9cv0369tXrWRwPrWDi2e2EZ8K/HlZST9nAhW
b315ndhlKSbKNFRsfc3AU2xr/MxiuR42ernRtTSTATJ8tbO1bZnulOT6wET6
r72wk1eeygZb3XpK7p4qVf6KrZKnK+Rn1sqScE5MJN9Tc8LppuLNq7MrNBPN
z6SnWynz+UalGWpmkqu58ARXRl5KbS5onAxPyTQVu6UGaSJO8qunWB0ly1NJ
EzkwlWorOd4/dWWqzHv52p2TnqueMvo3u1zwVOp8Sr8OoNcEV57S0+daXngq
01KqPaW9XqqnqKP0rjylPaVdnblndM2Y+j6vv/y6p4xMZecpfV8Vi6U2TMyk
XxdnzuR4PLWzs0O79rztvWS7O/vUTNq6Pu1zrc2jdrd3aNrztae3nsouV/F6
yumcV/ZeK7fN5qWnLk0l7imvTOUXTzlxldO9VYuRy0Q8lWYqxZ6yM1W2eIrd
VOo9lWoqlZ5SYSiRWZOT+ZQfLaXPplLnU37zlB/2S3npKc1RXJa6clTSU6tr
11qPxenLtKeaY7Q/p7+fteUYTXuepX+0P8uQkZF4Er0G0t2k79dJXt9dtRWP
XUZepl/j7+3sUhukuiPpLP0M88SX8x70675L162R562Ta+FNmvZrPSNPZbrq
+rq+9DMmeD2leynVRNrT1OvVzNdJfT39c5B8nvZ5Ie3tbeP4+ADv97fw4WAb
nw428GEvjvebS3izNoc3yyGcLExhb/ay47kZvFmM4mx9FeebMexv7eBgO31N
oIpk2corT/nNVzfZU164yqmnYqvLWWcqv3nKrTPXDc+oMLBSprUsI997vZhR
mTnKbVOJe2rQNi88ZWUet9b0ybbRQjjCnW6XW0/511G+s5RETxmVZp4MT6W+
r2z2VPLcgxRPbaWYQ7PU7uZG0lFHB4e0w8NDHBwcUFdp13Ur8Y2kp6ipMjz1
5drP3FMJmz1Rxvuk2Nb1mZU6b0q9JrfbQ2U0m9q5stT27i711M5OAkfxZews
zSEWGsH8aC8ifa2Yan+FiaZaBF5UoLe2Aj015Risq8boy+eY7unAxsw0tdTh
zl5yXSCdZW3vme7DomsHU2ZfVq+X9mcyXLS7tWeblatuPXXrqWzzVLaZyo+e
km0rM19lesrITbqnmExFPKV36ykeU9l7SqWpRDwlK9UzKBE/XfdU2KPs1/gZ
OcpozV+mpVR7yi+WygVPrcdW09qIr9OSM6orT6X6KWkZB46iltLel2ee0rv0
lD7bWU2Q65XtdeytLeJoYxXvyLXHG/J1eko6Jl/rJ+Tr75x8/k83dnCwukE/
99rHvbq+SWdVqevptOtc/Zpxa+tLmZbywlNmMyejNXypc6tMg+0SQ2kl9i7b
S2wiGg4h1PQMg9XFGCz4N/Q8+v8QePKvGMn/HUYL/oCxwj8iVPwdIuV3sVDw
CMF736Hr/l2sNTdif3MTR9r71GxELLVrU6qleGLxE4+nWOdUSdNJcpRfXOW2
p/xqKhFbeemp7DdV7nkq01X6r1PX+9l5ytZWLnjKyFUsnvKjqVgdlYueUrWm
T4af/O6p1JkUyzkUbnrKbUf51lISPKV7aSO+lhbdO3TlqdT5lO6ozXiCliue
0s+T09fMLRNDrWyuYXeV/OwOkZ8HXd2Ybm7BeGMTRl69xnhzM8JdXVgNRqin
tGtp7XFocyrdU0ZeSZ1Laev79FmV7iu7s/quPz9j3qTZjWQ5k7p6nYTJXqdM
S+kvS13fqDtR/7M7dI3fHrXU1v4e9rcSGO7vQ1vhfeqpxddPsNSQh43mYlqi
tRzb7ZW4GHiND8PNeNvWiNXSAnQ/uIeFl/XYJX83J8RnmqcSV7MnO1OJ2CrT
Snvb+5axOivz/MJrjlLsKa9sdespdz0laiojT2W3qfzjKVWmSvu1gKcMTZXi
KTdNxeopmaaS46ohX5jKbU/JPo/PiZWWZqO2LUZmad656jL9cWQ2P6f9dxzh
OotCpqe8MBSLpZx6ymjfElcp6+/EPLVKnq5czaR0S8XSLXXlqVRL6f8Ob+ap
a+sFU97+ZStXrUvxVHKexnm9o32s+nxKW9Onn42QiC9gdTGMhaFu9D2vQnfx
I/SWPkFP0T10F95FX/4DDBQ+wujzF4gNBrC7vInD2A7i68Qyib2kXTSj6Wct
0DLW1KW6JXXfltU5fWnPJ9foepo7MtNfZnlNn+EVfb1c5uvrv9fOgki+vyuX
bexsU0tt7BJXHB3jkDy2QeLNwfIC7JPv/9idwt9XB/DrWg/+HO/DX9aG8NdY
AFgdwW/z/cRVzZiveoLeBz9gru4ptpdW8HbvAJs7e/QsxYS+N4s8NruMPg+Z
JV//ao1iatp6RbOMXl8v1alGrjV6eaprc8FWt54S95SbMyozT2WTqfzsKVWu
SiboqWuv77Kn9KLav1F6YCp2Tw1ZxmsqFa5yw1OyHKXaT2aecpIqS2ldWiqi
xFKZnvLSTm5aSoanuM7yM1zvt5I0VXoZe6gyPKVnaKmrt58+g1rzpad0P2rW
0c/o1vZJaZ4aHepCx9MSvCp8SC01/qwCwRdX1VZguDQf7UUl6CmvxETPMDXV
xuYuLdVTmtFSPZU678n0lZmnUq/N067TDSyVagpeT+3tHtCnup/SztK7et52
qtd04xFPbe7uUE/tHp9QTw10dmKgLB8n0yPAQQhYGwS2h4HDSWBnCtgnz9uc
wl8WB3Ha8xqh4rvouvsdZqorsBFdwMXuPraIqTa2d7k8xRWHpURNxZJbnlLt
Ky885XdTuTGnkumpbDFVNnhKmbc89pRTU/F6SpapZHlK1FSyfaXCU177yZmj
9Jx7yom5rP7M0lwkxVOXLc7PpeXUU167ScRS2e6py7V+l56KxVZoq6sL5HEt
YoU8Ntp6HKsb6/SsBXqG3XoCMZN75qaVcY2gncOQ3spVl7/3ylPx+Couz4i4
vK47TuzifO8I+8FRDD+rRE/JfQxXF2Dq2UNEm4qx21+F45FnOOytQbyxEKNl
99F+7/foqKzG+sQ09rYPsb25d81TSVNZXNOyzqfsPGU0nzKaY6U6y2w+tZE6
i9L/DHm5Njeis6PtS0ulzqe2D4/oWr3JQACdJY+w2t8GJMbxtzix1HY/sdQA
/rLagT+vtOO3uVb8PNOE4946RKvvYSD/PmbJ5z1BPPVu99J3O9Q9icsyPKQ/
Dp4S5O3qsfjJqaW2UtZEmmXmHbv7c8kq6X2HZZ7vYpcsT/ndVKrnVLI9lQ2m
ygVPiVgr83wK/Zx03Up2nkozVYan3DKViKdkmMrcU2yG8runeO/1JDKHUm0p
EUd55SneNEtleuq6paLOLOVDT7lhKaeeojMkCzOxnLunzWdSPaVZSjPVMvn4
NE9RS219uYetdn0dM7DUNV9liae+PJ7L32ue2iGfu5nWV+gqy8dYXTGmX1ZQ
Sx2ON+GnaAfeh5rwaaoFv8x0ItH9EoOF36OhsAShjm5sbexSU+nX0vr9lVKv
H61mBZmeMrtGl+GpRMq8KfV8vNS1ffrr6zMv/ffazEhL95Q2m6JnUewf0PV+
Z/v7mJ2cREfxQwQb6/DzYi/tfKYeJ9O1OB2vxtFIJY4HKvF2jPi0uwaLdQ8x
UvIE0RfV2CDfE98S+xzsH1HjaZba3t2iZ1OklmojkVR7Sn/Zradutqf8ZioW
T2WXqXLPU2auMjrzj8VQhqYy8JQbpvLKU+amGnbdVH7wlExHOfWUE0elempp
bj7pFpFUGYptLhU1zPhM09TSPbWytOybLu8bb5/jvU9OZ1NOPGW0Ri/jPHTt
+VuxBC2xtknT90vp9/ddI0/XjO7La3TmBEuCntLvI5V6H16rtDMnYuQaJ0Ys
FdNNtxHDGTHh2lQIk5UlCBQ9QaTuHhZfPsZpoBJIDAJLTTgfKMR5XxEw10B+
34fttmL0FjzEVG0FNoJRnMe/3JM2c69U5hq/zHVS+v2jrOZTaftxTMxkZCij
57N6KnM+lfTU7jY29nYQPyQvOznA+uEBtk5PcHqwS39et5fcxUBNPt6M1+Bs
rBon3Xdw0P4NTtu/xVnHd3jb+Qg/DhThrLUM8ac/YKI0H4svarA5M4d35P3t
EU9RN12dG+jUT7ye2s3IylMsbjJLv49xZreeyi1TZbrK6pwelnta2N1D0D5r
T2WPqbLTUyvzbC1HZ5Mtzc1cK/V+VFymMvGU6r1Uop6S56qRpKGMcsNU2eYp
lef1ybAUjVrKmadkecvoz1pZysxT9pbyr6eywVEqPJWaft7E1sY2djd2cLh9
gIOtfext7iafr8+jVHsq9XHJ9tRlMeopbd2fdr7e+cYWlsYmMVZWSNM8tfw6
Dx+n64G1bnwcLcdW0/fYfPUdznoKqKd+DrVguLwQfYWPEB0cx/HyBt2DpT0O
/Xo5001m+05SHZXqqUxbJWcgBnMofY2e1VxKz+reTEae0mdV2rq5VE/FDnaw
frRHPbV5fIQ3R/v053xP5SMM1hbgYLCMdtZ7l3bR/QPe9d7Dx958/DRYjNOW
UsSq7lBPLdRXY4N8j9U8tbN7cDkbI5bSZmAsa/hyyVNu2SpXPJUtpkpmc/ap
elPZeyo7TJXbnko1lZGnkrMqiZ5Saapc8pSX51O44SnV558br9cz74uZjFLn
KCeJOIrdUtdd5Vc7+dFRMjyl//vo5tpleyvbtJPVXdrRwgK2QiEcBsfwZi6I
i+Ak7Q35erggf8/7xD5a1Cb0ba1e7kXSTXb1dvX3k7kuz34utUVbjxt3zVP6
GRkcnqJno29dpp2Pvr67ifOdQ0RGpzBUUojhsmIs1tzD+qt8vBuoxEVfOY6a
72O/4Qdsvv4BB+1P8Ot8F35b6Eb4WRW6Hv2AUFs/TubjdI2a5s2VDWLCnZRz
szOvKXVT6S9PMZbZeQGp68F41vYZvZ7V+X7bBo6iBiOvo3tqbe+y5cMdrB7v
IXZyRDs6OcT8YhT9z4toZ8NVOB+txtueu7R33XfxvucefurPx69D5OXNxVgr
/wYjJfmIvqhFfCaCN4ltOp+ij1mzlIWnVO2fyvSU3Zo/lZ5SaSqvPKWX+e8h
TmP+9xuPY7mfhB885X9TRXPeU7qprDzFvebPxlM8rnLTU+KmGklm5Sk3TJUN
nlJ9Hynz/U+8jrruqeXoHHNueMrIUXIt5Y6neN3kpaN4/z1SdCaV6qmt+AZ2
lhJYj6xhYTiM8bZBDNTXo6u6GgNVJeirKMJAUT4CpUUI1FYj3NyI0PAIYnPR
5L8vJ/chpXgqEfvy77B+9JSWtj9Ma2l9BfGdDbzZPsD8RIh6Smup9j7iL/Nw
0llE0zx12HQPO80P8KavhJ4BjtgQZuur0fnwDqZbenEcjdFzFDbWidPIY4mR
61V9XV3m9WvSSPpeJpsz2FLvCbWTct6dkZWunQ2ecZa47qnMeztlekq/py6d
S12t99M9olkqtr9HLbVytIvVowPqqYOjfSwuL2DwRQn5OnpCLfU59BIf+h/g
vOsOtZTW594nSU/FKr6lnpp/WUf3T2me0udTLJ5yYz7ltadUuSrXPJUtpmK9
R586U7F7yt+migqbKts8ZZTuKc1WKjwl21QyPCXmKnZPqV7752dPqXaU2X1u
nVlK3FMqzJX6Z92x1GWX3w/94SdfzJw44l7Pd3UfqO2VZWwtL+FsfRW75Pv6
THsLhuvr0Jl/Fy0Pv8Xgk68wUvgdxov+gNGC32Pi0X/B8N1/Rv+d/4qhe79D
d9ETTL+oxWowiKMY8YN27buRwMbaDk2zlOY0fX/S5V6llOKbJm3RzBz1pc20
Mj2lvW+ta5YixtHSzylcXd/CCvlzC+vk19u7dJ3e3GwEgzUV6K0swULNEyw/
K8BhazHeD9QSUxVgv+URdnsr8SncAuzM4VN0CMOVpegpfILZ/nGcrF7eg2ot
lkje31f3lH7fV/3+XclzyHXrpJxloF+7p56nrc+HjO5Nu51yTkSmo8zu0ZS6
byr1Xrhpe6xSPJWcU115JOmYA/I6xFLa2X7amRTaeRQby8sYeVWBnup8nAVq
8TnYiHc9T/C2+zHe9T/C276H+DCYjx9HinHeXoK1yq8xWp6PhYZLT12Qj+OQ
vC3t7yTzHArdfmbnUmS+fubrXXuZiZ/MEnWTU0fdeiq3TKXCU3ym4vOUf00V
FTaVn/2ktxr90srcbFra8/Q51XLksqXZsGGqPcXqKvc9NXItVk+pmlWp8JSR
d/zkqFRPyXWUek85SZWjzL8f3mxHuekprZ3VFdrGzDQGG1+iMf8x2koKMfK0
CEvtr3Ay1Iyz4VZ8mGjC+/FGfByqx3lPNWL1xQgWfY+2J/fRW5KP4bY27C4t
4XjvgPplM7ZL02y1u6nt9dmgpe4L0j2l7fOJX9lG941mKc0h8Zjmnm1a/Or3
WpqlLn+9IcVTy7FNLK6uU08tExNq16ra19JUQz06SwsQLruL+erH2Hr1mHz8
Vfg8Uo2fx+vw42wbnUv9sjyGhaZytD68i8GyIiyPzeBNfI/e13dxKUY9tUre
dnI+ldhN81Ryr1LK/ZD0c+FSz5RLzqtSPJF6PyndQ/qshvW+t6nr/VKfps66
UmdUybMtrhyl3R+K+kSzFEm795TW+9NT7JK/56mWWvTWFOCgtwLvJ15ST73v
zSOOekK+pvJIBfhptAQXHaWIP/0WYxUFWGp6jk3yvVGbT+3v7tF0z+kfv/7x
0l9rM6y99LTnpebEU3t7e8mn+q9lmUrUU7JN5bWnVPrKazPJ8JQ6U/F7yp+m
ikLUVNnkKc1Pupd0O9HnXa0D1J9nZionnpJpKpmeYnOVM0+pMJUaT4VgVzQY
NIzlz+othMNMidyfye5MB565kNexOorVUuzfD71Zy5fNnkq9z67duX2bqxu0
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
9nRjqK0NAy0t6G9upr8e7ujAeE8PpocGqasiUxN0jrVCrl21mZWe9nutxbmp
jK77itdaIqYy8pQzU42mpdJTfjKV257isVSmp9y0lN89pc5Rl7lhpltPbdAZ
UGIxirFn+Wh58kck2orxduwl3nUX47yjAG9bHuJ922PqqbP2+zjufnhZXx7O
Bgtx2lmOlervMUlcpHtqe3AU77eOqakSS4t0DUJ7XRmeFz1Ab+kTTDyvxKJ2
jdz5Gjv9rbTNtleYqyun92zS7oWrXYMHG15gfymCj3ubOCL+2STXu9q/uQUD
QxjracVwZxPGu9sw0tFMZ1yTXW2kDgw2vkZLWRmayfV859NKtJaXoqWkGE1F
haRi9FTXINLbi/VJYrzODrRXP0VjWSmaysvIn9POn6tC4NULaqK9SISa6sNO
DO+313C6QH4WDfUg+KwCY1WXlgo+L8FEfTFG6wow/qoSG6PEguRr+A25ttAe
s5a2N4vOmoiltLYTh+T69YjOSw72T5Lzky9dXp+nngOouUDfJ5U8F0Lbx3Nw
QD21u0l8vEo8ubiMxGyUdri8jqOVDWLPHRwTRx3vnlBHaa6iTxP71FP6PjLN
TfrcS5vHaG7S0mY3+nzm4FCb6ZzTNE9pnRyf03nWGPm7f1ZVh2dFReh9/Rrx
wV4chSbxNjiG3YEurLwux3TFA+qpd0MV+In46W3PfWqpj0OP8TaQj49jxdRT
sxV/QD/5mtI8lVhbJLbZpvcEmyfXHYG+bnQ0N6CZ2LuBOK2hphrNz+roPGxy
YBBrkQW6vvT4kPjn4BAHe2fUVGf7Fzg/fEcttU/cuhpdRGhsEpPkGmSIXJf0
vXqO7vpa9LyuQ39TPUb6O8jPdfLYN+NJTx0eHuLo8CRpqmz3lGxDueWpXDy3
QsRTck3l3FP+MJW1p7w2FY+n1ubnqKW0n31zE+N0JjXY3ob+1hb0Njaip6GB
PtVcNdjaikB7OwLk55pmrsnAIGYnx5PzKqeeYnUV76zKzFPiphrlNpUTT/nF
VH73FKuhWC3Fu97OS0+Jn83nvFtPqfKUdk/cBF3rt7O+TcyzhuWxYQwXfI3x
ku/xtrsC73oqcUoc9bYzH+ct93DW9ANO2u7grOMuTkjH7T/gqOM+Trsf4ayn
HOsv7iFYchfTxT9gvLwSia4e/Eauyz+srGGm9zVaKx+hufhfMdVCDBZ8jV/X
+oDtUWBvAti5KjGNX+Z6EW+oRKj8AYYff09baWvAT4uzeL+8jGhHBzpL89Cc
fx89JV+jq+hPGCj8IwLk14FC8uu8f0cg/xvysXyLaF0xzgLt+DE8gHcTXTgb
bsR6SwUmS8nbzv8e08Rt2p6v0ScPECotRKSyGPPV5Bq+Mg8jT75D13f/hr67
f8Dks3IcTQ7iYmvlskQc77Y3cBEmP5PaOxB5XoVwbTmmaksw+7IKa72NOA4O
4oD8TDmOhnARixFXrWJveRVHsXUcrx/QTjb2adpZiIloFLHJaayMTSBGfu7t
kf/+tOefEsdpM6edjXVsbW1gd3eLnvOhnetxQDx1uneIc/I8zcR75GfSYn8n
Yk3PMVNdgmDxfcyUPaL3wo01vcBKTy8OpqbpmQ70nLyNTboOUZvlaO1vbl+2
u0f9cXZ4jDfEUAfk2lLbA7Y2PYmF0WHytTJK53jn5OvnR+Knt3uXne/t0vX7
zRWlaHtagfWBNvwSj5K/5zCwOQ2sBvAp1IaL4RpsteYh0XAX7wOVdBZ11v8I
54MP8GbgPs6GnuD9OPFUXznmqr/CUP53WHpVgXPyudTue7bW04nxumr0F99B
X9H35OvtK0xWfoNw5R1aoPBr9D0mXwfPSqhrT7fi+HSyTxxFXEWc89PBBe14
JkK+nrroOYydeQ8x9ORbjBb+gJnirzBLvp4iZX9EsPDfMJz3bxjJ/x0mGkqw
NdmOk0QMb/e36OdeSzNVNntKpaXc8JQqU2Wbp5yYKt1Wcjyl0lRsrrL3lCxb
qfbUuvbxEPtocyltTZ9mJc1N2kwq1VNWrprq78fsyAgWp6awHAzS1mZmsBSZ
oumeWooE0xI1Fe/6PytPiZnquqfsTOXUUyKmku0qNz3Faqil2dlkbs+kstlT
six16yn3PHW6toxgdwf6Hv4e0Wf5+DRQg5PWIhw33aemetN8l5rqvOs+7eTK
VAdtl510lWLz1QOEy+5TTw0XlyLW2o6fNxKESVNoJjZqINaa76vA+/ggddQv
q734dbETP8+34+NMCz5H2vBrtA9/Ww7g15kh7He9QKSqEIFH32GkogjbA104
Iv9dTr1+jY6SJwg1v0Ai8Ipcs9djo6saW7112Ompw0ztQ3qm+2pDBX6bGyNO
WyZOmwNiIfxtaQQfpjqw+roKU2UPMf7kHm2z8SV+nh7Hb+R7+t/Iz4i/RSfw
ZrCNumr48bfoKXqA4IsqbEYm8GEvTj21NRdGrKsbk7V15Fq+CBMVheRx5mGo
9BGGqvIw8bwUAeKYSFcLvQ+yNt86WI2leeowtoPV0AJGyM88bW1cU1kFGkvL
iUWq0P/yBaZ6e6mzTvb3qKl0T53sH1JTaTY41OZWK4sIBQYw/KKGrkMcLrhP
105OFvxATTVC3BjIf4DOomL0lVcgPBigj+Vi/4CmnZVBXUXe3snu5Vnk2nW2
ZraV+UXy87gLL6ue4lVpMeqLCtBQWoKOmmpMtnRidWSSfIpX8V6bY60so+1F
PV6XFGJhmPw978dpvy4F8DbYgbcTjTgbeUk9ddJfgbeD5fgt+AJ/jdQSSz2h
ljrtu4vTwcd4O1qIw55SLNR9i7GSe1h4UYbESD9W+zowVFmGrsI88rnPJ56t
w8nIC3wIteLncBftaKgBc8/z0UHc3FX+CPOTI7jYS+DdyRu8Ifb5uHOKrdkV
jL94hc6SMnqmfaCiBIv1ZdhsfYaz7hq87X+Ot+S/g0PtzPbX+Zgq/Qqtxd+g
q+IHTA10k8/5PP1caUbLZk+ptpRbnsqltX9eeurSVPI85a2p+Dzl1FaqPKXN
prS0f6vS1vdpM6mBttakp7QyPaVHX371+pqtxrq7k65amJxEjFzfLs9N02R7
itdUdp7iN5Wxp1Sv/xPxlExT+dVTMudSomdBqGh1YZ4prxx16ym1noqtbdK0
NX9bG9s4i4Yx8eoZ5gq/wllbFT53FeH09T0ct/xAXHWXmuqs9RGdVb3rKsBp
TxHtuLcI+5152OksQ6wxD1Pl96llxogr4h2vcEE8M9dSR67j/xXRtkJ8WHqO
z6sv8XGxHOezhTiZKsXRRDEOJkpwNFWGU/L0/cxT/GWhGT+GX2C7vRzTZV8T
G3yN+edF2Oomxnn2FJH6EvwUHQV2B/H3eCew1kT7HKonjrqDbfI4sdoFbPTh
08wrnI1VkWvuCpwOl+LNaDn2O4rovpxgxVfY76kEVvrInx/A3yPN+HX6JUCM
h4UOvB+oxlrt9xgr+ApTJd9hub8Zn+IRHC3OYOhVLdrvf4fevPsIlTygTRZ+
i8DDf0f/o98R0/wJA0XfY7jsHhYb67E/1IP1rnastjVjpaONttb2CsHaMgyR
t6/NVLTZyuxTbcb3PUaf/AkB4riFV9XYJH8/Z4kYdnYSNG3/0MnJId5ubmCb
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
n8Gxq4vXa11E+8iPQzim5zk92IkJ3T0UDI8wN0jnJS72uQqgnnbwGr7YqAXH
KzM42NvnPZBF2DdXpvoKjnrZUosfmK/rqW/tr3+ypz7NVG/31OeYar769sxN
Va7zoW562/1/NE9xTapUZFfx7Z/z/KKucZ7n8SU89VL+9JTX3ovASD/iPhsq
GfrMXsxjf3USy1MZTGXCn7wf1WS2kQ/3VPSj8i089TXmAn5LT32upb5HT31L
S4l8/PvMbVrqzlNf0lNX/dKFp+bHnPB0d7GnTsg4u/0PcTTYgvpYRyNkKbHW
ZMMiQ0l2jz2V0nezp7ZKOSyurqM6t4CZ1VXMra9jaaqEgHMYY9o2TIeG8dtS
BIclJ1vqfMaFZ1U/TgpjmBvr4R6APsV9nu8n+lMck7n24yrOQVTOnloZV9Pf
u3ftqXRvM1Z9RpxkdKhFpGyp/WQHRYtNssBE3wP2lF/xE6pkwdMsWS7ay57a
DZMTQlrsh3WYsyp4b6mU8j57qh5R8XqfXX87ar427k8hPLVkliKveECG6WBP
lUcsCIt9ZRVPUCQbiPrUcch87anzyjh+mw9hxdePTF8nr50SdasrR11l16XE
tPEhYrL/g1LvIzbNear32lPCUmK8vzzQjbzsV6TU3Ziz92HSbEVIpmBPVWxa
bIc1OJwwYVfU9fK9eD7nQ50MGR3oYE/l3fTaiXrOtOHP+pQN2PPh2YIfm6mB
huGiOl6/dBzuYE+xqcJ92BzXkhubOfUQeZdcLIwkrLQ/LiHzkCcdavZUWt+O
gkmCRbuaa1Rcy/KRWUIa1Dwy5I0tSGkeItnTiaimlc/NRsiKk7SJ91u+qk8J
T4n+ivvjeiwMtCMpf4SSoRM7IbJR3nVdnzopD+K8Oozj0jBytmZ45P9G1ani
2qfwlKhVCU89rbjo2hpE2apDQtvJnlocNHBPeo5D7AUgejr24HnSghNyY9Xc
gqDkfyPQ/b8Qkfwf5Hsesi8x5cVObBBJQzPyfifO1uexs7V956k7T323nvp4
U319T9001T/RU8v0PK5MVU5OXFvqQzz1dlN9mqeCY31co1qfmcDx1jS2F8t0
XHEyUfzOUz+kp1J4c95mqYk/82mO+nqeynE+v1/fj+mpj63b3/x/Vjfzvvfl
z8/Me7MwPfvF8qU91TDVPJaqC1iZWcKCx02mkWGLxrenDh3Xpg5pfCr2XhLZ
E/v7Dndg1UZjYsU9BLsfI63rRtI5hJX8BBbXNzBF44q5BXq8NRpTzpaRDnth
l7fD20seCjsbCY1gwTfIzhC1m6pDg4DqPkLaX7GdsPD6l710L/f3q8UU2AtL
eU7f2rgKE7pfEFA8RFzfimxfM7ZorC/2qdqNSchTrWSpNhzEDbxfleir7u3+
GVF1E6aHRa/AYWxH+rElai5hOY/dxf6+5X4p9xoXLpq2qrlHntgvaTfYgVqg
vbGnrKsV86KuoryHqKwNs4MmTI/aENXKeQ5aubdRnxKeOsrayYNDOKm48XQu
gGUxT/GGp4ShzoJdOKfHPvO3YWtUjqrhEWKKn8kaTVjzSclFRuySZcSxijqQ
8Ih4fLFfVUot5huaUCRPBUV9SiPDkseBo5wDF2UPr0u7nHJx7/Nn01HkzGq4
ux+iMNyNWsaOw2kjjmZ6cbFoB2pePJ32YTM2QM+7h40p+pUfeFu5J8dpSIld
rwkL9Jon1W3koHYsjfbgNOXivuxbYu2Ru9FTY9WpRJlek6iWTGXqYk+J+tS+
W4a6R8Ge2nJ1k7eaORMDSiT75IiaOjDlNuJgoh/b4hiuPEWWPQl1kT91vJ9y
TvkYlZ52eu3IRvkxnJPLhbuPS3Y8nRnjeme6rwV++QOU6W/XU6O4KHpxWhjh
1+Np2UvXwCimbEYkNN2NHiIjRpx7VDh0kPmGWnA0Sq+3R4P/kBe3g/1IkkMT
hi6kyMtBbTv8avKfTYPVqAPT/mFM2A2YzWdwtLl2balrT33lfLij7jz1Y3hq
5p2Zn53+5LzPSm/KwvTL+fKfvx9ey3pTvnRfiply8YPGT+/y06tZqpQxXyhg
MpHAhD9IrnFwb3Tfn/38Xs2HeOqlOX3v8ZR/yEZm6+OEnCZkQsM856++WcXB
+jR5T/RKj3Pe76k4R/jr1ZQysQ/KtzLV1/bUu1yVizWSjfo/Kp/iqZed9H5P
vctRd576sp761HnQ38ZS7/fUl7TU1/KUyOLUPHtqNegn1yiwZmjFmVPPtal9
8+PXPLVskSAn/xVReQsyegliIzYs51JYWFu/9pTYb2d7aYb3sIjaetlU44qW
RsgfLukj3uM3qn2CuKEZCWMLFn1iX1836rl+1FIG9tRuXMn1qTP6et2jRqbn
HvmhiT2V629hH10UaQwel9J9W9hTe1E9lmncLvaouumpw/QQ++vKU7sRMppH
goKxEzE5jZuVTahaVOypHb8C++EujvBUzd3G/SZy5L64ooM8Y0R1xErHoURK
0YRJo+R6vp8Yu4ucT9NYfmoci+O9PKdtN9DDc8iEp04DnWypY08zlq0dmNTS
85L9m7xyHytkk+OMCTsBCR+rqFOJtUfrIyr2VFIlwZTZiCn6rIxr9eypWacd
O3Er9ieGeF2ayFHew3supfsUiOo6sUB/f5f+vli/djLXh6fLw/h904XTSRdW
gsbXPCV6uIv9n7ZcPbwPsbCUMNWMjfwRG2VPiR59245W7i+/4lBg0tTEa+GE
p5aGNNge78PBuBxHPhWOwlqskVdETxHhqfygDgW7HgH6OmtXsqd2Ygae6yf6
UQhPHQc7cUzXxfpgJ/KqJ5gydFx76qxov/bU8zk3P/eI9j680nsoWhVkbHLW
pJ89JSLWs+1ELcj1qnj9nehxf+Wp+mg39gabOPvjavxB52nda2RPzbsHsE7j
iqxVw9eum9wd6ulE0qbHXMiBbbG/8vrKN/XUx9WlfgxPfQlXfY2+FLfnrHd7
6nNN9bGu+hE99SXrVJ/rKV4jRXl1rl85mUTC47m21JWnAq+Y6lVLvc9T7zXV
GzyV8FoxUwhhd3USh5uzvJZqZnLizlNfyFNvMtWVpz7WVB/jqTd76e2e+hBH
fb6nste5MtO78k/x1G056uu/Z38/nvqk+R0f6Kmr9VMrsQh8Og0WNY9xPtaD
0+FW1Pru4dBJnqIxc408JbLQT66Qkytk7chopIjR+/QK/Te2vLKO6ZnGOGBl
aQG1lUbmUlHERwcxMTiAaL+BDCVFgEzil99DWKyZ6mvBWtCE86lRHOQsZCk9
thNaXge1E1WiFmv0Pl8d1yGle8C9wYUPcv1tPD6+FD3AY+SVBI2FUy2oRTVY
GGvndTyB7nuIq5owN6zHMY23a+F+dsp+RMG97FY9NE7v7URU8ZCc0sz1qeOE
gVyh5jE997kL0Vjb24ZFq4TrUwllN9eHqkNmJG94am1UhdOYjefYHRVHcDbj
xyH5cGrMgCSdM+HBs8wgjgId7IRDstSB+wnmzK3Ia34h0wmrPcCS6M+eIfcF
u7BJ7hLruY5iGqw6tHS+HyGsJAuYezDnciM7YIa7WwK/QtSpJOQ7OSbo+YgI
0wjbCAMtOfro3Fi4drZX1ONkuh+XC8N4vuwgvzqw4CVLRXpRIyOJnguil93R
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
FPa5R6abX5Lt+kdk/OQvZBIutInH4rr5LxS7/yeKP/wf9lTk/geUmfqIUo8/
oej9v3EtLnr/Qwrc/oRcX/yVPVUS749b4m88TGW68ReyfSkM8+Azqi/fpV3H
E9pzPhXGvUfZh59RUDz3WHe24XhIryKL9HPaLCwVoF8zTqrM3abwt39nT62a
H7KnfowZOT8EF+iNf4727E+oLgwMS6E+h/4bb9xLwkkPeQ3aj6579IPzLv3o
fkKbC1+q+zs3Hgk3m59ybe21/Ut6sYK+6h/Sc9OnHNShYCpYCtm23xJm/kL1
1Avr5/TWdVN83q95zV5z6u+U/PpfKfLtnzjZuc+5R/3b8hybajstjJT8mnaS
X9Fe+jZtpr/lrIa/ouj8/yXv7f9D0e//R3hQ/NwavmVLbc/dol1hzVcWYS/x
WDA/dcdwi7O1+DGtzf6N1mf+wp566/9eOHWRcsvfc4/3hvhbDk+1Wz3OWXsK
/fSU1K88dYk89T6ul7qMnoKlyskUpYMhinm8hzyVDtvYVJWsm9oVxVWY9/dq
p027vQr1agU21WXxVDmZEC70sKcs83PH8hQC80hPRR1W9g2cM8xTbKoj9vMd
ODdQmzrwlDawG9ZGRR1mPsq5fsrcwGlxfYGC1gX2VNS5xJ7Kelco4zFQ3rNC
ObeByoEZ8V5rpZ+3rKqn/vHMJEyV4OyviZ+hrG/AQVeeOjtPaS011FORAB2Z
CWpVnGhQicZbyj5V4zPOUkNNNcRTw+pU43KWvdWvPHXlqUlTrdSpISzVFCao
VCqUD/lp8cF3FPjmI9r2LPIcuJ2Vz3nci8BS6K+NI2y1bfiE+zmgpqCsufqE
Snf/jfw3/50it/+LgvduCquIMe6DrzmpB99wf2375x+S7bO/k/fWdQp8fVOc
+1I45ltKP/mOMk/vizwg3+2bZPviU3J9dZ2cX98g47WPaFaM3Ze/+pgsd78Q
x0/JcP06rdy4QdaHDylltfJ7N2pGxVKVSuUa1aotqpQbwoxi/NtY5TFrvVrj
nwHsD5oNBikfDlMjFqVWIk61cJTaiRStVqq00Wiqa1nqnTbV2i2qdlpU67Y5
uFxtNTmd9iqvq1kVXwfzJ6vJHO9ZhPkc6IfrMS9RwG4UYwmT+LvkokLCS07j
NE199xU9FM/H46+v09NvvqCFe9+Q8dF9sk49Idf8LEVNNuplxLgCZstkKLYy
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
o6dGZZinMrHRYVONq1/pPDWpqcb2ATxDT53GVVeeereWepeeQuCpSrNKq/Uq
rYlx3Aus/XVbKXn/Jjmv/Znsn/4rua//Bzm++HeyfP6/+brtk/+f7B/+C9n+
/r/I9tG/kO/Gf5L73jUKPLxFcZdVWCBL7XaDvSbXacn5bDiiniMthSP6YsBT
PA+x7zyM2+EnWAdz53BdOdfh1Ps1Jekf6aVRnpL3k3UqtQ7VVGpJqq9O4Slk
5H36ltIGlpJzBLWmwmVYClkvddhTcJO0kwx8heN6rUfdaptNBUMh8BRstdle
59vgqbWGsJI416l12VLSfzAD5jPitSqVG4pZqy1OvSFer1ZPdWervcrptpu0
ud7jWpZ/cYXc166R5cMPKXLrr5S+8ymVHt6kxO2PyPv5n3kf3cCdaxS6d4MC
394g3+1rvP4KgbPcX30sLPM1pRcfUz0QpFfCn69aW/SisUFve3v0orVJr7pr
nOfdDc72Wo92N9ZpV/z8pt128bmukfP6x5S/+Tdq3L1G+48/pZfT1+nt4of0
w9JH9IPlU/rR+hn9aLtFP9m/pB/s9+il6TbVH92g2Bd/IrswXdO1zP0hdzoH
8zvPd67flacu0kynNdRRnjpuPen34qlqrkildI4tlfSHKeTwkN/qFI5ykNdo
4zpV1Oke66lU0KR6KhWwcDIhG9XzEV57ij2p4KlSJkrlbOxcPQVLIbhcTCUo
EfSTb2VF9ZTeUkd5CtedC0p/PdSlpKfSHiMn4bawqVBbgqe0/f5gq0k9FTQa
2FOwlAxMFbUaVEvBVlFho4h1kaPYSrFUwDjNl2EpJGJWEhfuQrK2BSoJA3Zi
JtotemmrsEJrmUVxfEwvmwv0256T+/692clRr+qlYiJy5alznPN3ek9N5q2j
/DTUU+PqV0M8dVJXjfPUaU11sZ46XBs/j8975anz8ZQ6DlDn/4n31EaZa0qo
LWFdTT4YJP/cE3I+uU/2qYe8j5Pp8UOO5eljss9MkXd2luImE9XjUe6nAEex
pbpNqnfEsVUXtoGpan1fKV+vKcbBnZYYIzWrfLnVqPDldkucb1eo0yhx6tUi
396sKHP/5FGZA6iMizDWwhhHmQ94MDYcNobCY+Y5PpUam0LvINSSkKPspPWT
PsPui34Ywz6n9ly31uQe9jAOW6d/vVOqifenJh+RdWEcpFMQjyFb4nOrlQYH
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
6inv0hzXqNB3Amul2FAuixrYCY6SOXCViXsNojcGjgjOYS/fvHgdil4l8FTa
MU9F9wyvodormoSnPFyf2ist025liU31z20P0Zs4/fYsRltVI5XjbipGh/X7
O5zh+yS9354a12diUk/BUdpM4inZC/60pjpOj/tJPHXStVgn6mGh89Q4V40y
1ThfXXnqclnqIkyl/b+s1lNynDHKUwPWqA7mtJ5SI+tMsE7fQ1pHDfOUdt2V
9NX74Cn919Bfv6j1NKfxlIzaf6SFfvU19To81dT0dISllHQHPIValN5T2uid
eOCoNq8v03tqvd5gU62J7xNZFz+ja5UKhy/X6hw55/HgsfR7gZxb3WkyJ508
l89Tcm+nYbny1Pl66tzen/p9KIqpFCVDIQq6XOS12dhTWGcES3lWTOwp7LmE
fZX0ntJGNZUYv8NUWk9F3Ub2VMK/QrWcjV7v5olonei3VfrlZYueb+RprZkU
r0f41J7CWAXzezDWSkdCwnJO8lnM7Ck4SubAUXP9HK5NwVSoT4XNRsoFTGyn
etLOgatKERNbKuNbYfdg/RT6nUtP4ah1E0fuQ6XzlH1+ik11lKfSbqvqJ5l8
wN6PdWgKfiWwVN4tvl/PMpsq75yiWmCRdvIr9LrhpOfCTDuFRe5LAVP9vGYn
ehkRpsrQ6zUP1bCO6hJ56rJYSvbpO3DUYU/pDXWUp5JhH02SVMTPOdgfbFxO
vn/YWUWaLJ8MjU0hFT52iunIkUFP0XEpZuOck6y5kn97Ttsj48pT785T+sg6
1eReOu68mqMNI/v26ef3aY/a/n7y/KiP01vlOI/houpTozw1ylTa85P6a9jn
Hfdx+vvpv0d9/WxYDU1fKxt2+6hzekMNmI8NpVhKyeD8RnV9mK4XhJyzpzfM
6D7l59d/7+jX6vfhqaMsdZGekn/H9P8/Oq2n9K66LJ46SzcNS6tQpEoqTblI
VHjHI8xhJY/JzPP7OBajEqOBfMuLYow/z16IOwy8XkcfzEOT4XU9Pos6/y+B
NVToSSEuF+NG2u8lhaVawlQdrlP99kOdXu6UxO98hCpFJYfm/43YX2pY8L9n
rJnCPD+smwqLxxUwrHBNSusp7jMhwv37xBGucs0o8S8uU1h4MmE3CI/YqZG0
0mreTd2cg5opC9UTFiqGhE284nG5FrhXBAyE5wqOktHWpTjaPal0npL1KaXH
3/KAp2Apjmaun95TstegNsWA7ZCncu4lygpPlXzztJFepJc1O+0WDdRLzlAv
M0ebhSV603UQ7WO9W4r+seejXkGYKo55f2I8HPGfq6dO20PiLOpN4/aN0meU
p0Y5Kuoyc35PnprkaxzHVKex1SS+GpZCJsY57Z5XvwdPvWtDXZSpLrOntLWr
YY4a5alRH6d1wLHHYBfsqWE5yZoYvZWO+rwnqXHpTXdeGTZvUeupwRx4SpvD
bhped7ry1Nl7apylzstTw/7G/JE8dZz3mHH/TxxmKbxv1rM51VJ+q43cRhM5
hTkCJovSg8JhVT2FmgvmsnGv7gk8xel7Kuk1qp7C5VxkmVYrPvrheUZYqilM
tcm1qn/+2KMX20XqNMWYoBQ9sadgKa5NBQM8zw+WConHNsxT8JPaD71vK8fU
DHnmFigqnoeC10/1mI/aqRCtYa+malDET+slD9sKpioE0Idvnp8fmFPO95vU
U4qlBuf7Ye0UPCV7+amW0nhK5sBUhz2lrU+VfIqpYCmOa5rTjc3Qi6qNtnKL
VPLcpVr4IZvqWd1Ev+0E2VP0MsyPHab8PXjqrC2l9VTMbevnaEeN8lQ65KNJ
kgn71Uyyp6/MJPZS5upNbqjjzC08PH/weLY6jbOO5al+nWriXAJLXXnq7D11
Uf8vnsRTk2V03ek0lrooT513n7Sz9NRlyqjHcFq3XoZcBk+d9ufzvB01rm+5
/r7HdVSnNCLl/EBalX6kq0qFobkoT53UUZN6Cu+Z6OdXjKNPg4/rUnCUfWmZ
A0+hn1/cJSxiU9YEoc8C9jiSex4N85TWVUp9yqTWpuJu4TDPEiW8y5QNmama
ctNGI0C/vKgoNSpaVVz1yyq92ha/y5WoGFsEleQG9/yV6xywp5Q28jzWTqTC
QYo4HLwODJaSnvIuLh14qt9nAuujELmuyjU7Q77FBUq7TNSI+6mXF5YqhNlQ
27UA7TYDtNPw03bdR72ig+pxG2W9ixQ2iufJME/+pUX+eGk3bR+K4fUpxVHu
5TmeUyn3n4JdR3lKmnWwTjV6vh/WT8lj1rtCGY+Bsu5ZTiMwT3sFF23k0K/i
Oyp5H1MzMkdruWV63fUSvY0RvYnS826IunkLz/krDuxHFRwxdj87P531XL7T
eEpfhzrwkz6DjpLzYfXzZCf1FPZ3PAtTTVrPOm5d6jjrtIaZ6rIYS3rq2KZ6
Dz2lt5TWU+/aThdpqitPXXnqXZvhbMxxPrkcj+n99NQkNamTeuo0+0JdeWq8
pSb1FNZMpYMhCtjsXJdyLBvIJqwBT/mNZq5PxZw2rlGhTgJTjapLyT2QtNbS
ewq1KXgq5l6klH+FijG7MJCZTfVqN0E/v8rTb2+bRD936Yf9Fm220uJ7j4rH
Exmw1KSeigd8bCnn0hI7Susptb+f7BcxN8OBf3C/iEk8HpuVigEHNRMBWs0F
leSdbCr0D9+qeTnrZRd1sx6qRMy8D3kUPTtWDIc8Jfe8GuYp19Ksaim/Senr
hxzlqWFB7wkZ7I+FaD2FvhQc4am0e5kyrhlOyfWU1hIm2i1bqR2fo4r/KVUD
U9RJCWfVbPTrvo899cteVjx2J+XDdipEHIf2ix3mqfNY/3TcnnynsdRRnhrt
qOGekn6KOU0ceXkST8FS+kxqqoPbZb/18eYa1r/xPNZRHTfnZatRnjqWqX43
nlJ6w9eKuXeUK0+dNkd56rSf933x1DhXXRYz/BE8dRE/Nxedg5+xyqEc6ikz
kIupR52Vp0Y6aoSnVFdp5/69R57Svx/q/dTMDwbz/FCbinm8bCm30cqBqeAp
D/f0M1HQbOYe6eoesrp9j6Sj4CzsJyuDc8p8v0FPsancBj6H8TiCnnG1jI1a
BRe1K3ba7Phpsx2l9WaYWqUoNQphdd6fmkw/Izwl+6Ojj4ZrcZENBUvJ+X4H
/SeUyH16o1Yz5XweKosxZy0WoHbCRZ2kW8RJ3ZSL1vJ2Wi84xNHM2SjaOVhP
1UiaqRIUBhOPLWpeIffcNPdg58yZyDVrVPez0vdHh6d8xkUKiI/zmwy89xTq
U3L9FJ57/fop7d5Tw211MB8w6xGu8tkOPCWScRu5h3rKqexHVQ1ZaKcinvui
R1yeo5J/mlqJeXHdTG96HqLnCaJXWXq16qVK0ka58AplQ15x9FEuFOKgjyJH
M77XjuPHGSoTVHJaT2Ff3aMyuOfu+BxeFzXcUsN6XeprUtJSZ+GpUaYaHfk6
jK9nXVZPncRXxzWV3lMTm+rKUxfiqfMw1e/NU+fptCtPXc5ceerdeupoQ52t
p05rqStPja5NHcdTjVyee1DI2hQM5TSYObiMuBaXOejpB09hLJ/3O6kQdPA6
HXmUpprEUzzfTwTrp7DXby5k46DWkQ0viXH4IqUjM5SNzVE+bqSi8Ekh4aZc
zMljonI2NrGnSom4sKJb9RQMBVPJ2pR0lFw35Zyb4n56GY+LGokYrRVStFXJ
0VYxTOu5APUyHnH00VbZTZslF1uqlzOJo5W6GRO10lbuT9GMuagmHk/e62JT
BQwmZW8r4SnPvFndMxiWss5ODczzQ10Ka9VgKrmXL2qCWlOpe1Dp1qqN7Q3i
UgJDDfMU9qIq+lZoPe+i3SocaaByYIaq4SlazSzTs6aNft0JE73M0C87UeqW
/JSPGA95KhsOqZ4a9MBkdah0QMlpa1NaM521pY6qRx21h4DWUdqgV6beU5mg
i4YlHXAeinLbgUXxmmiDc7l+5O36fYGH5ai9xU7rq3FGKsSPn2IidGRKyfDE
QW/2Yjo2MqVM/OhM0Kd93F5Y2vWgF+2pWj7LkfuhX3SuPHV58z56alJXnZ1t
qqfMlVnOK2fze3Dc+bfj5+delKcG/uaVlIyb59ct9iNsc3SynE65n763jprz
p81RnjrP+eOn8VQ1nVF7UKCXH3tqyUSORaPI8kDQpw41m6wYK1bEOKwR91Iz
4eNUwk4qBi28DifpXKSYbY6Dy3LfI8w1w5wzGEr2pMARxoKppKvyESsHNQ+l
7mFQEhQ2EV8nL752ORakqhjn1MR4ppZODETrq3o2M+AptTd5f86ddWZGdZRt
+imvm0LPCPRDLwa91M0maauWoN1mmvZrMdqtRNgY+/UQPW+JY8NHOzU7bZYt
tF40ifsvUzO9wmkljdROmYSrbMJVSg/1sHWGfEtTwnJPyb0wQ675aQ5qYvb5
J8JTU5p5fkbhJ1PfUsocS7UHiKwR9j01zlBcO+zfH/MQk3Zx2bGs7u0LR+G1
SjgWxOs2JV7HBWqlnLRdjbCrquFlrlHVIwvClTb6oRehf+wHiV5EaK/jo1pq
kS2M5MIBTjYY5Ixz1CgrjfPUpPP5xrlpWL1pVIa5KeqycuKHcngPgWF1Kbwu
Mnhdj/JUNuTmjDKV3lPDovUUJzzeVOflqUlqTufhqeOY6o/kqeGmyh6Zy+Cp
szbVlaeuPHXlqd9nzv734I/jqU61TL1yP5XimCimWq3mOX8ET5WTyrop9POT
8/uO8hTG92mnhUpinNtK+mm9EKO1fFS4IUCViBhP+028Focd5VpiX8FQ3Kc7
ZOcj3CQdJSM9lQ3CUZZ+VgYTcrCpMmJ8DFOhr1wlGTnSU0gxHmNPYQ9iGMoy
Pc2OGuYp9KTA44zbrVQIeKiRiFCvGKbNapz2qlF63kjQ82aEXnXi9KYXpVfd
MD1ruWmv4aStipU2SmZxfxv3aeikzdTNWLiehTRSHt6zKmpZZFPBUdJUqInB
U66l6aGeQk8K9ApE0INd2+tPO8/yqP6K6rjdZuTErAuUsC+xq3BULDXHnkq5
5qgWw+MJ8ry/RsxIec8TKnifUie5TK/aAfpl10/0Ok4/7CSoWzSrNcZsyK/k
CE9N0kNC1pBOu+7pLBz1Lj1VCjtIH/wusV3lcy5+b9T/N2iC3xn1srCWNgdO
G6xlcY1xSCZ11aTOmnQO30k8NampJnHVqT01YcrZxMhU8yk1o/qbnmQfiWEZ
56eL99XoPT60wV70w3ISV52tpy5+fHXlqcvjqYM+5SfLlacum6XO2k+nj37P
3EkyyjXD5vWtVg47aq1a6qcwMjCV6qkRfSpwuV3KHUSYpl18N55S/DTu/U3v
qTKnms4La6Qp6vYr8/vYUErsCysc27yBg8seg7KmJ2o1CjPZuT61VU7SdjXB
Pe9wvYQxnc/C88cQXMZ+RxwxBixHnGwq2RtB9knQ9k2Qvb3lWPEgiqfkMR9y
U1mMyxRTHa5TyeTDYYq5XBQwmbgHhOnpU3YULuNonn7CQY9y9/IChUwr7KmM
x8E1qjrWTOUCtFF00n4jQC87IXbUq67wVSskznlot+ZiU8nAVqhXIWslK+02
PZytmpPaWRMVw7MUsT8m78o9ci7cF9+LOC4JTy0/JZ9RuMms2BVBbQrzD6Wn
gqY57q0o61RqHErvejk2l/MBUY+SNamYxcBzDznCdUrmBxKzzfD+WeWwiXtr
bBSEnRNmYalpyrqeUCU4TbsVJ/244SV6HiN6GadnbSuVE9Z+PVHWUIShAtr1
Pc6B6Gsr49Y5nXau3uk9ZR3oyzeqP5/eTZjDh8RcKxx93xb5usnoPVWNuUkG
vz8ycs2hDMxUiLiGRqnruifylN5U6vkj5gMeVc96V546jqmOstV5Guo4ppKu
Om9PnZWxLtpTo0x10nrV2ZnqylPvo6fOKt1a5VQ5qe/etV0uW87u5/7d++k8
PDVqnRQsdd6e0kZ6avQaquPvIXURniolMpQJxchncZB96bCltJ7CeVhD8QZq
Ixae44fa1E4tSRulKM/7k57CmhxpqbLwD0czFlT/x943Vdpj5HmBiDTVKE8h
2Msq43fwGLEUD7GpKskYVVPxAUs1sin2VNTp5Pl+5qkp9hRqVNJTpqnHZJl5
yr31fMZlNkzCYRMWsbIbi2Erm6qXs/GaKczxe9b0C1dFxDFIe3U3Z7/pUgNT
yXmAMNSrtTD9spem357nRAr0w1aSNmtB4UEx1raLr7vymNyGKQ4sFbIu89xK
BM+3tj4VMM5SyKzUqQbmAOo8pbrKflCTiqDuZUTPwSUKrsz2M00h4wyFTcJ4
5jnVU8XgCvd+76Zt1ElZqRpaoJz7KeU9j6ibMojHbqGft/zsqZ+2/dQp+ngd
1cHcND+bahJPpfyH1zZdLkspnopq1kRpj8NqTzAUXsegZYkTsi1S2L6kvEaa
/pfjPNVIOEmbetyhpoa+mHE7laPCs1H78PR/3+TvnFynqK1hcfrOKgSUHLyO
3pGRdauTzhM8jZXO01VaW43vqT66dnXcTOqs49Sr3pWnzs5Vp/PUOFddeeqP
5anz95M+p/WUPu/eJu9jfo+OOo6nRs7jq+QPpVMTjqoOplcrqVmrl2m9pk9e
zVo1p6ZXyXK6pTQfV6syWmthjVWa0y5l+lHqVc2yLuhdUcwf/F0/7vzxMe9X
498LB+f/NXIlqmeLXJuKeQLkMWGun2mopxB5zr1k4KDfH/qn53wOMb4L0Xop
Tr1ClGpxj7pnrNxLFmM4jOlqCZcY9zn5CJsgOA+r5IPK2qKUZ5nSXgMfca4Q
svDtOOI69qlK+tDHQvlffwJ9FITXMPcPKYixXTURVh3VEMe68FXW76eQxcK9
KOAn9H6QgaNQl3ItzXNPvTDmwTktHHgKboT1MCZtJ23Uy7q4p99uzceWgqlQ
o1KCc1561nKq2W86aL9rozdbXvr1eYR+exkjepsn+qUijkX6eS9BO+Ljmlkj
pX1z4us/oqBpRnhplvf4kmZSLdX3FEdzDveDqWTNCkfMCUSUmtQy16RgqaAB
+2HNkXdhloO5h/7lA1PFLbOUcS4JNy0KQ5moHTfTaspGrfhKv0b1iPtTrOUX
6fWqm+hFXJgqQfvtgHh9lygTFp6OWHkcizGzuo5J4yjFT/qc3ExHOSgpkhL3
SfYvT5KE26bJQQ+JsO2gF4jssYijDM7jdjz/YcsC1xLxWnmXp8hnmObrOI8+
Lfq+LfKc3lPttIe0aaXcnGbSxWmk8DvlVH+vEPyeyd85fW3roKblGpwT2K9f
FYNujqwzHuUp2c/iOPWqSXKZbDW+L2D0zHKUr05ar3rXnjq9qc7XU+dfp7ry
1JWnrjz1flvq9+8pGEqbYY6a1FMb9QJnUk8pUc6r/Sv68wBHeUqu98Lld+Up
WZ/CXL9sOE4hh6ffy+9oTyGyz59zYYn3+MW4EeOuVjrAwZhN1pzknD14Suso
rCGSkeM9ralksM5Iekq9PWji/X/xP378rx+uSnrNPFaWa6pqyYhiKZFaMkaV
eITiTqdw4BJ7ivfSFZbQWkrOY5SWUte/2M08tzHhXOaaWTW8Qo2YmftMSFNJ
S8FW8BSn7eKgl/jrno9errvo9aaHftjxs6t+2o0Svc4S/Vwl+kdDpEP/fFWi
vXZMfM9iTO4ysKd8y0qkmeRljMt5jL40o0aaShvpKVgKdSnUpPzCjR48Zk3Q
G0Mx1VOuVcXMM5Syoxa1QCW/gWqhZeomrdRJmthTGedDXkvVTs1wr79/7keI
fszRj9spnsuYFu6VnsJY+mDNk4Mz3FLnV286C0+h7oRaEyJ7gUhLqfMq+5fZ
UuL5h53gKPfiE3ItPOZ4lp7y68f1RYuyJzbP3dSYSu+ptZybtIHpZbppB7Uz
DvH7Z+f+Ido0kw4O+vw3Yw412tpVKWI7WJcVtHMdWV5X5wnKCFvlQ1pnKcmF
Pf0cXm91GlOdJmdpquPvC3y2riqnDqKuDc0co16l9qU4u1ysqc7GUyetU40z
1XhXXXnqMnjqosbu5++pcXn3frlMOQ9HHef1UF/HavlMclaeagrDNLXz8HSO
kjmY16fkwE1FXY72FKzUq+U0R72n8hpLHY6+biXnBeJyq5jlNAuZsWnk00dG
/16HnnbaoCe6Nq1cmWop4algjIJWF7mWzQOWcs6blOCyxlOyLwU8hRoV+nkn
PU7enwl1Ksz3q0Xd4rqNe/0VAmYqhaxUEWNrzEvC/9Dxv/RWxkPNtJuD67WE
g+crFcNm4SajcJSJg+uliEUd96FHhfRU0Lqg7tmD8S/6lRUj8FSI61LVRFSc
84mxsIOtBEPJoD85HIUjLIXHgb2KYSh4Kuowq0cYC3aLOpW6GOph6NWHPaiw
ngqm2qt7xdFDO1U3HzH3D3UqeAp50TvI81UPvVzz0Y87EfrtRYbopwrRbx2i
X1tEr8r0ej1Ga0UvVaJG4UAxHjc8EHkk/PpUrUthPI5xutZT0lTqGivjglrf
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
z39myD5TPAewbyfsnywva4PzY3vyiedsWFLug+D1QuQ+unLPJ0T2Lpf7Rh32
1GAdSu5/rPTom+cjzsngOZSmkq6S8/9k1Oe6v45qmKee19wkM8pTwx013lP7
4vcNedYI0/O6ElxG9uuRgaBHCrJdjaiRtSzUsTYLAV6jhWBt1lrWz+uypDsO
5gkeHb1XsK7rXUZaCjU5HA8nqAY1O23dDqbq5sKcTjY0kMPOCg0Ea1G1aWRC
qqeQy+CpSV11kZ46qbvOok413FWje25dtKfevS3ebd7Nc3flqbPy1Nm+1ifz
1KSWkllvVE7tqWF7QI37PKP2k5Ku0vtJ6ygZeApHeZtiL+GaaoEttdOu8WXU
fVB7gpvQb0quTYan5Lpm9APGvjhYzwy/yDqV9NR6PTtRNvs5qat6hfghT8F4
MBQiTaVYKn6wtiqTYU+VYgnVUo4BR52Np1y8N5WR1yhhrRL+v8+mirjZU1hD
ofQ8t6jBvD/87xljFb2nNsU4b63sY1M1M3alRhUz8top1KbgKUTvKfSh4P4R
/b4Ciq2smrqGbaSnYCht5Hw/beTcPzw2Xg+EOX9ijA5PhWxiPOyaEz5a4ZoU
HCX7r6H/OfYHKoWFxdwzfD9Zf+IeiMJQBb+VIy2Fy+iRiPl+slcialX1uIva
aR9fR43K9OQumR5/rzHUo5Gekn38ZI3K9mSKrI+fqp7yzExReHmR6yUY38NS
SNIyxb3Tu0k7rWfdbCmYqimM2ElYVE9tVwz0w7qH6Ic00T+K9MtL9MF08OuE
vox4/hH92ie9m4ZZ6qw8JU2l9ZR0lLSUnOcn+9Jjby7UpqSTpJuU3nwLHHgK
R+krvk08j7CSjN5U6EmBI67jNtSojlOfknkujKTNeE8peVb3cZ43gv34ldTD
R+ZZLaRGqWmFB+YPHlqXJX7+ewUPR+3trou8XR98rPbjzzry8w/9Gvl+747+
+k6ekzxR5HzIwej9dVRda2h0DpP1qoO+GQfz/4a7KdrP8Tw1dj3WuZtqck+d
RS3rrEx14KrxvYyP9tWVp96lp4aN+UcbYvKcu6d0Dho3Jj9xqrV+KgM59H2M
9deo5+nkTj3u3NpJns9xnoKfhmWYqSbzlNJXHG4ZlV4lfyjrI9IrZQfS1eXw
5xJ/lwpZ3tO1kowJJ0WFN9J8X3xt+KqaivIeKZmgh2tQsi8UXCX7+uK83GsU
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
qKjXDy5UntqceaW+fm+0vzgcnTemjaea0z1kKgSmwu3u4kvaafz+cCb6cbNK
lvrxdlX92a+Tm4+btWgPs2BEfYo9BUuh1oSfa3WwP5p51UuzCidfPDUz4eEr
t1ZFZ6xmR6ifz83GrI484+Q6yeco9+OyPsYX/Jr5AjNlzU93PfV+dzby5cMe
alQVc/sJe31V5H2EPcXx9QT+DDvFcy1QP9JZpHxXfvIlXY9yPdW9hL5WqB72
a2yhH1f1jvPL1XpHYY99v2z6c7GZmV8umiY/nymjnda9+XqsrHW4Rvl0ULNq
WMjdXo2CuRYIdnFc7taTPvGdDQrvY0ztZUzVrbJ91Q1TUUrOsyi/L7jdOtX9
1KuydwNnGeuP5an25wC076kypknP59azGHG9nZVu+Oq38FRS43EdZV+Pv1XX
mQhfd3682Im+XO9HX28O/Lk+ib5cHStb6cBW5IbzfR1jB73/Nav/rUxuz7Nz
d3FI4bfd/jr00mFXLe1iOvH9OvKvT8BTccwZs9hTya7bg5SltKf2rKT79PTe
3LSjdkzuTtOO4udjS3y82KN8vjpQv36HlK83R/TrVSj4WMqBeg71PJdH5K6b
/R3liRV1HT9DnkJ9Cp5y61Nmn2hsJ65LZXkK19+4Tsc1+f76QnS2o/5dOmio
349bwbz35MP5NkV6CvWo9+L3Ne6TsY60qT6cbEcfT3eij2ebFPTk6/78DYr+
me5Q3x/2LqHPEZ5Kz/ULzzzn/r2ihuL4zk8tjY2Rp2rTY7Q/F+eaaE5ERZ9x
ai4Mk6n2sc8WuzP3lJMOV636lOz/e3u2rHy6ZM3+w44q9P7hTBVchVpVa1Vd
66+MRpuL48ZuzeqouQ9vtVamjLtQv6rNjVg9f3AUB9fsXJdiT6E+gpoVzaEw
nuLr+WHK+twAnaU6WBsn911szlFO16epx+9geYjmOVw0tamuW9NkrLP6XHSo
XtuussXO3BTteaVr8cmXUWOil+pGl80K/R80zlTNvnpU2lO6NpXs+tV5Rp6q
DvTQfPDGxCv1tYbIVfprKzvN9pGnjlfHyVd4DK+JEtdesLdquzKs7DWq3IV9
xlO0u9ic82iuRfsrC7qmFAd9e+jfg43w84aXpl++iCZ6ntF+LQSmYk+xqfjX
Ap8re/VkQn4q6qkykXP+4GBf8GuJn1N61p+2rOupdzszERJyFfzErmJbSVMV
8VRiqcWUp9px1X2YKj9JDeyvXXBUtzyVZMOfy1ZmflxuWJG+sqx12lS/huvk
KoRrWaZP8Gidwn0NZo4sesT30C/eUq7aNPsN9U6OhnHVv4Knyu+26kYdqzNP
+T6+jKkSV/2vp9r1lJxrn+ep4qb643lKO8e+vpee0tfje5anvt0e2rk5pevv
z9cnxlPo/4Ol3pztmRqM9BTqNr50w1PsKJk3l0cdeSrLVKa/z7LUkemTdPPu
bN9KulZ1WNpT8tePLeF66tvtcfTz3Un08+0ZBb9umeGPvzsyv87w1OVOK9pe
XqCZ3ej34+AMFXsKNap17H1dqlhna2AothXfl31/XJ9iT6EP/XK/bmpURTzF
3z8ia1Rcn4KjOFSvYkdxHE99Om9RYCn8WcDMP5wPQj1Oeipx0v17CnPTUZ9C
zx88tTo1GtXQa4VzTfHtenWI5kegRnWorrd1jWo5uj5EHWqR3JTlKZyrQi52
q9Hp1lx0sDEb7TamTP8fego5bCkEvYBsKsTUsVCrUi6SnqI56sNJ2FW630z3
Aib9fkPxTqMBytp0H9WpdpaHqS8RjjpT5sPOX5yXwnw8npGnTTVFnjpeVd5a
miBP7Vdnde8fnluZpj7+gjyFWhZ7qvL6CZkKHkJk3SnLU7zfV3oKNSp4Cvtr
a6Mv4p2+r4ynUKc6q0+Rp9YnX6jX81x9nA5sQBl+HucpPb463hM1Z1/TLPnN
+VGqJaFPDz9DeEj288n9WePPn1JcT8286qHPQe8fTMW9f+58CXMuKt6/yzt4
3V28WaaS9awylsryFAJ7up5a7O8hU4U8JeOrVcmwqVxb+YzF56sSVy3FWXCc
lc4fy1b346kfl+tdz69XzbaT9by/XDQomGnP96l2pf6t+HJUp3w+Xle+aiS+
Ot6gYDcH7+ig2hXNjl23TKVdxQn5SqdrnhKu+r09VaSOdXqw68yfKO+pcqYq
vhs4yz+h68d/FU+1Y6mLw0NjpH93TyXX8ban3lu1KdtTKUup4HpbW+uIrts/
qo9/r64936nPR9hnb8510o7aN4G/ZOT7iubdxQHlw9WRFTxGX0O9hruz7cRU
8X5bMwvi6JjCvy7p2SGOp+I5GomjjuPsKz8dpJL2FP/sbU9lzUOn2RA4A3S2
Y27ZF7ju59Cv3c1u9PV2L/p2tx/9/OYg+uX2yJ+7Ayv4WIr69f3xThsLfYSn
m3Waaw1PIfXZKUotDnsKM/5gKtSfONJTbCr2FM9Nx/U3zuHs1ufpHNXJ1jKZ
6lb9mwRXyf6/tx5H4fv2m2rL2uXLs9PR4+fzFM+O+nS+QaEancqZ+jcPLoCn
5oYHormhEeMpv5XSnsoyVdhTwyaLo6NUn6IalbIUeSre58S3jcow+QbnqOAp
1KgudpfJR5d7C3SeCjMoqAeQ+gAXYk8t0Hmq24OF2FSV6EpdU15sK6+0JmkG
xHFzjM4uIei5w1mm1sIQ9eA1F3R43hxMt7E4QgalGX/xeSmZxeE+y1MIe6o2
MaT3T8WBq+Se2Galn2ZvHCrjwVII7h+uDBtTnayNRZcbkxTcx/v2F8e1q5T/
UO9Brx/qQFwjwq5R1Lkq/cpSfQ9yPZXu70s8pe/rfj/M+VsYeEm1Epyl4j41
uErXxtTPWv1cYa21sV5lgpfkgEVlnIW+F6lU+19FK8r1a9hLpn5P6l6+PrLR
2LNH0fDjn6KRJw9oL7EMalOup+AseAqW4rNU7Fv+deJfs8RTHNtTPldlGSnP
Tz5PwcFu0p7q1T8/5SnE9dRb9fua021X2bbi+YCJr3z7gmXYUT5f/faucs5p
danf7z4N9dfrjbZSxFzJ/Q1Tv6Ialvq348tJM/p0qv4dOdkwPehyBhL9G7S3
QX2AXK/iHsD/9VS+p2xT/TaeKmKq+/ZUGUN101PtW6o9TxVzVXFP5dmsjKfc
uXPpOQl+T3Fto4in9P1jymf1cZ/Ux79HfUR9Pm6Rd5fq+S92jaMwu6JbnmJD
SUd9vD62YkylXgOZKq5T4WfUqadwLsz1FOz08fLIayrpqnY8RR8XO4p+tmTX
bXKs9BR+3dhRyPe3h9GPu2N/3hxawcfSxytLIahBYhbDYWOFdgY15qYp7Ck9
M12HPaWj605kJWUn6Sk5O517/+ApWaM63EDf3yqZCrk+XCdbufMo2FIcaalb
9Tl0Vlj57Ki5SMF99Ldjjh9M5fb7fTxrUGCpr1db9LPEc+HsFOol8BSZ6jfy
1PzQkOUpNpWZjxc7igNPoQ8PnsFciqONCpkK/XsIu4ptdX04T+enYCltqsU4
VZpZAVdxrtW1JGYGIpgfiDmCe6vj5CptqGGzE3inNknB+S7UqKSnYCbE9RRf
v+N98BR2+iK4L3fD4np+bfolWc71FPbhoucPMxxwH5ZCz9+1+t4vN6ap7w+1
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
9/ZoO7UbV86B4NfLRmI7YeYhRbxm6p90bMU/92TGt56bELLUrfq9hp2yF+rv
vrNt3X99fdCin9cX9XP468fT6J/frpSp3kbRPz+o27voH19Qr0Kdakf9Gu6o
X8Nd9Wu2T7ehsKVQ40KNBv+HBn/g7FQ3PSXn/VHiHUaYmQ5PHajrXfaUNNWF
chJMdXPQMGd+ubbEnuLa1KEy2bZ63o2FCeMp3EedCjWr/fq86f/D88FO8BTn
3dkGnb2CvWCWxbHBLnpqwEp5T43QjEX2FGb9UWJPoecPMyO4RrXfmFK3uD9u
TMWuQh/geWsuutiqkCNwhojrVO8Pligfj1biaFd92F+gvFOeQj6ofNyr0mOf
DvXHfDpWn39UI6NhFt3e8ljUWhihGX3u/ld2lPGUepzmyE3rXj/21MJwj7p9
QcF8Cuyk2qwOR9sLg3TuCYZCXQrBfextOm/KOlVVmW8+utqYj84bszQDApbC
2Sr+vHf7i9Hnkxo9tjT4OKq+fqBrVLBVwFOVfsyAKOCpwVe03xeWoprK+Avq
+UN9DM6j2tjicLQ89Cxa6H9sPFXpTdeo8DYex322FLtp/OmTVNhSMrr3D7Mq
emj2H2ap4/vgXb/VwZeWqaSnZEL9fXlm6pan0vunsj1105yMQgkZy7JVRv2K
ewOz6lfpJLuuZHw1rLyZFlnG4tg7r7KS7KSS/nHfbttRHdSpuu2p7rpqk0yF
2e1kKrPnSs+teKduse8QMwFhKvRA4P8AL/YaZCrpKZ2mlX8FT7VlKsdTebUq
n6fc/VXlZgPulfZU2ev1e8nv5KnC56P+TT2VzPC2PcVz4dhS3OfnWupv708o
/DbO2PhMBQNZifvupKl8npKWkp/PjuLzWomjTil83ofDr+mrYyrpKpiKbZfU
ifz7ndyeRP482CllKcdTZKpA3SrZn6Q9ZZ2VigNHXaq/s+Coo401dT28Qjud
4BHY43BjKTrdwnmYWvThYoPqUf/3+0X0//5yGf33z+fR3z8fGy/9fLMVfb/d
Jl/5wmeuUJt6c7JO3iCTCE9x4Km6MFWd3k6fn0JCnjK3ylFsKT4/5fMUalQw
1bUwlez9w328T9emZshO7Cncoj7FvX+2qWr6+dT3/Pa0Sbk9qpO14En01cFT
mO3nemo+4KrQ4/fpKZ6fLj2FGhUstbs2oTJGpuL+PzYV9vjCVJctXaNiU8EW
bCqduPcvthPnizIU8vloWedkJfpyuko9LzhHgDMENztL6utUqQdwd3kmalUn
aF8szMTnq/i6HZ7iWd3sLvZUdeg5eQo9hLCU9BTqUnCQ6flbG4xO6kN0C1vx
HHXMRkdvHWpS8BTOXPHnwFu4DsItakfov1sYfK57/5ShpKdQl6r2v055Slsq
7amlob5odVTPTpDz2nnGH2Yww1WYSwFPJeentKd8ppKe0jWo8p6afPHc8hTP
ppgf6PWaKuQp74xzX99eyfg8xY6Slirqqev1iSgrrq1cX7m1K1m/er9TMXFr
Vlnx9w2m9wlnzbQIzQx0o3cLL9Oe4aLJ2v9bZpdv3i5hCp1FWrNm6vlcFTJV
J57qxFW+WpWeDShmAh7X6M856uBv1b/Zb/ZXda1qv0am0nWqGv17l+4DLOup
cq4qsvdX5my3VSq+3kJjKBmPs87UdVDR/VU8v0LGng+Yn38pT2W4gHIP/Ybt
+OnqsFj47A3HvE/ZmHNzdD8/9yxPJTtxec+s01PH87XjPj9Tm1Ke+aH88uvd
IeVvbw+jv787UpayQ6aKe/9gL55XkeyqOjIzAGW9hr8uIucKylnfyS6kI32G
C76L+w//+vaU5inglhJbL6mdHZr+NX2eaJ+M8PV2J/pys03z7/h8zMe4VgVf
4WzSu/j1yMjX+/kqsRl/nz9fH8U5oMjXjrC3MC8Pc8sx5wGeMnOA4lwf7FJ4
HxXun++01DWvuq5fW1L+WKK9uY35aVMHwrwHXdNZJIegV+7qcDX6rL7X//75
UrnqOvrn5xOqTcFSMBW7yg1+TgjtXFIuQW2GTOLxFILXgSSOSjxlZvep1xfq
94OnEMz1Q7SllryekueprmJT3R4ms2lhKZhIn5uqKgdOpWpT0lNwIqwEUx1j
/sWWdhU/L4L5S3jdy8otVeEpOXdPu0fPNp93jMUeYhv53BRKEU/hDFWmp1an
yZUwlbbVBNkK9SrkELPGN2aj0405ysXmvDJVlexzu4t9lSv07z160VA7YVdx
Herz8WL05WSJdutgHvTPJ6vRt+MVCu6ba6Ir/X+1OKf99mAlulHPx3MtDpUj
9lYnqXbFe3vrM68ptalXJquT6PV7SZ6qDr0ga6GPEEHPH85R7a8OmxzUEk+x
qY5rw9HJ2gid8TpaHVKOGoh2F/poHiBMdbgySDPWv57VKFfqZ4LaUX2qL1oa
gameRTMvHxtPwVIIajk0b1xYCjP4jKUGX9C8dPT6wR/wAGYpwGuYMQhP7VYH
qQaIn9Ph8jg5rtqnLPXyiZlFwX6aUQ6SnsK5KbaU7OvLC3sqbapea3663A9G
nlJ/FpC1iQFKfXKQ4jPUxuxwZsp4yq1HyZoUO4qT5anL+ljEuWqMp+K6KstW
rrGy+gLL+spXqwqdu8qaGegGf2YRdlVWsnyV56y2Izzlc1U3zlGV9VURb/nm
Bcr+P7gKpkLvH6JnVdR1repgTdSp1mJT/T6ecvdUuemmp7ymugdPlTVVVo3q
f7qnsiyFOuFv4SkkeNbqN/KUe44pqUsdxOemdG3qF+UZ9tTf3h6TpXyeYsO4
8ymSHFuuCJlKWkV6iutR7CieS8eO+tu7Mx2nbuZ6ik2F2g1MBVvBVOhN/EJz
CXesee/SefI1mf69G52Qp/h18/fPnvp+dx79eHtJga3glrfxLHDMBIefLve2
KdpR69HB+hpZqrU8TzP0ZF8d3ILrfa7rwCDkkK159ffXYnR7VKPv9x8fjyh/
/3Co+/qEq2S0OffIeHAJvMH1qc2FWZWKuj9nbvVs9BnjquR+Mgs9z1KotcFS
8KA24ZJ1dsoNzf2L3QM/sX1wn89N7a3NxjuSJmJfJJ7inj/2FIKP38fsN+Uq
fN94buRoY5U8uDgxHPSUjr0nKsmo5amippKOkpbK8hTmhbieginJVI6nOOwq
noOOvrzzjYrlKpgK547IVB5P4Zrru7quopzWtKPifMPbsad+XG9G36/V77Or
Fs1O/HyxSXMU3x3rawmctTrdmKfzVvu1KZpjwaZameilwFO6RvWCalaw1N7K
NPUSwlOHa6PkKAT3paXo/tqICewES23Pv1Tpi2tU+mNQg/tx3aRrHsxR314Y
jRrTr+n80+yrJ2Y+eshTsBTm76EmJT2FM0fwB2os2CkMT+n00YxB1M5w3uJ2
a5HOUWHO31zvY2WmJ8ZTsJT0FMLnp9rxVLKTSpoq2UclZ6i346k8UxWxlKl/
OX19iaOS/b0yoXkU57WxSOayPpHKVWOScr0+ZXLTnI5j+0oaK3jmStStipy/
yjqD5d91leSzCNupnZQ1VpFalkzZupjsDywzNz2vrtQtT+W5ivdYca0KfcWf
jlepLxr/z3R3sEpBr8nV/qo5V+WbV+FPs81slkraShulcrJn53R/M47tKtdb
xkslZq37egQ7rVEVdVSRHre86/uyH+/1lBtxviuvb9BrKbc/L/bO5cEOpaib
SnuqxOe0G56hkOyako46imcn6FnlxlF87ie2As+g+PlS16Z+udmPftwepDzl
C2pXPM/A7DGKXcV1JcRYQ5kNQS3MF9lvyDUproHJs1tsKBn5fj3/e5/m3CGw
FHvq5xudb9e7FKpVqeDMEMXd5xS7i2M8Ffvj5xsdzEFEpCfJYcpSqEnBUX//
eBv999d3lF/fX9D7URfDnAk46qTVVNf2dXUtvKKu/9V1VbVKWZ+fT/XXNahG
BDss0+ccNmvq8xt69mprhWyBv4/fqL+3P1426efBPxPtSjf6+4FPcP4IPXEw
iLaU9hSC+RR4u7kwa0xl2ypcm2JDsaO4LsWWwuum166+Bzf87wr68HhGktyX
iLl9qKnxTD+uTbGn1uPwvivuM+TsYkaB+pnx/Nqd2mJUw9mp2FML40MU3gOF
SOu49uHH+HHpKivDA6lUYTeVReU3DhzFWZnUe6jYUrp+OElJzDhlalS4Tfr/
pq2gB++wPkOBZ+Aa9OZdbOmZEtfKU6gpoQdQzqvgc1J8/cX1KfYUfPU9NhXl
el3nthl9u1lXfyYa0Wd1ffTpQv3+VNdL706WaFY75g2etdRrW8WOq4FofQ6u
6qU5FDAVwjP+dpenyF/4HrDf90T58GR9gmLmDSpL4QyVnp0+rXf81oZNfWqn
+iraX+onY3GN6vtlgxyIM1ewWmte+WFS2WjocTTf/5zCbuI6jqxN4XH0ylEG
eshimCeOfjie9b01pwNPbVd0jQxfD9dZuE+9hv0Po9kXD5SrHpKpZp4/jqaf
PbE8hfkUdo2qvKdsUyU7fuV8Ct7zi55FZE39WUASTw2ZNGdGOgqeA88Jr5n5
FyN9tJuL60+um+BPN6jxuZ46U7+vZFxfSWOxq2xbFatdhWzl23OV5auy8wM/
qXx2XFU0ZZ0F85TtHWwnlqkKnKnK20fVqavKzl739f99OdWm+nC8RqbC/y29
OaxFN4dr2lSm/6+uz1X9QTyVdtX9esqYKvZTpzutZL0qq4YVqlHl1m2Knhdq
I7+Xp3z9fFSLUm+zo35PT8nP7cRbWZ7CDDod21PmHE/sKZ6PTpZS1/dlPZXM
jUvqVAjXlYqYih9LWUrsScqyVMhT7Aefp2AgeIpqVTeJq3iPq9zDxZb6epPU
p7g/jh3l8xRqXe9xNutom3bj4rwafvbwlanBvTmlc2Lw1H6jFtXn5qK12VkT
fhuGWq/O0S3v0mVPHTQadL4KvYHsEcymg6kwGxs7h96c1OmMFXoeXUt9vtYz
wjHXDn+Ho2bj89TWUpU8RTP/PKbSj02nPGVqUWsLlP3GkqlJIdjji+RZCrlw
TMWWOlYe21urmNcNV3Bozl8czBNkT6G2B9Oxp9AvCdfhMXwvK9PKTZMjZCoE
95fHx61IX/mc5doqldhOvpTx1AbqgfiZx32NIU+5YY+wq2Cqk2bFuAp9eRdb
VZpXgfNVN7tz0e1excwhf6+u8ZBPqFvF56m+Hi0bW32N8+ksTuynD+o6CcF9
fuy9ujZ7c7REe7CudxfoXBd6ArHnCn7CXD/MosBtc2442pwfpX5BvG54CsEc
94vWDNkJNsIsincHFbIfgll/eO2Y+4f3n6+PU22KPQVrYVYheu9wzYN6HWaz
b1YGyFSwEWpOuqcvmd+Q9PnZnkrqU6+ozoLa1NbsSGypQfIU+gq3Kq9ojgZq
gKhVoXaFmRiwFJnK4ymen87z0nWeteWpxFR65p/c9Yvvj+faY6YGAlNRrYrO
ULm1qqGOgueCodAjieBnznbymSkU9Eu6njpdGYlkXF9JY/lqVuG6lc7txkyc
0FyLinLVvG0slTcc5a23ylScd8pUMvznDfmgTOXLp9hVWSnrLNdb7fQJypTt
N/Sd1wrNwfj1umHlrzfr6QRs1e2zVX5TrVH9HjGuUn9H0vzUgxWaB3S7r3uj
L/dWKO65KpPtRptpdpaSjgrlfG/TCvuKvQWzne+lz1nhsTK52Nul5NWvZIrM
Qijvom0rV4fFQ/tSc5LsAQrlwCTPFyG32IbasuK+ZswAQDBXrZ3w57vp9s9N
/uww95tj5vnxHt0z9PpleWrfnJuiXr/YUkU9hfyqXMGfI3dVcdgaXMvh2pCM
rPPgc+Rr0K/jJDP8Wvj1JHWzPcr3211K4imuU23HsV+LfE0yX9Rzf4ktJT1l
9ujyfEH1s8ScibPWWrSnLLENV6jsKltgR+xxcyW6UH+vfb4+o1zt7anr3lXy
U21mJhVprJWpKXoMtSt4ardWo97AwybqVCvUq8ZGwbwK5GJ3mf7fC/MW4Cb4
CfUodhTPtUPfm74Gj3c3xX7ioPcQ2YxNZVtq1jhKWorOSQlL4TWyo3SPXzlP
sal4JyLmn2O2O3uKz0nJ81ItJ9pQ81ZQK8Mt3o+eSvYUOUr5BW+vTo2bwDUc
9ODpPjx9X/oHkTZqJ/K5eB4Fe0r3ZE7Triz+fs35KeEpn6ngKYRrV3rG+hwF
O4GPN5WvWspX6CPdrtIsQOR8a4bCdR/MTEfe4FpxF3MrFqNPh3o2IPW1xPPW
UYfC/uA3x/Mm707127eHc7RLWO8YXqLcKP+gXnW8PhXXrIaiDeWP5twopVUd
o74/3u0LT2GWO5nvoBq9x5mRy9Xo+43y0YW6djmvmduPp3r+u96nNRmdbaBv
cJiC96Gehuubs+ZMtLc8Em3M9dG+39XxXpovQT19g33aGzBUlqfU56xNvqI+
RpwTg6loP+2M3im8U31N8zR41h/mDdbGHkeVV3+JZnv/TKaa6flJeeoRuUru
o0KNCqbSrmrfU7zvF6bifb+pXb+Dryn4/slVYna666p2wjUpOAo/N/z8qB4o
jCSDnkgZ932up06WhyMZ11fSWJ32Bfp6A2Gtu83ZVA3rjrM9TabiSFvl+aqI
tbphrqK9gd1IZu9fSVdZvvoN91aFTIXQTHVlqo+nsalE/x9Mhd4/5NzMqvif
4SkOe6hTT53v7lDy6ldZnupoft1v4Kl8SxX3VDFL5XvK9RHPXePZ1f9OnsI1
v6kLdclTckeVz1TSVW7k7mBpqW56ymcqrleFXpPs5yviKdSncP4K9ZND5Qdc
65p+LK4jxNe/mNlHs/vq9ai1tBQ1KhXLUD5bcfCx+Bz0B+7UlmlmBdV+1hOn
nLSqFHbV2fYiuQrz7Hg+OO5jph0e171++pq8iKfSSXuKa1PmtSlPSUdlWco1
lfQU7ZfH++EyZSH2lPbErMmu6OuTs9ldTyF4HHUs9hQ7Cr1/dG5tdopSm56g
SF+VMRa/r6i93I/h81PsKfxeIrPH3zschTojQqaKPSXDnkKNx/VWYis9t4Jd
hXmAp+qa8Bh9c82kr473+l7gGhPXk7hm3KrQrDz0sd3u6dyoaz2YCXa6OZhV
f0Zmoqu9afVrORmdb6vPV9eTCPr+YCkE92E4fN291fFoa3GYLIX5gKZOtTxC
u6jQ6wdPwVIfTpajzxfqWuymTjaCo1Ajg5UQvB/hHcWX2MnVHCdPXbSm9Med
1Kkuhx1XW1XluFk9owK1GXgCdRs6YyQ8RYk9ZWZRKIfh8+ApzI1HnQqeakz0
RM2pXvLU/tIg7RXGDDDs9Vqfeh4tDjwiU5Glnv8l5SlYik2le/868xTvp5I7
qqw61YD+XjH/Habis2H2TqrEVmXjWgpzQHBujX00++JRZqSt8LbrqePFkUjm
ZGk0ldPlMcrZyrjJ+eqEToaxfL7CnwU31+r38bWylZubTfHnxkQ7i+tXb3cq
Vlxf5TmrE28V7RFkC3Xr/FYRU2X5KuQqX+3qb7fNYmnDU66pbFfVaC4q/u8J
/wf19nCJ9qejxxozV6/2UataUn9P1Sh8vor/HSwdZSp/mk7049jTInO2q+M+
7r6/W55yPy5JOVe5LqNZF07OD3dMylhJf85WnB0nW1auDltOXAfY77853s7M
7cmOk3xbZdki6Bj1M/MFO3xksHeI4+4fyor8PI5+Tv/ryUrRGpg0njtnm/dM
+fbkSk/xual2PeX6xeepkKksr1zroM/Q7TXsxFOcH7d7lHxTpc9C0WuNexS5
D/GbsJQVZShYCvPa0RuIXbG4zt9dXdD9cjh3pCJnOJBJqlVyEdec2FB4W9ak
EJyjQs+fPEeFtzH3r7W8EGeezv5sry7QLAvUbdALh7oT+v/QB4hgph16tLlP
G56hXjflHms/VOwnNhTt4I29BDtx+Pvj98kzU1afX+wpqqFtrJozU0jRGhWH
z4pxjx4sxLuB2U1sJ1+koTj4eHiK5yjCUTy7kOZuYPYD7sdz9fRO3QnjK9dZ
bCu+L43Fj2fZKmQtfCy+DmbXYz7INn7dV6oqFaqB6lkbFeMp7v/j8Nu4leH3
m9oWXNWcoxxsVMhWMBZmr2MG+766rkTdCNld0abB/PJDZbMj5bKThp51gRrP
+Uay7wo7hLFLGLWnk41J4zPcz8p+bYL6/zbnsSd4hPoAKeiZU87C175Q9tOm
WiQvaTut6uuT/QWzixi3CGpap81JsthRfYxmWuwuD9Lb19uLNJ/jdH2WZl+g
7685+5rmJaB/DzuGMSMD56R0H6Ce68fzxnkPMTyF+lRjOk48a4GdhTNamFWI
nr+3ewvUS4lzXahRVfv/HM28+FM03fMf0WTPg2jqxcNoqudxnKfGVEgnnhp7
9sQK9wBa+6nMGbGXZq8W1aqUgdhVrq1CkYaSZ6VkXYpmgLzUczngyLwYW/U8
oeR5KstX7CrLVhlnr3y2uhC5VL66NMaaTEW7asYEttLGmk65yvjKqV+F6lhl
vNWurzrxU56rsmZelN07XMRW9+0pDrvq2zmbyt//d61uEewARvjfbvS7c69G
qSjz+LPhRD/+7+opn6nSFsp2ld9N3fFUnqP8lro/T4UTNlRoF5FMlqva8VSe
l/KS5SlrTnpsqqKe4nnpIUvleSqrTkX1qJt9y1K/lafcuDUyU3dyznqhPw7n
rWgWhZgfyPP+cO4KM7xRN8H1rJzfwJ7CdTquzameozwFKy1NTBhTubUp9ADC
XOwpnk1Rj/dA4RwVHm8u6JoR+wemwkxw1G5Qd4KpOLAV38eMce51g38SS6U9
xV7i+hNHeopnUPjOTbGppKfcOlVerYrDn4veQXZRnqH4+3RrUtJiOGPFvYw8
u5DvN+OgJsRnl7Stpilcv5I1LPYV37KjfDWtUL+gW7fSPX/j9DXhKfw+k57i
upz0ky+YBcjzAHnOujx7tY16lTIRh/cD79RG1a/viLLNsHLMIAXzI1DDQbYX
hikwAs4f0Y6otQnq20OdCY5iSx02lGHq6uPWRih7NfV5q0Pqexmk4D5Cj6+M
kad2lqZpjxX6/SgLQ/Q4f50zdW0KJ6GPD3Wny63Z+G1tJ7gJwSxAOWt9b2WI
LLW92E+3mEfBLsR9miWorHiC/WXoEV2do11a8ABM5XpqYbiXPAVLUb/f1Es6
hwVL4UwV+gBhKjgNPy/swULfJM554WxXa+4leQqWgqnYU5PPH1FcT2GeexFT
+Rw18uSRFTYV5lSY+X/qa8y+7IkqfT1mxxaZKq7DcaStQmFX8duyLoWfJVtq
uvdRfHbsUW5meh7qxL5yPXWEn7GTPFe5tpK+OhE5Vb83OOd1f4yt1O8nSmys
S08tS9axXFf5bBWqYVn1rHgPdyjYL2clYKxOz2SVnY9RxFVlzlgVPWt1H56S
cWtViatWaZefqVcdsK1W9d6qvZqOslGRYHcwW0ynYeV6p+6N6zD4Dbng7Da9
Od/TMW7aiWMcxB+T2OhivxUM9nAiF7ubHSXkstTXc/ra8nzkxtcX56s7cVJ1
meMWpbyjspNXC7INk86tCOYCyLxVz4lgVgDvVUXen+3kRn7825Mteh753LfO
186K9/W0Gcw/kPkgd/fCUudyRnriKbaENA3vn8qKnEcRis9T0lHd8VTysfza
dYSpbnyWSs+UoNcaz9JgT70/3qTw3iPMOsceWd7Li183/FqiRn7YWCHLaINU
KewdnsvHFnJrULmJa1My2lTT5hwT15F8vXYy7BvEeCT+HD73xHt3t1aqcSqO
t+zw+32eSvX8xX1/HD5P5dasQsHHwlJspDw34TE30mHkqZWkBse9i1YdbkHP
fuBwH2dT1K589StdwxqjW5x9wv3atJ4rwUEPH7KM2ReYJWhlxOr9wyyM2tSU
5Sldo6pQ0PenM2W85HOU+z5Zw+IaFfUN1qdNLyD6ArfVNeMW5jSoa80Ndf2J
NNW1aXNhUP0+HFAZomwsjEWbi+PKOuPUV5jMvZiJTpqzNG/iYG2S+vgQ9hJq
TXZGKXgezu7KBO2u4vs6Y/Q8bJ+kXjZuzljhbdSaYD0O3ubgbfbgVnVEva1e
2zKea5Ishbnyl63F6GYHZ8ZXo+td9ftY/d6BkVCzgTPgKQQz3jGTcHW8hyxV
n3qhPNVDb6+MPafUJl7Q2Sw4FLP9Ljemo7f7M9GbvenoqDYQLQ79h3LS/6Mc
83+Up/6iE3sKMyhgKnYO5rkX9ZRbj4Khhh8/9JqKd1Xx15rpfaq+3jNylaxT
8bkqX3zvw2P4XJ4vTxZVPz88L77G9IsnVIeDlaaePsyNZauCnspyVV5P4HGc
E9dWtTFvjKvUnyeKp37lq2O5ruqGrQp5K1DPKlLD8hmpnXNbWT2AZWzlc1ah
2RU+V3XoqWC96mqd5oum6lXHa/EswDrtAn57UNfZXzd5o3wTyt2+Dlyls56K
ayyE/eSmqKeMV1Ke0e/PMpTPU1nppqcu9rf/sJ5qx1E+T+WZyucqn5+kWYw9
Yie5+1yzIl0ln7uoqdzXJl+PdBBHOqkdT9F8ufM9x1S2p2TPXRFP8TmlIpYq
4ymfqUKucj/G9ZQ0FQxl16psR5m3xVzCT2fb9HcR+pa5roNbmSP4BGZQjsJ1
LWyjzxhVyFIc10H34Sk4zvWMrA2FPEW2iOeZt+Mpd7+Uz1PSVDznL9nl64+c
BSgfw+eFevh8dnKfS3rK9AvG34Psa5T1OJxTkuffNo2xZkyaoo4ljSVd5Sbf
VM7ZK+Ep7FdGDVSbSs89SeZxTJJnpJ/cSEuxodhR5tZjKZ+nYKnGfL/KIGV9
fkTvxFocJe/AVHqm4CQF/XvZjrI9FQpMpe8P0/NwbWx7AX10wxS+j9stZT30
2LnB46gVIRtz/epWmXBukG4R7suDrQ5Wp2geIjx1gd+XylQN9WsHE1T6X8T9
fi9o1jvMhLoUPKVN1UuPwVW435juVc//mvYL4xwaLPX5dIHmE7Yqz5U3/lMZ
Q7mq94HXU6hRwVPYjYUaVZ6nXEtJT3GkqTiYya7nXjwi68A8sA/t2pL9f7GV
XGPJx9hR7CcERkPw3ByqwykrTT55kBvXVa6n9uaHI18OFkbjDJscqt/Tvhyp
X383x8JWXl+pPzOyhnWu/ixRPLUrqzdwfZbqWNfNOSs3yvScu1bVOnOFmTDF
U8xfRWpZ2E0ngz11qRTwlM9VeWerMmesd3DWKuiqwGx0d7aFb3a6O8vdN+ud
61bfzhtmZgXZ6rhO5yuTNE0+Hq6n8v5oPbGXTMBgsp7lC+9nTLLuzWWckLcu
9zbipF0kz+VcHmxSrvbtJJ9/X4lfT878heLZtPxkjHK4QWE/hXJ3slUqb5RJ
fLFqQBl5o76mL/x+X/3J9ZFvz2xW2FRuvUp+fZyjCcV9ffyarK8jdkYhPluF
go/7dLZrxecpMpXjKekaRM4jl3PJixjK1+sX8tRfbw7U31eHJv94c2wly1GI
+1pCcwfl7AsrYsY7gp/Ru6NWdNFajU6beiY374KlnqpVXROAobbifj7XUbIv
r7SfcjyVPHdxT0lHGU/F1vF5Spsq8VRepKVCnjKJrSOdw9bJqjHJmpLs7/N5
yrWY9Jj8GladSoVmAbpmxNkwEfaL66ukjjVjegNlzYpvQ6aCp2RcT6EvEP2D
eB64Tc7349C8+zjuzENprDxPycjeQfp8YSrtKV2XalSGKe5OZXxdWQ/DDqmd
pUnaz2t69woEMyg45gyVCGboIZj9YGV2KDOYx85Zm+qnnVGc2ngf1aBoT636
GngdeP0HtdnobB2eUr//q+rP5eRwtDjcRztwccYLfYlwHnoStxZeU1rVl+o5
XkSNmZ6oOder7r9U38sr2jGMme23O+PKU/PRp5NKdNUaibYqvdHy8F+imVc/
RZMv/mzOT7GnkhpVb6Ealesojs9T8vGRRz9F408fmX1XuufwsVWvYlu5dSuf
pciesaPwHLImxWacePawsKekqRDXU7vKxDJpWw1apsqzVTu+kn2BvtqVty9Q
BbbipGxFZ61mPfMs8pJf4wo5q6yvKDlzMLLqXHkzBcvsF3Y9xfeLzq0IWSov
WfuxfK7CHjzsbjCuOmmQqZJsBANjfTi2A19R1PWnjOsrrme5uTlw00xFeqqw
WzyWyvJU0XTqKdSp7HhqZ/fkqW4ZyuepvPiMlWUo10Y8P7xM2FSpWpVjPJ+j
2FLy9fHr4tl7vA/WzORT8dkqK66nXFNJTyFurYhdldXPl2WoIuemynjKZyhZ
l+rEU7Iuxb1+74+3qI/4ZF1dj6/NG0dxP5W21Jxnz23iKJn79tRmPIMv5KlQ
pHfYQbatFijSTVm1KWmpzK8bqCdlzZfYzpjX5z6Pz1Ju3cvtF5TP7X6/24G4
xmJbyZqVfd5qMlWvkp7CrW2qUSt5nmJHsWNcX3XDU2Qqp07FpmJPNSqjxlQ6
o9QDyJE28rkoFMz1Q0IeWpvuo9SmXtmZfE0hK7l2Urf8fvNxmBmhHIWsjL6k
0LmniT4KPg9fd2N2lHbRbsxNUGCq2sQQzc3A3xvY43W1s0jnuPRZrkmaJchn
uDiwFHYOv92fir6eL0Q/btS13/UK7cSCtRaGnpKp5DwKeYYKnipSo/Kdl5KW
cjP06AFl+OFfyFSjjx+Qq0Yf/0XdPiDzSFtxvQm1J2krDlsK7w9ZCs+J50aK
Wso1VZ6nwq5y61Z2DhfHUjlaGs80lb92NWlyujplcr42QzF9gSpFbJXMsSif
LHcVMVbuWaw8a/nqWyVqVe3Yqu0ZFgX2Bud5ya1n+T9nM/pxuRH9ctGkXcCm
VqVcVTS2v9YpH090Phw3rKCf0M66lXfHOjwTGOcfZHy2snyV4awsF6X6uzLq
FDI+7/le37X6+r6kegqzehILeCp1JsmxVGKDzVLBmZPuRHvkw0k6H093KLYj
dihyxoDcKVsmNJ8gfj70hH083aJ8OGlR+MzNu6MNK/w4PgYfj8+Vr8n04FGO
rPD+Xa4vsY3c+Bzl/hx8X8+dtceBN9qpQxVxFPLr9T5ZiiNNJV2VV4/KM5+c
IYHb728PKZjNJ2dK4OeDX6sb7BBfX6G559gjldSj4uto0xvG88Mr2jhzc8ku
XnHfnTXRiafseRTy7FQ5T7n1I5+pMDNQJ12jSnoCKylLhephoa/t1sek2+Tc
wLxzWqF5gu75K/cMFte+eM+vGz6fZM4p5RhLnrfis1brFThonBIylez9k0m8
pa7Xp0foOWgOf8BNRT3lnpnyeco314KfA88HH8FL6PGDoyjx94nvmcOP0Wuf
jRPvk0I9JyuYke5LbXLAyupEvz/jcM4Ieac+NWKCt9lACN9fGx8ys9Flvxp2
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
SZatspJ21aQy1ZSIrF3ZZ67ss1fFnRXyVrCG5dSxQrZK16yqJu92F+Jk16va
dlUgX09WdQr6KuiqeGeU66q8FPUUm8pXt9Kfu2kFfYFF4n5eKjctkx/XmxTM
xOCwr5Av503hqnS9is5ZHejwPIu8+YBpT+k6F57Dd2bGnJs5Ua/jdNPk81nL
m0/nLcuA7Cp+XtkfiK8fmmuR56l26lTXlhk3Snkqz1RFDeX65MvZTlyf2TM2
kNYIzeh2U6YOw1b4erVj5fPFVsp4xjHxx7Ar5Osp4ghpK1mzSnx1pE0V9wPm
eSrrDFk7fZBFY9Wu5P6nu3Jntop4CpH1KOTjxY6pS52qa2xYalf0dcFQCDyF
sJ+S+QxV4yme50dz/GJPrc7OUHw9fqUtleEp21LVVA9cZ5ZKPOXr0XNN5ZuZ
Lj0lzzOxqfA+eV7KnVWemlsesNQfxlOihoW5Je5ZKtdV0lZu3cp3BknOzZM9
fcUz6d015UunnkI9LT23MJ6p0aGFQsl/LhhqiMI9exx+HKmNDVtxHZV4KqlT
WTMXBnqoNw/Bvlrs/d2an4gO1O8JmAi7gmlPltgnfFAbiQ7XlK3Wx2hmBW55
bgU+/nQd8wQXaJ9wa246fg0j6msOKFf1Kae8Mq6CqTiydjXV20M7erFTindR
hWZSWLuonuros1M/GTvJ2ebyDJXb68eekrMo+PPYZe6ZLIpyErzUqac2ZwYi
N3m+8ttqKBV2FRI6a1XWWfCUnXFPT6D/3FWoR7CItXL7BgM1rCI9gbapivUC
Zs6sKNoL6PQFZp3Byu0JpJ47HWkrN3mm8s1aZ0/5XCXPVXH+drPVtfz1Nh1p
rO/XW5Sfr1pkqq9XW1bNyjgldhUZRZgK/2cd8pS/NpXtKbaD66gv51ve4Joc
puLIGhaej+fIsalCswKLeCrTVPtbXk8ldbgNr6nyehpDZ4p8VsqrSZEJhKXc
ug154x49JWNc5cy9MHaJP07WZ8rUZXz1KrtmdUQJz67wz+XodEZH1uwO7/Oi
ZpVjqlJx6oxuzdG1FM7l4c84evwOcT0d8BSyE9uJzSJvQ57i+OZTsJHW5+eL
R+yykrlvTx2sr6Y8FapR+eZVSE/BNSetNQruwzt43PWUtUe3oKV8/X7tnp/y
heuWWfF5yq1TFbWVjPUx1gxy/0z0Mp7q1FQ8r096KrHUcHCfluyxKxt8HmpL
vuT7athyk3QUnYcaH9ZnrRxPranXLF3FjloagqNem/ng7KmFwRfR0jD6/nop
uF+fVNfrysO76teMdwdjhvr2Yr/J7nK/stWAMtYg3dcz1vvMjqy9pSny2P5S
NdqYUf6enKAa2tLQILlqYaCfbMW+QnC/2v+aUunvi+Zev4pmXvVG0y9tX7nB
4wg+hm3Gc9rhIZ4tAS/BRjzrD3F7/kKe4jNTcgYFu4wSz0tnU2X1+rGlfPt8
m1OvIzdZxnLrVsVqVyPKVKOUffVno2wOliZSkZ4KnbsK28ofniHo5qI+K5Ld
KxisXzlz3H01K1mvsmtWSYraKstVvhSuY4l8O615I22V5ayirsqqU+Xtu/J5
rNPQ13V8JV2lbQWvwDMbFK5XcZ2KalWHdcrdwVqSwFx2hB1GUZ/Hz4NwDQxu
g+F8lvp2ueMNu0raik3F87nlLAuuU7Xjqby5FWbuRuwpX50qZKsi56lyPSVs
ifDPRf78fP1kbk+Z6yn38U49VSR8nqidPreQp9w+QNSouPfvy1k5T3XDVrnP
6fw83L7CsrMv3L5M1KM4sBQMJedOYNf32dYq9fnhvBT3+klH7cZ1KFhF22k2
PjOl99y6+6bYU0h9vqIjzkDJelMpSwU8ha/dbU/Jvb86q8JUK6JGtWiy7fyc
+LXw6+F5f3DN+c465Wy7Qa6SNSrXUuwraakitam8+X6+GX/d8FTIVNSHt5CO
dFXheM5LlfWUnNMnPeXzVeKpGfO9uHPZEbKUsgJmUdTntKVWJrWhFscGRYYp
roPcc0xhS/lrS26NiV0k76OP0PWUayvXU3AUWSr+XLsmZXuK54Ozp9hRFGUt
zK3YmBmPWnPq16wyQzWmVmWc6lbb1XGyVkv9/Ph2U/0cm7MDUWP6NZ2bwi4s
7A3WzzGrbtWfk+mpqD4xbs54SVfBT7AU7uMxpDrYT5kfSNuKfUV+it9G8H6e
x47dwegvRJ/hwkAffa/wEuxjakrOvD8ZOY+CP4c9xXUpa65FzxMy0uRT9b7H
yk+P/mQFj+F9U89+iqafP4hmeh5SXE+tT/ZFbrKM1U5vIBuLTVUmIWMdLk7E
CZ+/KuKrPGelfZXdJ5jlK9/89uwZFuF+wKJ7rrw7hDP6A8s4y2csn7Pyaldl
+/9cS/lmWfgc5ua/3my3FTLV3bYJTPXjdkdds25TtKu2yVTsqqQH0O7/k64i
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
SZNWdSLanB+nbFTGoo05ZavZcdrRW58aMbty2SmudXye4vBjrq2kr3xeyksR
TyEhT/nckzjqlTlPZEe/n+eaI/pj+80ZJ74vY5wk+vPQm8f9eXxfPibrTDCQ
tNLE855o/NnzaOzps2jk8ROT4UePKXhcBh+LTDyNE++wmnqqPPXkCWXs4UOV
nygjP2FeRLJXl+3D55l8wfulmbgOJcOucj9PxvVUte9Z0FPSVa6vYKlQ3Qph
Q4WMFbIVJefMlc9XbKl26le+2RZ55tKumqDAT3xbxFbGVGauxbTlqZCrUv2A
cVKmyjhrBUvxbchLbC5pL/ftLGf5XOX6Spoqy1b+PkDXV8X3W5WdU9Gup6Sp
uE7191sdrlVJU3G0qzbIVLIPULrq42HdirRUtz0lXfV7eopMxc8bm6rbnkqZ
qsueyjPWb+2poqYyH+/MLsxKNzzVrrW6bTV3ziPbSf4e0nVa/r2VnCvEnJbL
3Xqmp9hU7CnXE1meko8VsVVZS/0enpKO2hb7jEP9ffBTY36aUq9M0a02lZ7R
BxPBQbATDMWBr3h+um8fVV6vX+FZG8JMyP96Ku0pX3yegqXYU2QpFVjK56mk
l85vHmkq11Uy0l9F+gJl3cr+mHxPSVdxQp7iulGSXlFT0meMdF3pJe3dRY8c
zh/J803owzPz98RMPtxKL8mZfG6/HvfpsaNSM9CVmaSfhh4+MuH3ISlXPYkT
z0tnS40/emR5CpbCrZmz5/EU20gG/ll4/ZwMJHv7inpKflyWp1bHXkdIbbzf
G8yz13lNwdk1hC3FzmJH+ZzlmipoK6eG5U2Bc1jt9grm1bTcupVdv7JzUpsx
OavPWbUqzsX6nAlqV1frFSvXzflMU5GrCs4HdN1UJkXrVnk1K7ZUnrGKuqrs
nmDf/ip2VVk/5dtql2LOVfH+qthVbCvsEv75NKlZcVC7+nxct/LpaC0Y/hh8
Hj5fWirbU2lf8SwN9AqSqc5a1gx1zHowc/4ObPtc7DUoRV11scuJ/y85/nx+
vmRufKOQqeQ8Ct8c+ZSn5Kz4eA8Xx5pL4cycd2cklrVVEQ+5vWq+lPFUZkr4
KW2pZI580X3DbrDXq5O0azV57knWnhDcZ0fxPm708uH3Id6mOejx79Vz5SgE
c9Glp9hS0lPaVKsUeW7IPiu0kJkidapynpq26j3SUW6vn9yPVbx+k3YUf8+y
HuXWobgWJQ21NjdpkphqikzFLuJZf4jcQ8X7fdlUck9w1u7ewq4q6KmQrcqe
n0rNTc/wVDvplqcSV0lDTUbJXPRJ4ykYKuQpOIot5XpKnk/y1ZVk3SlkKl/N
SrrJzN9zZk5Ix5XxlLQUAj/J8BwKaSltp14zE5w9xXUp7ake62yT9JOccW7O
QDmOcs85cW8e9+nxzije12t29j54aOwkLcWPsal8nhp99CQaffyIAkfJsKeQ
cfW1iniK61Fwz9LAi2hl6GW0PNgbLfb3mDqV/Fhf3cp9Xmkp+CzkKV9sW/VR
2FWFzlxl9AQWtVXKV230B5adLcimcm2V1RMYslXiqimvqYytTD9gEu0qz8x1
WacqcK4qNHs9lLK28hkrrxfQ56lyrsreC1xknoWvTtVJjcrOHsWcq+K9VWJW
BUz146JFppI1K2kr3ROYxDWWdBRbij5PWep/uqdC8/264am8GfTteqqIoUqZ
qqjx4t3E7aQbnvp82lnydoeFvq50lLQU1zXZUfi9d7W3ZgJXYX4fO8r1lDk7
leMpt88ty1O+mlRe319RT7n9c2U9lW+NlZSl5PfM37fbz+caqjY7YSJNxZ6S
c8/lTqr0ea1/PU/55vtJT7muKlKz+i09pTMZ9BR9HafXT3qqqa7/XEu59SnZ
9xeKz1Q+R0kfsaWQtclRE3dmX56nsixVxlO8kylJ4inUpeRuXXdWRDKTXJyD
ErP23F1R8vyTu4vXOIqjPMWmyvKUG7JUhqdgqMRSj8wOKF/9yHUP/ARL1cf6
KbWRPrIQe4vPQrmm8tW5inqKZi2O9hW0la9+NUB7xBrjA5T1iUEK16xCfYCh
2pXPWJl1K5Ud9WcOkffd7Ko/m3nZV3+W3RwsTkWHS9PmlnO0PKOTYyu7VpXE
a6t121SoU0lX+c5VyTNVb7cXKfI+593OUrGU9dXeipVPBzWTz4drqXw5qtvJ
OG/VLVdl9f+1M/+vTB8gev/MjuB47/CvV5sUfB+/XOl8v2zqOL4yxjpTP6vT
tZSzZG0LH1vUUmw7GV07U1Y4SzyF+esfTzaEp9aNceQeYvZQKuIsQ2bij0/2
GtfN15GecufHu3WpkKd4P5fPTFmekrPT3RkF7TinbUt1eX9TNxwl60RlDHVf
ngqdkcNj7CYZNpTbz+dzFAx1sbNKbrp0LHW2s2btkeVdsjpr0WGzZiJ73WR9
xuepLEeVPUf1e3oK36vPUrK3T9ajpKNWpscoy1OjdCtN5ev7c/fy+l5jaF/v
b+0paar/iZ7SO3v9nrIspa4B6+p6cW1q0NwitckBj6fEmSTHM3DLwhAMpVwy
0GuCt6WnpJN8lkJ8u6bYUz5TZXkKr4lnR+R76qVlKGkp6SnfbHJ33p4v7KlQ
LcqqSeV4ih0VslRRTyWWeqwt9exRqnYkjQTvIKhJwVBsEvgEj8FE7CLcyvNV
PkdJS4U8xY7ypR1bsacSU+XXrNhVWb2BeTWsLG+FbFXUXNJUMtJVXLMKz7Pw
9QD6+wDdehXXqeQ5q1D/X2pehWOsInE9VchWu8spU7muyrRVgTkWeXPW23VV
qBcwa6dvEWPZO6tyTHWtw67inkDZG0i+Om/oCGe5oY8TjnItxXuyEHe+u/TU
93jvUshTtqmKe0ruAU5F1KWKeMr1k+son6dcU2Ul71xVnq3KuslnNisFzgaV
mTEua0tlY/XbOa6RdcAi+XTSWYp8Db2fupWqQbGf2FAc/N5jR8FQsNTZ1jLd
Rw0KpjpBTx96+/i+11KrXkvJM1PuuaGijmpnLoX/zFRxS2V5yjdbXGfJSpal
4CNE1qLYUhz2VdpUU2ZPr3SVezYq/DoXxKz2zj1VNH90T3U24y/sKW0p21N8
hoo9JS0lHVXEUz7P+DyF+3hM1qbk3ii21PrMRFSfGjPxmUp6Sr6GvNoUe8qN
PdfvVaq3LzHUcxMza8/p2ysT6SlvLSqOZSxPTSpkqLKeSiz1xHjKrRvJ2hF6
/LjPb230dVzfGaLgbe79Q/DxXKMKxX1+n6fMXuU4ZW1VpHaFulVSrxpy4p8P
WMRXnTqriL9CdSvXVsZXGbMCfa5yz1elzlg5fYCh/r8sW4XqV6V8FQgclZU8
XxljFegLzHNVaOZ6EWsVNVaZWRa+PcC0C9jaSdyK485/37TC58ZSdSxP8P6f
r3XcepS0VBFPoUb1Nd4PDE/xPmI2DLsmqVO5WU9F9+816f6lE+kohPdwyZ3H
co+x3GUcChvKl38ZT5WYtdCup0qfWZL1Icc1xq8F8/G4sxT9Om4vH5+Dsmut
ot4a16Fw656NOostxY7yWYr95DpKWop9Inf68nx0n5XKeipv3p+ePTFrnVkq
Yik5j6Kop9zZfW5NCnH7+mRtKuSpxFSTlqmkq+SeqTxb+d7XzjyKbnkqtM/X
Z6r78lRZW2V//UnHUzpbC+PKU5N026qOKU+NKk8NK0/BUgNeTxlTTfRbruIz
VemzVX2e2pTd58d1KbYU7ARLIc3ZSXM/ZCo5W923F9idP2i+tmc2eshT0lA8
p1zOLEdk316pPO+h4GyTnC3B9aesvj4ZaSZ35p+cW2E8FQeG4pkUOomlZp7r
3bsI9vAiSd3oifLRM2WoF8pMr0x4xh57Au7A48uDPRQ5q8LnKmkp9hQcluep
+7AV163YVDJlZrAX9VVH8y5Kuiplq5zzVuGZFemwpzg8b927v8rjqyJ1q1Da
9RUby2etzJ7AEuet/Hus1shSfNuuq7J8VaRXsIinbFPxbPVN52u0rATrWIF8
V89H6ZKnuEbFnuJakPRU6LqU/eTLlZPkffp52FJZfsryUpF0y1NFegDL1KOs
r+U5E9SNeeNtzX5we+1EnchnGG+d8B495atPcny1KP79Ks9FXXpmS+A8VMhT
rqP4jA7PQnfnL7BH5Exwe6ZdMSOVTWi/lDRUyFKyJ5G/j7w6T+KTxZSl8NzS
UnLOhM9TvoQ85TMVbuEp9pXbCygd9UfyVJ6lfg9PFTGV73Ukr8X2FN8v4ilf
jK3i81SIPF/FZ6zgKa5NVfpfUOAp3yw/njlRxlPpOlXaUyFLkenimeeyv89n
qcRRz2hXE/uJDPX8Gc0cx62776lw4jnmbCDffIkiyfKU7AM0jorn/NmWeuJY
6mk02/OEUul9RklqRk/JUvCTnJnHgR9wbQ8f4O3ayEvyFNeopKlk2FGyNuXz
lNz/xTuSfSljq7xaVSiNqSGVAW/yalhFrOWz1eacP63KqMnW/BhluzpuZVf9
neLL3tJU7gyLzl3lzgPMtlVqLmAJWxWpaRW1FRzl2opM1cEcC5+vfHWrIs4q
O4e9aH+gL1n1r7Sv4voVZlrwrMCMGE95XFWu328z3kOsPZWqUzn7h2Gru/2G
t0cvL/JzfDWpbhqqbJ2qiLNye/Vykmm3rLNHHc4jL3vWyddHl2cZ35m2bkb2
7rlxZ+j7fr/B/VfoSxWGYj/xbAnkWEQ6ii3Fc+R8+5R8fpKOCtWlwgYKJ89j
6RpX2FFpQy2Z2zKOKmKpIoaSlnL7/ZI5hWlT+foAXVP9Hp7yzaNwDRVyVBFP
dcNOncxVz/KUPZNCe4rDntqojJCp2FX+jJjAVzwHUM5Vl56CoaSn9Nmpl6kZ
FLLXT5rK7ffLq0/lWcrMc3fOR7lz0vEY6lIwlLZU4icO5o3zffTq8SwJb5w5
e774/JNlKFm38p2dko9JT5mZ6cJT2EOl89hYij1FdSlY6lWP6PF7TkZan+yL
NmcGotbsIN02p17TY63Z/mhnHvuZ+tVjvdHa2LNoeehRtDjwhAKPocYl/eQ6
ii2V5yk3lqnaqFtlza4I26rfRHqqaO2qrK9CngqZyucqn62KzAYMzQH07gQ2
+6vSrvLVrbL6An07gnP3BnfBWJn9gDl7rXy7gl1jZdWtQsmrYWVZq52dwWU8
5TMVeyrPVFmeyppHkZzXSntKmoodIk1FiWtWZXZE+c6uuL19IUfluee+TJVX
two5K+9jg18ztDerDVt16qeQpUKeCs0IuU9PhX5fpR1Vj89HaUedbC5HxxtL
qeBxep9jqqSvb8Waxe2bXcc2Ya9IvyT1oaoxU3Z/XhkrpXsC5eN67sV8rqMS
Q8nknUEK7+aVcyfcvr6lyRGrv8/X5xe2VOKpUK3K1/fXyTwK8zHuPqnfwFPd
sNQfwVMI16Z8ppKuSmfUTrynindVSU9xr9/c6x6KNJVbp2IbubMo+G05O91X
m/L1+Pn2DPOsQd+8CXmfe/x0TeqpsRSdOYp3N8nwLIlgcs41sad8ririKZ+r
3PD5KempxFE6dm3qmW2pVz3GOPAU6lONiVdkKZ4Bjvv67UF1bY4Z3sPGVCvD
j8lSS4NPqVcQppJ2csOWwtks11PpPcs6rquC9auAscrUrIrXrsL1K+OumaFg
NmaHC8fnKmmqkKtcW6FWxfWqMv1/7px1eMpNyFf+PVbzylJVk7vWYum82Voq
lLfby6m821mx8n53Nb71+yo0vwJ+yttvFdoT7K9fZcfeeRXeJ1z03FU7NSnb
U5z8GpU730K6yWcrOb8C89KTmelsqo1gnYrjnm3qNO9PGpQPp+tWPp41S8d9
Dv9zds9RpbxUwFGZ8xy6aKQ8M5U11G+RsM03gr2mdH4v7uuDlY6ai9Ghur6l
qGvkQ3G9zF7CrWso3lfr1qLsupPrJ9s1oZ68emUmuHO3jKV8sXcGp89HuTUp
meQcmMcUjqd8O3rhRznDD0ZiQ+EWWZwYpvDb/H53DoWc75fM1cju9ZOeKmuq
zPh29BZwFMfnqHYs1W5/X9u2ws8Z+7+wUznONnoqAz1/6X2+saeWlaPU9a5M
a2HERNrKnzE9E3BuwoRrVEU9xc6R/pFe4nqUr8dP7rsKxbVUpf+lmdsu/aQN
xXuieqkexdGWQh3qsXLTIzPHwY3Zt5vhmaz5e3m1qqJ9f3lfJ8tT08+ehT3l
9N/BQzDV2lgv1aS25obinUlDZKndhb7ouDYcnTeHo4uNkehwtS9an34YrYz8
FC0P/0WbauBJpqPYUj5P8V4wuW9Zmsq1lfQV3XfqVtJWPIe9rKvy6ld5puqW
r4rUqorWrPL2A2ftrUJOV3V8rnJtld5hFXZVXjq1Vp6rQrWroKs8O4ND9asy
vipqrDI1q3Z8leepH9fNOBl28sWZFyjt5EbPWd8KmMpfp3JdlWWrvPkRdhqZ
jvp0vuFNO97K89S9eCmvpuaeMxK+KWOsbtmpm55yZ953knAPqW0o9hVbimtS
MJR1Dauuo/ecOdtsJzgK4cd43oJ0lDtfgutPyfV+sRl88BSniKnas9RiZm+f
31HZnko8kq5NyTl+3OPHjmJDIQvjQybSVfjYrNqUnqmRPY9CzvzL2j9V2lQe
I7mmCn2M66ksO2XN9OvUUm2Zqoue4riuIlvF9apwxnUqk2SprPoUHMWe4rh7
qNhVbCQ580/uniraz5fq74s9ZZKqR/GeqOe5nhp59DAVsysqxz4+65hdu/FZ
KkTWqlxT+XwW2j3l2+fLmXj63LGU9hQcxcnyFM2jGNamQq+f3lE7FO1Wh6OD
5YHorDEW3e1ORZ9PF6L3h3Nkq83ZHm2qoWe690/YyQ1byuepxde9UShL6teX
E6pdpfoDM/oCQzWrkKeK1K3Cdax0mjMjhbIxO2qyOTdm0qqMixRzla9WhRQx
la9uxa4K+SrPVWwq11XXm8Vyu7VYKHfbS6m82VlO5e3uCqWoq4Lz1zOMFTpv
lWWrIs5y61btzLXw1qA8z5M4KvFU3kwKn6OyPMX7qlxPSVPpGpXOp9OmVaui
eeqlrGS7iex0nOTjybqJ/loiAUd1bqv2PNWtnsOQowrNyOuymcr027XjJZyz
61ayZp6wozh4my2F3br7uA7G9bRzvc27XtkHoX1KofkSsiYlzSQ95JthLu0k
PSVdFer968RTeZYK1aey5uPJnwf/LHx9fuwpaagsT/lnpdsz37kWqG/tX1vX
UV0zVYaVsrKj/LSTUZPKspT0lM9D3fbUxsKECTvK9RRZKs4O/iyZ1zpNcT3F
2V2ZsEzFrpJ9gDBVyFWoT9G+KtHrh9qUO49Cnp+S4ToR1Yr6X+a6KmQp6TLf
rmDZ48dfa+51r6hHvdL7o170mNvU7L7nz0y/H3r7pKmGHz6ghPrvslyV5SlZ
p5JmKnpOqoynEks9s2pTRTyFGhXmTNTHX8Z1qtfKVAPR/nJfdLY+Et3tjUTf
r6vR394tRD/uKtHFprLG5H/EZ6ketO2phb4XkRufrXz1K6+xhnopRWYFltkV
3I6tOvVVtquy61Wurdrp//PaamUyZSqfrbL6AKWpOFcb/hR1Vp638myVd9Yq
d+56fO6qyPmrUN2q3RpWp3uF8yzFnvrlal2kgKXuwVOuq9hTsv8vVK/Knmke
159O0nEtRV+3hKfKGaucp7rtKHNGrIBxivqqXS911H9X0E63e/WuxDeP3+co
mim51yBLob+PHYVrQddTbj+Y28fm7lIKW2o25Slf2Etrc9Pe+26dyvVUmV4/
aSrpqSKWyjs/lVhqPnPHlK825XMUW0qeoQrv8/XPe8+rSxXxVKHdv206yvVU
J3Wpduebhz6X3OQ4yqQ6de+eonjOVUlT8dkqM5NiasTMoWBL8bx0uXsqbaqX
VuhMk7CQnFeRZSnpMo7PV2wp9pSuReldvDz/XM7uC4Vm+cWmYksh7nzzvDnn
eXUq11N5O3uLmqoTT9mzIp4aT5Gphp5FtdEX0frki6g12xftLPRGR7WB6Gpr
QF1HzET/9XE5in5pKlstRq35h/fiqTxbIe24qhtnrDqpY/lM5Zu9KWfFyDOO
/H8f3KOLyHpV3hkrX63K3QecFdtVSU5XZ6ycr82ZXNQrJpeNecrVepVy3Vww
9y+bOlcbC4VyvblYKrdby3H8tso6Z6WTXbfKc1aWq7rpq07mBmbXo/yeCu6h
ivf/lvfUVjAhUyW1qqbXQ7Lm5Mb38d56lLCU9XU7dFXaV53362VZyhjynuYy
dFJz6so5phJ1qG5ZyvUUm8p6bG8jusIu6Z316Ky1Fh2hT09dO+PaT14LFpnJ
4Jt57lqK9/H6+vmyLCUd5UtZT4X2AieO0ilTm8rylK/PT54fS2pTM8pDU8pG
8NS48tKYctMoZWF8hIL7bk3KtZTPU1m7s+7TUxRYqE1L7RSwVPYM8u7MlHDt
1FTXLsHMT5KppKu8phKeClmK51FkxecpbalRa246G8q3e0p7Km0ZN/w+t76U
dS7K5ySfzdyP468JR3Hdia3Es8/5bbdmJWf8cY1q+MEjCvtp4KcHlLxZEb7H
Xf9IK4WeK+uclc9drqf4e5b9fr7zU+5OKD1L4qmpU/Gcidro86gx0auuyXui
w9X+6Hzzpfq3aTj69c18FP26GUXfNqOjNd3ztzj457Y9xfMxZIrYSp678p69
ij0Vqle556zK7Acumyxj4c9eaKeBtJXPVOQqT70qax5gaq467wJ29gD7+gFl
pKdCtnJNxZ5yXSU9lZWi1pLmStsrXcMiUznnrdKuWjaz1935674YZwXmBubN
YM8zVthW+bMDy3rKdpRO1j5f6amQqcK1qeKeCpkq5Koy+a09laT9s1B5dSd5
rqwbpnE/L2Sr3/Ns0307KuQp1KCsxJY63azRnAlpKev/2AvMC5ee8u2Pkp7y
mSrPUnmecnv+wjP7khT1VMiO4YT2Ny0Ga1N6Pvp0ylPSVNpSY8GaVGgWhezz
8+8hDjuqY0vFnipiKp+ltkvulApZyq0hZdWpihhqXV3DBFOZIFNluYpsJc5N
hWb7teMprkuxpbDTd2X8tfGTDCzVjqfc+pLc++ubMeGzlO95XE/NvNI+Yk/J
fj5pLPYUR5rKzPV7qAzzk20p6ak897ju8s2QcD8+NCc9dHbL5ymy1NOklzHk
KTMvPbUf6onZ6Uuz+vp5dt/jaG2sR12vP4sOVl5Hx43n0eVWX/TlYjKKfm5E
0fet6LLVTzMp8jyVOY/C46kitnI9lTXTIrTfamWk38rq6EAqIVtlpYyvfLu2
XWP5alWpelWgH7BI/x/Nq1jUtap2fRU6c3VWnzM5b1SsXKzP5+asOR+db1TN
bZlcbC6YZNW1uG4la1dJH6A7v8LvrDxfcdx5gTQz8KiepICz8mxl16zCtgrV
ofx1qY38mpTjqKzYvX3h+RN5CXmqU1MV9VTnrmrzTFRODejdaYuStwupWyk6
j/y3mg/x23uqbmafIzgfRbP7thsmui61Gu3gLI+67t6w5sH5+8R8M+/sLFku
8RnGnTvRbm3K56lQbcr1lGsqvzXKeCrPFiFPzZnvWXrKrVGxr/h9+Dh8fP4c
Cr+nwr9+9+OpLFf5HMXxeSrLUkU85ZqqSD2KvdRQ1zCc+txIKo25cUrIVcZU
xnB+R5m9vgt5maS0qhPUH4TrMFybUU1qcsByFPtJJ11HCrknz0G+WRN5tamy
npL7pDjSU258nnLrUyFLuZ7K6g+Un+vzlM9hIVPJ5zJ9f/E+YdeUiace612+
Lx5Fc72PVR4qTz2isKUsT3G9SpkKvX/rU8+j/aXB6GitV13Tvlb/7o1G//iw
Ev3fzxvR7e5o4imzj6rkfL8cT4VMNf86bCrpqiL7gl1XWbYqWLtq11j4M8jJ
clWoB5AjPaVTbH+V2Ve1MGksRRHzAN2zVmVs5brKNVVeTtcrZKmycW2VVd/i
upWsXbGr3HpVun7V5nmrwDz2IvMCy7kqe9+VW3dqu7+vC54q46jfokYVctVv
4ancGlROP12RfbLdDOzSSU/efc2LyDLQze5a18KO0paq0Qx02inV0kFdCrMn
9jB/D9f26jq8GbgWl6byXY/L+X0hS4VM1Q1PyX4/11O+1+B7PaF9UyE/uQ4p
4yl7rl/iKbdGxaaS9SrXU766FP/atefh7HpVaWN56k6hSEdJT5WtS/ksxbWl
PFP5alLSUdJOtZmhVOqzYxQ2FbvKrVUlX3M8M74zUnmewvUZrt9Qm3LrUBx3
5p47CyLPUqHzT77+vSxPZfX7FfGU7PuTb6dmUzyKTeUYya01uTZy+wOR/r/8
ZOKaLM9URWe0l/EUmUp5Spsq8ZQ0lc9T6PurTzyNdhf6o8Pai+i4/lL9OzQY
fb+pRP/1oRG9PVB/x4w9NJ5CbStvZrrrKepBjJNlKvjJlyJ1qnZNFapZFU1t
bDCYtfEhivRUyFZFzlaZmtVs2la+eYChOYBwlYzrqzJ1q7x6lcxJwx94qmyK
+Cpdv7LnX4TqVaH5gG93l6y821umvN9f8ebjYS2YT0dr0afjVUrIV2VcZdes
bFule/nCsyV8fvp23tA5a1op4qkv5822DfVb1KjKmKr8Wak2z0Q5fnJrUEV2
Fbs7ZbuRMvaSn9euhcqkm27KcpT01Bkshb1SLR3si0I/Gq6xebZcqLbBe3Xt
eQ22m/Ic1a6nsiwlPSV7/fLqUv6E+uHsGlXIIaF5DPJt3zyKkKdqKqvKTZwV
ZSkO3q7FH1NXH99Qn7euPr85r2uMqDUicDKyvTxvBfXIItld1XMeQ+EZ+jKp
jwvsifLNPvc9buY34IyXOH8ke+fcsFnYMFwncutF7uwI+X5zP54x7s7H49kO
bupTY5T1mQlKcxbPob5OZZrSmp+JM0VhC8loI6Ud5c+EObuOviA5v889I8V9
faEakjvLj8wjdj9ht247kc/hPtfCQJ+J/HjMRtcz0f3z+6SnZA8g7OS6i2tU
NJsi4/ySu4NXGko6qu/P/2nFV+vymcpnr1DMbArlJnhqoucZJfmen1BcT82+
eECmQq2K+/7YPbhNzlY9pfkU9fEXNDsdPX84R3W5ORx9Pp2P/vFOXRccq38b
JpXDBv+iLeXxlGuqLE9luarSFzaVz1VZfX9ZrsqyVSe+CrkK/6fBacdUqfNV
wZmA4XmAlqvmdVKucupV7drKvzN4JjpaSxKyVbvmKuKr0FzBovMB3+wsWnFd
lWUrr6+OVihF5gSW23O1Zpnq+6Wdon19xlEBT+VFW6pzT6Vccw+eKtL/V36e
X5sz+RxP+RyVZ5iscN9amXTisDJu6paBrndqXQvs5OZiZ9XyFCyFPVGYQwAz
uXMM/HWOsj7J7q8LeSpkKd3blsTnqbK1KddT9pyGatBWobpOkXpNuuevkusp
aaminurUUkkqVrJ85U0JT7l1KLoVhmrHU66lQq5yP9bUloSjfJaCW+zgfaMU
n6sSW03q8H4oEe2qtJ0y56HH11u+eejJGamXwfqRL66nQqbyeSkv8vN9lpp9
2UOekjPSpat8vpJz0tlQbrJ270o3sZXYUPLxV3/6sxV+v89UZWYJeme0P3ti
mSrkqZmeh+SpmZ6fyFTsKzaV9JR+7AnNT8dMCtrru/gynp0+EL07mCZPfT1f
ijZne3M9JU3lemr25bMoFBjKlzxXSV8V3lvVhq3yUsRXcgYMxWOrUq5y5qxL
V8n9VVvzE1a2q5Pe7Ku/J3U8PYEiZk6gyNHyjJXjldlgDtXf5Ufq7/m8nNTn
c3PaqJpbztn6grnlnDcXrX5AX0+gOx+wyE4ru36VdlWWr1xPcbheZepWJzWT
L6ftz7BwXZRrKI+Nvp6ul87nM47/PFK7+XLStPL5eL1U2nVVO/ulOtkLFToX
FfJTURtxjSX9WMMbdw5D2fwrGopztb1KdvLlDOelVI4369Fhs0a1FjiJdx7J
czhI1m7c9Nkj/8y8UHyWCtWjXEdJT/l6/UKWcmtq6YQtVdRT2aZK6ltl6lOu
pUKesk2FeffwVDXoKNdZvvg8VcRV1sfm7InKnXtewlKy1uQaiX0kzzX5Ij8O
PXvSUmwV6ajkWmk4zqh6fIyyNjlOqU/BVFOU5ux0nMk441QDS8UzO5lrUClD
4VpLvDb9+kas/bpZc8sz+/sK2Aj+KZosm9l7e3vMrl7pqqx9U7IOJSPfxz5h
88h+Pll/YitJU8n3vfyPP5nwx5SpU7m2cp1lznI9eWSZalzZaaLniQn2GOs8
pkw/e2SFTcWekvMqlgd7aR9Va3aQ9lFtV/qjw5XB6Gpziv4v+/9n7777I0mO
u8G/1+dEmXsk8XkkUpS49NzlkmvHGwADNwPvPTBwgwHG7uwul+uXRobSne6e
R/cW+iqyOqoioyIyI7OqgVmSf/w+3WhTbTC7U9+JyMj/+vVjd/vJ8mi2p/bn
7vVo0FL0OtpKcxb4SbIWNZW0piqlH7CtrzRXQY0YQz1lNVVjZkXyvsBNW1Ff
fXxchterUmzFXSUZCzzFA36yOMviK57KVf16Fc6/iLsqdd/gul4lmUqtW312
6hJylWcqZX5FaAY75P/7jZ9G3UmoQ4Wc9F9fPTflf/0aI/skZRYErU0N2lPc
VtVMdti7KmKpco8r2x5Qasj6KK0mFXKU1J/Ge9Ugzft8R+G8Bc1ZVm+lmqlL
C7XN7z486/3ml3LqPr+nbq439vnh/rF0ThyE13wsezrxx0qPl2b7UUuhlTRH
SZ7ital0S8U9FTdWbI2RP/9Q8hR+Nuqps51NF+4pDJqK1qlinrJYqo5vGc1X
agzzI4LroQx24glZSnMVNRQG1kGF6lJ09jjuZ/toa8OZSnMVButW1GpeIuso
0FF4vsXfE/oOPQXrpUJzy/ltsH7p/vy0swzYBo0jGQlutyTkKm6p0lA0sw1T
0dl/vK/P4il0DFiI+onXn3h/H/cUPgY9BeHrqTRPheZWoKeoqbYKI1FTYZ1q
d3rCZe/eeG/37liVvalR1/uHnqJ9gLDe6dH6tDPVs22Ynz7T+/Bwtvfp6XLv
9x8d9P71w/tunyqLp9BU3FP3Z+/2aOrfp+ysnDpWai+g1VZt3CV5qmGrfty/
zQjzKiRX8X2C25jKr1s1562LcywSa1afPfIjuYobyxqLq9BWdKZgaE67tJ+V
xVV0nZXZVLRu1dJVWqC2RcN9VSXRT//7y2f9dOOWeMo9ff/rKz+D8hTu/xtP
CzsJ881D8yU0R4Xc1MwzU3DegnRfzFh+wr6zv++0aHUlsdYkmumxl6/AUC6P
y1R9fo/d+Tz085WW2vH650LrkmJG0hKb60frUjFHUUtxT0m1KZul8jwVmjtO
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
iq+xorbC3j+6ly+d74euCtWl8BKCnoK6FHpqcehmVacCU5WuGqkshZ7C+lQo
OMeCm4p7CuphGKurcmpX+ryKvH2DU5PqrFitKsVW2vwKq6m0ulXKfMC21kJj
pfYMNm0lzw6Meeq3z49c4q46cgm5SptTkZSPH1Smoq5CT1lNBYby+gZDewyT
NB9X+un//uSxl//4NC963UdOvJcuzWUWA/1b8fn+7ZMzL9RTcL/qpur5LP19
liz7QtH55pqhYvWZmKdC3hikq1J9ZEmqmxp26ufj4v8LVZ6e9FOaCi5hnQ84
BLyE5+uQylLF+Tyfmx7qu4tFqldpjkqxFD9eqDbVjaWansL6kmQrmheFEfz4
lsL9ph7t7bXylNTvx+dSlKaK16ikvj9prl7MTSlJ7eWTolmK2+lsZ1VIsyaF
ebAh1aVw3kM3ngpZirtof2GuCncSjeQw/lhLf6HmqdJU9noUWirFU83kewot
BbP+6Kw8WpuK1ae0NVTcUzFTab7CWhVdT0X3863fr+4pGs1TcB1nVIBnwFO8
RgV9f9V+VmRGBc3+zHjlKWqqkKd4UmpXmq20mlWKq7o2Vo6rLLMBY6bCGhVN
Sr1KM1Wb2lXb3kGrsfSa1b5Yr0JP/eZpGfRUzFVanYq6Kjb/D/PvH500Qj2l
mYrWqdBVvA7F117F9r/iqddy+X6q58KX+fdP/AzKU5J/NE9ZjmP2D/OU/Bg5
/1p8P//8ST/Zeyk9Mzmq6mN7/7GXL0igVy03X7BjwZw7GtzftpGEulSbWlNO
HUrylOQoTLmH7Kk7jwcjuX4yyVLFOT3USSBPDw5cnh0eZuf50ZFp3VVOD2Fs
715qKUu/YW4vY/0+mtYqvRWeEQ/fMXzf8N3D74F6CnLWD7XUw83NRqipJE/x
dVTSWiqp7y8UzV2SiVJm8ln9ZK1L6YaqI9akIp6S6lNSzx+1E+3vi1lKM9T9
+VkXairJU6EaFTeV9FxvzVaipzQPUU9JloLQtVUxTzX3n7rX2I8K9/ule1Px
/ZxC/X45s/24q6RZFdrsCnHW+sSYV1Ojs/7o2io6h8Lr9+tfXxy51VsYvuku
4TawGM4FLE02XFy/U2V7etyF2ooGZq9DuKm4p7AOBkl1VUpfYHxmhX2f4Jyk
GstSq7LaKjZvPWYqrWaVU7eKpW09K91V8j5X6Cr01G+eHbrEXFXvA6zXqfgM
QN9XJ0FPVa7qe0o11Sd+rarhJxL3HGX/q9DMwXIt16NGaB/j7z8+a5jKEr2P
Tk58bZJuKKlPT/dT6aA6p170x8mJeSq+l1K4p6+xLqjvKJyjINmIz1bQkuOq
RhL8lOMha6Q6VKMWVeRXT4/KPHnQz8MqMBsdXAHn79DPB+tyHmyWpgpZiqet
p7R+wZyZF3zGhbUm1cZ04fe1r0R/PfSUVJsKeUoylTbjr2mqHc9U1Fah2N1l
n7/H3ZTip5CneF2qNtNKILKlJE/5plpO8hS3FO3P0yxl8ZRUo9I8JZnqPDxl
rU1hfaqNp+rUvYLUU2gTCJ2bnuIpvp+vFoulJFN58yqK9wPvj5uK9iiW77s2
FA31FVgK4upW4yPVfMCypjVU/DxSBUy1NTVW1at4YP8q9BQ1VchTUtrUrbAu
aV1nxetVKb5KcViOqyyzAbNNhbWq3Y1GXtzfKjOAnsAcY334wM8vT3Yb+dXp
fS8fn6XXqdQ+wOeHLr9+78hLiqukeRXNmpVuqUatis2yMO0PbDRTzE/UTdZ0
6SjJQSFPhZ5n85Mxv3ripau9aJv7zRpqUnS+Qt9RkqdCdoolZKqgrYye6sJQ
aKQsT/XrUegorEf96smZC9SlwBW0zw8t5c7X+5ainqKxusrZiUS7rQqZgx5a
d2X1FO35434KOSpmqRcssD8uD73//eJ4Wvgx3Bxz+J6L7/4x/B7AtsRQmqUk
W9Gf3fOUdVS09w8j3Ub7A7m5+Lorbq3yMXl1pvP3lF6X8iLsiVu6qmkRbR6F
+3ltvcrJ6prLg5XV3vHyisvR0nLvcHHJZX9+wcVdN3qK9h1KnpJMpdnK6zkk
xuH1I703L+wpaR6F5qnq5+o7mHbZm5sSg/fD97Q3N+OCM9JxFgWE7kPl1lH1
99qF2pClz0/yFN/b1/PVzdtVFm4NqVm8PeyyNDRSXg5Dz15tKuopXOuFKffO
qs3EPYWmwtuhLiXNtMDbnbf6MwFxfRXvB3SmmrmreqqeezFq9lRqL2DOXlba
3MLc5M4VtNapUkzVWFMVMZVL4uyK3N7AWD443m6YymIrXquyeqoxs+Lpvmiq
mKdirmr2AaZ5KmaqNDPJKV9Hnk8ITvq3X502kmqrkJmavXVnoovk6A7r1FHM
U//y0WOX7vxU59cfnprn1+FcOnQUn0uHqecrnJpuD9WrNFd5yVjzlFpj0pL0
3P5np31+UI8CR8F+tWgpWKMj9fnR+pRkqpinuJlChoLj4XVpPylt1oTkodD+
VvR+PJZmtNBcjWeCnbRwd0kGK+dB1HGWYZaK2cma0FoqDDoLIrkLrmM9C2ta
uI8VD5oLTFXeNlg/paybsngqaKktfz9dairNUtI+VOgp6iiMZKn7c/Mu7jox
lOQpbiruKb7mirpK85VXM2OesvT2pXiKR6tP4WfXHAXZX5jxPIWmQk/hJZ2Z
jrP+cD457rWb6iluqYapBE+Bl0K2crl9qzTV+Gij16+qpY2OiJ6S+v/o7TjD
gs6z4D/jPEC+vgpNRfv+ICFPSenSWCnrq0JzAaVYnyPtqWbZb9g6BzDkqtje
VeL6KsVXVd2K5P39bS8fFH8nmGP01/tHW85UmNR6FdSqMJ88Kkz1+NBFmqce
nAEomOo3L/T1VLF1VaFewDIPslzVNvVxfT+h+yRDpYT7SjKTLbH1SvHn0f67
f/n0cd2LV+R3xXuj16NJtJE1paFobJaq5nz3HWXxFE3tiJOgq9qswQr1Hkrx
3qOhV48HnRT63HR+X7lO6pGrR4GhXM/bw4e9946PK8eAm8BRWJsKmSrW+8ct
Ba+DEWtR4Cd+HGVvXmt9SpsZqPXV0f2qQn7K9ZQa+J6Kz4uBepRUk+J9fA/W
113wutfbF6lT4SXWt+A1qKmoodBcfN+qZq/glmcrHr13sPQO9Y+2TxSGPy5n
n6m4p4x1KcVTfF46n0HBwz1FHYWWQk9hXQo95YVZKuQj7ij+eK1uJSbgKW2v
KT73T6pvSTUo0VHYszeH0WtS4Kk6dU1P8hQ4itattu5NOVNZalSSmUKWcv18
xvoUpnr8rZvOVCt3RlydClxFexPRVHipeYqGz67g8epU45hhbxag1vfHPVU/
/47ZU6mmSpm3nuOp0H7SVk/VpkqvVVlMZZmpHnKV5quQp5J8Zaxtgae6MhV4
CkPrVFKtqmGq54emOpV1XZVUr/J99SDJVDFXpc4T5PMzuKf+9aOHXnJ9xdcj
xdKVpxrrmVhMhlI81b2hZE9peyfhXkmfF374vLABTchNWjRz5NrKbKbQexW8
VK11YuGe0mpx9Pi4Pgr73LQ5BzgvjnoKTSW5KlSjyvWU56oOPEVNFerhk5wE
9ToMrZXx8JpSLNxTkqMgtLdPctTx2poL/mwxlXQ/9xS1FDpK27vKf85mFbAV
vY6R12bpRpIsleopbb8pPocity7VlaeqNVOsx486itel9mbnvEie4h6i661o
bQavc4tZnAWh1qFGkvbq5YF1S6F6VcxmVk81e/2mPU/B82hdCm1FPbUzPePm
6aGnQqbSalG4/klaR0U9JdWpaKin5m7ecKZaHLrt6lRgJjrbnbvK4qkUX8Es
QO4pairwlDPVzLhLyFNlYEb7eKc1qtQ5gCmuClnKegy5TlUmxVNWU2m9fxZP
tTVV27w4KPP+4U4ZZiutH1DsASSmqnv/9tWZ6uIewMxU2uw/S/+fZY0Vukqy
VXTPKpOnzlQ7SXUz7qh//eisn5irHolp1WPXQbr0VJ6PUqN7iu476ywFfnjq
J+SmeuaCn5irQj2BKYnVjLI8xT5D/TkeeaHz+nD2gpu93a9D4VyD0529Kg+3
dws77bDIpoLnS/1/IU9J66VCcyq8nsEBeEqzFDUUrCXD0Nt50EGNKOuNGmGO
wpoUrUtpluKmwuuaqcS5f2gqxVNSuKnKbHihvoLAbdRVzXkX7T2l9flRS9We
2vT25+X7SuV4yu/zW1Q9FTIVtxStR/GaFLXU7sysd59Wm6KWwh43CDok5KmQ
rWh9ijoJZ5HHPCXt+St6qXis9nh//dQssdWM9xnpbdSRmqfgsrqv8FSoRiXt
5Wv1lKtf8bpT31OVo/pegksI1KQgYCluKqxT+fMowp5aGtezXDgJo3sKe/98
T+3d65tqekz0FDwfg54q003Nqu3aqhQv0Tko0jFS+wBpvSplvyrNVZY9gLWa
lWW9Vaz/74/ZU3x/KimWmhX1VKxmFTKW/hzZTVpintJz1sgfiqd+U3y+wTtK
95RUl/oU6jGQwg+fFJ7AaGYKxVKrSjGV2Uwh7wl2+qj4b7SRx8cuzc/D556f
uH2ksBYFNRQwAZ21XTppxzlKtpTvKWl2OnWVdU5F1nz1lp6S5k1wT2GtCXwE
8w1TAv4RQ2wSDHmO1VFHq6teuK3gUjIVPx7aC9dTUVNptSk9655NuK+osXit
qrz0raT1+kmPiT2eW6orT8FcP0xzDkU7T1FLafUoMBQNrVPxWRTcU9RSkqks
QbdwT6F/qKfwOnooFslc9Hj0uFjf4p7isya4pSRjcU+hqSRPSeuo0FOxPj++
LxXeBvMlcMYE1qDo7AlwEvT0wSV3FXgKTQWhdSq6d9agPEVNRferAlOBp5yp
Ck9Bmp4q3iNLbao6Zc2qzubkhBqY00iD+4uVCder2poq9vz8dVVQq1qowj0V
M5WlTnURnpLWYYWOgZ6iqWxV5IOj3TKKr6ip6FoqPvfv07P7LjFX8b6/lD2q
LPUqvf9Pm7eu7Wslr3+y1qHyPdV0Uyj/8quLDV0nleWphLrUVx88NJkJHqen
3pdXWy/l+vr69ShqKYun0B80kqusPYHWWPoOU993mRMXOucc61ButsTZWe/D
01O3LgrqP08Pjgrv3BfrTw82t124ofB27X44Dta04NiYR3t1fSUUrMVgjxus
HeKha4m8xyXOyrPM0cNZENXsh/7aIecDMj8PnZMTaR4fPzaf1YfuKX0ElxtV
jlbXWXRXcVNRT/HH8b2p0EnSvsByfIegU0Km8l3VtJJkIz27ns948PVovSxm
KWnfXi31rPTm/rcmT5GZflibAktxN3FPwfk9hj6GzqoAl2HfIDqN+kw7vuY3
9zNxF7qNO4bPdaD9czTaY/jcPWn2Hn0srzdxU0meir2XRvqegp4/WqPisyms
nqL7Sbm9pO6MeUE3oaN40FTUU7M3rrtgrcqtqSKmKmtUQwPxlG+q0apOtXu3
b6qpUbOnUlwVspXsKr0XMHXfqpChbDME465q9v+hqdLrVNZ9qizGSnFVl3lv
v45mqljdSqxTNeap37eZisz7g/D9qVL7/yyuSjUVd1XocRZP0ffyzx8+qOwE
1//5w4f9PPiTpwyeap+zRlI8pbsjnEGbajCWqj2FgRoUpOrpI7MloG5EDcWd
lBLNUzwWW2AdhvpKmsVAU91P1h6FZuWleAqORR3lWSLiIEtCfXahNU5+PUoy
VJ3DlRWXmKlCPYPucVvr3v5UaCm4PZYHG7U1wB3UU5Kr+Fqr0lVlUgxF607a
HAy6fotaKtVT3E/H60teQvPRUzyFvX5oHmomyVPbU9Mu3FVerYqZita9uM14
zUu1lmAUySvUQFGrKOailqJ7QsWeSy0l9f+F1klxt+FrwneNlkJP8b6/mKfo
Git0FNS64Hgb42XWxyZ6a6PjrmcP7eT690jQU9jzh56avnbVxTPV2B3W81fP
8EMTXaSn6OcCQ+ElNRW3FRhKq1lxX4GjfFvpfYCWdVVt0uXaKlqrqmtWi6b5
6pKptJkVsTkWYCnLPla5ebanR7OVZiyoW1FTgaXwEizF9/4tfdV0ldj7F6hT
2WpVuf1/dlOluEmajSGlNBTNw+wM0lO/Kz4TxOKpnLkTOX768v2TrISfy9ZN
4dwJwVMfZ1pK6pnT+gHbJKd2xr0k2emDU1gLdODtA1vWog5cjQhrUeCgo3Vw
1J6ao/VNL1ZXYY8gT6wGw02FruLrh6R6lnOVMs9B8lXMUliToo6qHJExk1zz
Eu2rk9Y8lY+Bx267wHVajwo7aq0f31NSvYq+D943WD1mY7UyFUZ2k5baUxZT
NWtVG0FPSfdJnqJ+ijkq1VPcUDRaf1+Op9A84BYwDnqJmgaNQz1FXRWqVfHZ
FlKtiyfmLFq3CtWUJKvwn7mLuKWoqULHpbUryVNS+HHo/rguxFLY84emSvUU
GAyeX1lq8m513g9BQ3BHUWOhp3D9FGTq6pUqYCqcpe6eU82kGGrMmXhZPEVd
xW1lrVVp9aqQpyxrqzRncXPlzGS3rq2yeEqrWWmeiu1ZFVpzFeoHrDwUmW0R
m3fxdHddTK6taK2KrqnC/an4PlWfnO65hGpVWKeitarfPCtjrVf97r1Dly76
/87LUl17CoLuuai4tU9CrOukQoYKGemLwtRaLMaqH/9QnOcX89QvHx01ot2O
9w3aVCmeqt9baSa/9nRcGer5Mazx2e09Ks4Pz+DcsD8roaxFbfcNtdk7LM7D
y2y7gKvkND0VMxY1Fe8FjM2Qo67CtULq2iNWx3K2qvaP1WflxepXvLcPHeUZ
QrGRZKRYqJ9072w00jRTKLqnQuurGvevr1Q2Cteh4p7iPX9Smq5aV00Vql1R
T0mG0upRMUdRT8UsFfMU3QtX23+KzknHXj80DvUU9Qu9n0azEK1Xoa2op6zH
CSZSV5JMJNmI1534McA22jGlGpZUP5PqVdxS6Cjcywn9w0P7/kKeorUpeA4Y
CgN9hHi+jzUWaqpQrx/1FNSmwFK0RgWPcWutRob6e1ENNWb2vSyekmpx3Fj4
vWg1K+os/C7xOv2O6x7ASdNcwJCtrOmiB1Dv/+N1qjoPV5dcTteW1X2AQz2B
1v5A63xAKZqbQgFHcVtxVzX6Asm8dWlWBVjqowe7lanwktapQrUqWqeS5qnH
6lUWV1nXVGnGSunnC/npdx8cu6CjfvfBiZc/JE+lzDMP16FOe9Is81D4c6RQ
Q1k8BZb6OGApKR+eHbpYPNXWVJa5GFiPwn49GtwfCudJ4DxznGXOg/YBQx0U
5+A86KqmrTZNCa2nsnqKmorbKrRGSbIVn5+XMquc9/Y5Q7EeO4uN/MgWsngo
XntKC32+xVbe7YWnMJqZ6GN4JE/x9VTa2ippTkVsDytMqK9Pq0lZHMUtdVSc
Y4SS6iluKzrXj/f6Ud9wv0ieooFzdHeezmpc1T7AZNYFfTx/Dn9NGsle/H56
XGoIagn6urHPIx1DOyZ9f9I8RFqfo69Da1G0DsWDpqLrqLT5ftRT8BzJU1hL
4Z6ia6n4LArqKVw/BaHzKVyGbvUWhmtXYb3K4imINkNdshR6CuZRoKdwbjr3
lLQ2jEZzVWydlXWGReqs9Zyk9BDGalex9VWSsXxX2easW/YHts5ft+TJTlpC
NStqqkbN6nCz4SlqKrAUxq9X7XlRXdWvU/F6FfeU7irZU21mVbStQ9HXREM1
c5Kd8/DUbz88MeXXv5QTs1SoDuXXmx42a0iRWMylPp9YKtdT6Ci0FPVUSh9g
aiw9h1h/QkfBGigIOgpmzT3cAdOs9/ZXVlwOivPeZmo77Rfn0TTl7VsuuZ6y
uiq1P05zVqxPsKpZ9V1EZ4/Xe8vuVPfT656j+v1svF7DvRSq+0BCvjlYXlUT
s1Hqc5seK/68LC+7YA1LW2flbltbdgmZKcVTMb9Ipop5Sps3wS3F+wq7sNRh
ca4RyvEKZskL95QaMiMd51BwK0n1ImoWbg7JHegL3guIr4fPwedLfYbcHTzS
++UWoj1zGO4q6Zj0NukY/Hj0M+Pn5uvBJJfic6ml0Es83FN8LZUWum4KXwfP
+dECtDZl9RQaCmtSeL97zO0y1FVwieupUj2FpuLz0ut55my+n+Ip/tksptJc
ZekL1GdXxPey6tJUFl+l7AsccxU1Fa1ZcVNZfGV1VUoeb68mm0qylXWdVTUL
UJkB2HTVrkvIVJqrpDqVFvQUj7VW1SZhL2l+Ou799v3Chu8/UCM66v1TMb/9
oLj88CwYeExyDG766sMHnoukWXtSTYo7Suy7a5t+nQnmS9Dw/Xkb+/Wy/aZS
PEUd9bJ4qvkej6uUPX1HbnY31KOgfw8cBV66X5wP7y0tFZerDS+V2VQDjsLL
Lj0l9QGeGoNrherYa1lSjyDtCaT70lb7IgX2xQ15idaftLpRyDznFclV8ntb
Dpqqrator6C0P1XdVymbyuopbW1UzFGplqo9teK+j8PinOOgOP/QgvPIuaeo
q2i9qmEsVpuyeCrkFeoBPFfnbqFWoqbgDtEeF6s10ffMrSL1zFEDhepX1GRa
/x11FX1e7DsMeYobCX+mMym4u0KugtvxcXgM6ije5xfzlLQHFQbmrs/duNWb
vXXDBV1FbVXmpsv8ncJiY0NeLJ7ie0OhSailLJ4alKvipkrbI9ia8zRVrB+Q
9wHS+RVa3Srkq9iaq1RPpSZWs5JMZfGUM9VxmdpV25WpuK14H6Az1ZP7Lqmu
+u3zA5OprPMqQrUmKbWPYkEv8Z+NKZwh5TfvPzQbCR5rTvHZaZydpAgz9Cyz
zHktqhNDCZ5KiWapmKckR3FPaeupukzMeR+cHlTronBtFK9HlYZaJln1YvUU
rU/52TDH4qymk5rhs78hfC+kNrZCT3nzvvvH0eYx6HUndMd6sqH2l1bUpDzG
+jhbfauuVWmewnVUOY6i8yz4XlZ05keoTiWZKuSnLvr5tD2m6tpU3FLUU1I0
Y1FT0f17pV6/mKkkT1FLoQmoN7h5JCfxx3BPWetC/Nh0Nh7tm7PUm6TPx3vv
tLoXvgetl5B/fu4pPueczpagntLm/kmmoq6ijuKzJ7ippD19aV2KPg/2r4K9
gWduXndBV1Fbgavmh264zI2UpsKgqc7bU5qrYuurrKbK9VUXror5KnWNVaqr
dFvJ6678xGcFZiXDU5KrLH2AjRkVfVdJ+wBjUlzl1aqIqULrqqz7ATf3r6rz
L8X5vBZeH0r1z29eHLIch1MYwJJfv2jGaiTpudZY5+iFTIXzyqU1TJhqH90O
Y3VXrDb1q4S6lMVUXbsq5ClwFMznw/kS4KjT3XJ/XejPAyvtLa24cEP5loo7
CtxETeXbyu4pyVcPEhJaXwSX5X1rDVeFbGXZ84k6ytK7h34KGSrkG5q9hVUv
+0vrrbK3sOSFu8vaM6jVqBre7HtJq1dJ66vQU2gp2msZ2tOq9FftqZihYjPP
Q3vw6mnO3uC1qf3i/EML7L8kJeqqwlHUUrimSevli/XSSRaQ1v7wmhA3htYn
KK0v4j1rIVfR9xd6X6FI1tIfd694ralGtL5CqQaG9outi5LqTbSuxU1FTVbV
uhQn8Bnp3FKap6p9rIZGnKdmb97qzdy4WYfYitasZodvFaa6fW6ews9DM0hX
aaZqumqs8VmsSTFViq3aukqaXWH1ldYfaN3bKpZHW+lJqVdJpvJmqbO9qho9
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
mqicZ9F0lLTXLvataeu1QnUzaqiduYXiHHbeXfqxe6mNq3KPtT275B2X1qj4
Z6d2xDqV1PcX3MuYzatAk1BPUUvRWo82Z92vbYUdRWfwpTnK9xSNZCv6OVM9
JdWq0FZVr6DS26cl5ileR4p5Ci2FnoLw2hcelzuMRurHk+pCtFbF3SWZqXaT
fB/fzwl79PB4ePzF4YnCK+OFJUZcFobuuFDv0LkQ0jw+6h7JU7xGha6SjsuP
Ua3BIm7gHuDn/rzvT/IUzEiHoKusnpJmqUum0pwS29eXe4r3KtKexVgvYNeu
Su0FDNetcF+ru/2cv6ti89atvYDW+YDyPECbrVI9JbnKOq8i2PvX3+/XYqqy
RrXlJWlWhVazehLvozuvVM7rJ8VPfo5NuZAZDi3dRP0UchR46X2wAxiicALk
eWEFCP4M96OtpJpVyFCWWleV4s8azS+LfFj8Wczpz6M1JW4qeh/Wq+qZEr6p
fEvt9ef27VTrpA7XV0ivXt85S1sutJaE9aRBhNe1qHn8elI4mqG0+lidFbUW
x9eMhfa8wvu02RlwPMmo9PXoDMXt+TKbhUe2CovAJQ/criXVPNQ93FXSY1Pj
m8pfT6WtCyut2+z/S5kvL3lM2u9L2zuZz7TgFgutbeJBH8VmnHtR5pTQ+fnw
GFzvRHv0wEJSnx4NPhbXSMXWSoUsheunUutTkoPwPny8tFYK70vxlFRjkmpX
9HFoJLQOjWQpej8YCY6Hda/6te/161Klp+ZujVaZvz2mHi8UNBlm7tZwlcZ6
JLKmCi9DHqOG4F6gHkBP4WO4o2av36yCpnJh9pM8ZTUV95TvlJGev7fvHRfw
FMTqqRRXtZkJmLsvcLqr0pM7cz3VVNa6Ve7aKktO1pZae0oylTavQq1TFZ7C
xEwlecoyp0Las0pcY8UyKCOlRLLSZ08Oggl56rMnR16yZjCcUyzrlKyWAkM9
O9hyeXJ/wwWuw33wGOoqWrPiwfukSI+vUvxZo/kQE+jfS/EUvY/ehvv9wiX8
DPfVPX1lLQoCjoKZE1CTwnVSe7BOojhn3YHzV/TF4mYZ0R7NdGEqerzcud2S
qQ6E19hZWK0S8hSdGZhiKeonf11Zs+bHLYWP2Z5frFwkOcqSXPdIrmprKclU
2kxA3tcIRqCmkmpSlnnzfM2bdVY97xeMJeapat4Dm//AU61l6n92PgOShnqK
m4r7ivuIuop7KrRmyjeU76nQHAo6iwLNQ9dM0bVTkqskk3XhKX6/ZiRuFs1V
9PHwM74OHptaCvw0e/OOC5pKe72QmbTM3hzyZ+cVkepV2iwL9JRmCG4Dun7K
q0kxT9HQWekhT/GZf7z/L+Sp0icjzFQjZY1qogz3FH//FlO1cVWb/assrorZ
qq5X2bMzdc/L7vTUwGYD5uxlFZq3nuIpa3RT6XMCU/r+tDpVeO4fMdWJPFOd
eoqbKlSzChmrbaTXgcSMFM9RVrqYd9dpIm7S5j3ELVXus0lnb+GM4+eHuy7v
He25vDi+7/L+g31zYg6jlvpl8WcPo62DinmKRnosrr36+OmJCzUV1qXQUZCz
ve3eyXZ5vo+GgvP27bk1l515YimaAXpKNE5khrfFU7TGJb0GD7qKe8pqKe4o
bigevl8X/T7g/bS1VFtPSaZqezx+7ObciqXGOjHoZ8TrtCeTrmWr12A1naHN
nqcOQ49EnxeZxy7NMqc1KcteUV6WltRQX2HwPjQVukqaz4ceoqbSPCXNowh5
CudFUFdJPXroIMlSIVdpsXqK9ulp1grVmrhh8DZ6XF7b8r01UQUsxT2FprJ6
qbSSJb6nuF8kQ2me4pagVuDrpnh/H3fU1LXrjdD3Rfej4gm5SqqdSXUq8BRk
a3zE5KkUV52HqXJmV1hrVqnW8l2lzwdMNVVuL2DuXlaSs1I8FTaVXKOymorX
qWyWsnnKUqvSfNXWWJqbtHz6eL9lDrOSO+tuYCFGis3L4713oboU3RcG14xT
V2FwDxn0FwbNReP7q6xx0ToXNZazU/HnkAc9JM0u5+ufaKQ1Uugo8NOnz08r
Q2HgZzg+HBs89aT4XmCdFPb3QU0KHbVVnKu6zK56pmrEM0c3ngr5Jmdet9Qb
WDksYqmYp9BS3FO8JkX79cp6X32peYr2WeL7hB6/tpayemprZtGLZp/celbK
uio+Z4OvEytrVfV+wc2Z67KnJB/RPb8ko4imUuZccGfxdU28x4/uExWcCUFc
xBOylvRYWrPiFqKeikXy1MbUlDovXZofkeop7ipr8HmSb6QaldVT1DHcVf48
iUmyRmq0ei6tSWFvH/dUaSqbmWZu3DbGN5RkF9VS/fVT4lwJpT6jrZfirsL3
ce/qtSrUVtXt1640MnX9ahVwFRoLfEVNQ73SrFMNV56CWD01iFpVm3kV520r
zVi8VuXXrPzszUx7uT87kzS7oq2rUnyV4y2tRlXXqtaCpgrO+wt4StqPiroK
PCXlV6dNV0l1K0v9SvNVKPz5kBwrffLofiAHrcLX9XSZVD9ZUxrqgctHZ8cu
vzwtnHBy4GpF4BtwDpgHLCRZSktz3xh/Txo6G/nJ/R2XZwd7ao2rrnPt+TnZ
6b0o7P9ecQl9fzCT47MXD52FwDwvis9C1zRBLx4ErsNtcN/z4/sucB322/3w
DCx12vvsvccuHz0+cceB+z44BauBpx4W1x8Uz9kvjrfTe7gN5/+b7nwfzu/B
T5szK15EU4nmyLOUVCPC9UEQ+hqxfWUtpqLHsFlqvaoT8V4/6imtrw9tBN+v
FN9T/nfIvw/JUhuFdeh1S7iVrGnTDxibZcEdJ/UBSpbSTBWbMe8/ZqXhKMke
Ul+dpZdQ6j/UXpPXgPjapVistqLGgueBhbiD+Mw+vq7K4qmmqWpXSXtG8X6/
FFelRvIUnycReoxWm6KmwdvKORLj3rxAuART4XO4n7C/D6/XpgrXm0J2mrp2
U4hf/+E/S57y5lHgHL6bt0sP3bjuQm3BjUHn+PFg7Ym66e6Vq56r8DaXq5fF
gKvwEm0FruLe42ZZHR3um2rImWpzrEyKp7o2Vcq+VbnzAC39gDnG6spVlrkV
ltmAodkVuXtaBWOoU6XMU6eeEk0lrKOyeqqxpoqYitattNpVTn9gSugxwjbK
SXtP8bU9XcXkrsicPC3oqFRLSZ4Kz+Py15nTPWp8Y+n1rdJa/hyM9463yhSe
+gjqmbBX8YePCgeduToTGAlrR7CmCfZ/gsB1uA3ug6Cz4PFgJvQUXMLPaDEw
GNgKLPXeg8PSUjtw/r/uZvfBef3m7HxvY3rZi9VTkkFSHUUNJVkq5CneH8Z/
1voArf2K9ZzBdXEOBZ8xwdc8YT1KdxTeL5uSzpeQPEWzPr0QzaYxKa5KcRT/
PUmekl0lW0qylTSXUY/cF8edEqpXWaP140nzIqy1IZpUW8F9WJtC/1BP8bVU
mqu4p+ixmpkJ1qcsMymos+ZHRrMiz96TE5pBEfIUhq6VAkfRvazg9vK5pZlm
boxU4a4KeSruJi3NfrpQzx+dUeHmpd8eFj3F0/CG4imcO4Gm8uwkpTDT5JVL
jXBboaumr12t3hPtS6ztMuRMtTp625lqY3RI9JTlM0quss5Wt5oq5KrzsJXF
W5a1VSn1qrpm5Wd/bjZ5jZXFWLE6ltVbXu0q6qmmqyzz/qQ56vYalZ5fnuwG
8/HD+2o+Od2v8unZQSOfPToUkuanj8/2ErPfaQZlqUF4yl+TVDqKW0rzFLWP
tGenNJMrtBaChnurNFdpNW6sylWFpaBGBd8TzKz/dWGprz446338+MS9f6h/
4fsLvebZ9nbv0U7htv3D3vvHJ72PHz3pffL4ae+j00e99w6Pi/t3e6dbhal2
iu/k4Kj3/OhB72lxeVr8DA4AI4Ab8Jwd/EQdVVmqb5t0f5RzzqV1QNwMdP6c
xVPUVDl7z3JP2Wa2Nz0lOYoaCfonLXUp/p1Ye/dSHJXqqZCpuKusc9a1PYDR
VGmvVfoJZsXT0HqVZih5r2bZUtQmlvVKoYRqRLF5e5ZwV2mmwvdCa1NgnbW7
d10kU0lzKmK1KTyeH99Ukqdi89NpTyDYaG74jgs3E9w2O1TYpDjnh8B1fKw0
i886p0+bQ6GZitaoqKm27s14pqIWunf1RqN3MKcGBceJBR4n9QHSmX9WT7nZ
En1fgF0wDXOwueh8jl9bT2mmou+H1qmoYUqnlK7aGB1xsXhKtaOxVhXbsyrX
VG1tlesr61ori6skU8muSp+3nmOs3H7B2FxAyVOtTJXc95dnrI8eNBNylWar
Ovcbnko30x+Gp0wJzcRTUq5J8i0l1aYG4SktfJ0E1rewhxBdBWu50FOwpgos
BY768v1TN48DPgM8PjZzuXp/6+tuvvPj3fvOTx88eOjyonAT3PYQ1vOsb1am
Akc9LIwFBih70NiaHNLjR+tSkqcs/qB7+dI1QNxPPLn1Kd5DFnLVfuCz8L2I
0YV0xrk0q6+eZ75Yz/QgnpLWS0mewt8HOgnN9LJ5KtdUoRoVPbb0PqR6FToK
+scgIVPxuet+ZEtZaj6h2Q/0sdKap9gMcslN2nxyyVXae+a9fmCd1cnJhqno
eiqLp7il4JgYq6ckP3Fn0TqVVoPinkJTQaRZfKkJzdWTalToM3AVOGp3pvj9
zBZ/hqdmq94/sAw6B5+Hx0VLcf/EalCpnqJzKrRZ6tRTnqmYp6auXmmYyoXN
RqevQWdkRE3V95K5RnVVN5Vfq7rlTLV+Z9glxVNWU1ldpe1XldML2IWtcuyV
MsfCUrMKr7Wi9ao6B/NzatraKnXWhbbPVchYdF2V2VSB2RS5EW11XCfHVtxY
2EcXt0yen351et+Ul95TiX7ijqotdejy4vjA5fnhfRdY0wSB9U1Q6wlZyvMT
m5msJTSTmc77wv5AXG+F/X/Q8wc1ty9fPOp99f5jN3MDboPHuvfi7Q0rB+7H
x5xt7/ee7B31nh+cuDzePSwMdb+4f7t4T1vu8sH6Tu+oCLgAzMBdQ3vKYn13
IXvUa410R8X2S+KvG5tHEdpfVqtXhepT0mcqs9bT9oSSHBW3VHO9lOQpDDUV
/R4v0lPWdVXcW/j74GuoNE/R98OPJ/UKlvfXvX/azHV51oVfJwr10oXqTZrD
+P3UJZb9cbW55LFZ55LrJE9R+/A1UFZP8WNJnrLM95P28KWPC6210jyFkWbx
xWwVm1Eu7+805L0GHmdtfKK3P1+cZ62uuewvzPXWJ8fdDDqYnQDn/m69D8xQ
GK5rN2AMfzZDSm9fOLWlpDrYTdFU1FPOVP31UZKnPFMVlpq+2uwx5LMGpbkU
XvpO0tZRWTylmQpcsjYyJHqKfibRiwk9gJb1VTmm6qInsI2vupjJHjOVpW7F
XSXbKq1+ldsnGDNVbL+q5DqVsCdVV66ioZ7iybGVvTZk85TVT7m+4vO7zy2B
fZzCKR1V16VqS713tO95CudFcE9J9aiqziTsX2N1FJ/3xT2FcyvKeRW7zlOf
Pz91exLDjIqznXqWMp31jG7iwfshYCUw1aOdA2cpuA634XxwuDwifXd07rZk
KOu6KK2vj/uAO0qqt2jvhb6nkKEs4Q6L1dyat8mzztFM1FGSpfh+vdrsCfgO
JCPhbW1rVF17KnWeRWj/qpinuKn4TEL/MfPemqrQjEC/1iXXiKReulDvXmhd
k7aXU4qh+HqnUB1Jq7fha2ue4qbqylPS/lPcUm6NE5nhJ5lK22+K1qzQVNxV
fL54yFOalVJthc8Bq6yOjfeOlpZ7j7e2ey/2D4pzoJ3eyVrx/4q5wpcTY85R
dC4d91Qdud7UlafoOituKgh6qqpRMU9J5nDXC0tBpLno2nyMQXhKMhU1DHgK
0vBU//03otiqjaty9wHuco5FStraqs16q1AvoOQqW+1qISnHS4uNPFhe8pKy
zxWtXz0qzi0fb65VebK16vJ0e633bGfd5fnuhsuL+1su7+/766m6ilezOpJj
tZXFLl2ZKCUXYqSOPYXzxun8cd9S+2SOns1TDUcpTtLDPaPM8ypchOuccHaF
X5/ac+8ffAiX8B7BX/XMsK1o6N608DP46eHmnqtLuVoUGIfNs0Mj0LqUVoOy
rI+S6lLauihpdoKlRkWjOck6Sy7mKf45m/f5cyW4n6yWsszwE300teTC54Zg
LtJTKcexzmjnx9iYmlf7/7QewXAvomSpum+QzkzAPkLeS0j3HsbaF1/TxU1H
99LSXpuHz2+QQt8rf7+6Hcv4fXeyqaQ6GPoKr9Nev5incA9fzVJ0PRQ1FbqK
P186Bu/9w4CnNP9oa6pCPgrVtbRewJXRMVefgr8j4N8G4e8D+PsM+sKP14s/
79Njvdnha4WpLrvM3rrmQnvgQq7K9ZS2HqvuBfRrVCFPaaYC00xdueai1p3Y
fPSQp2KWinmK9v3xGRUrQ7dET+H7p6GeSnGVZY1V7p5Vg6pZdekqS09gyvyK
mKtitor5yuqtsKv0WlXMVWCq2lUrladCpqL7/Up7/mLofEAtoq0O/aTaCtdh
nZuTIvM1qly0lzI95dvpfrWfVB3uKJxBsV+Fm0ryVLXWKdNTdW1I9xSuc/Jn
Am54swBx7iA8DupSuAbD6imcAY6mwt4+vJ+vN+I1p1Avn8VT0qw+vjYqNIsu
VKOSEjNUaN1ObB6FFv/7qr0E+3PBTEQIXLf3+NV9fvj9a/U7zVNqBuCprpNS
zwp5Sjue5bVqwzXNg6bheyRR20im4kbi67mk50iekkzFHcVrO5qn6GtLx6eP
9dcy+euepDqVVA/T5lA0XXVPrC9JdSVvHh+pVWme0izFZ6XT+X6hGRR0313N
RprDYvtULd8Z7e1Mz7g9yODvKvi3QtgHBHoW4O++h1vLzlTzQ8W5+vV3i1wu
Q+o2sTpVV66iczUqRw2PuM+wUnyXS0MjLs5UZI8p6gjPUkXuXb7qEpo1EbJW
NTedmMmyhirFUxDwFMTiKc9VJHyvYrpurO1+wKE+wPOYYzEIW+WutUo11XnZ
KlSrOllZVhLuC6R1qifFOSTkaXG+CXlWnG+KpiKBmtUg8sHBjpoPD3e9/PJo
r/fhcT+ROYIDsVIg0p6xWtr13XUTyU+So7ifakf154/3933CeRTSfL9qbRKd
JdFYG6WvU+I9dqFo/YJ8tgT29+HzKh8tFyZa2XGB6zx8b1q+X623Zy3pj+P1
GGqp2GxzqTaF9SjaP9h2r9mQq7QeMcu8bmt/n6V2RC2FnqKmCltqRT0u7ekT
U5hp7d6iy8rkvAv+/HXxVMhDscdST8F1/DnFYL6pmvUbag5p79mYqXI9pdWo
YpbiruKekiLVtKTXQatIcyq0XkNpVnptKrlHL1RTkmzl9o5iMypC8/74nr/4
WNynF1ygBbxAfwZH0L2XaN9btZ6IPJc/nz53cbSwyERxrjgz2TtYmS/+rlp3
fy9+8eKhC/w9/XC7+LM6Pe5Mde/aOy7YAwizv13NJeKpnNDeP5xNWM/T6Dtq
rDjXHh91getwbg7n97WnrhVOuVpl+lphwauXSktduVyl8k7hp8nLV7xopuLu
os+ZuHTZhR+HHgssyp3TpackU6muMtSrcuarD8JVqUlZixVzlXV2BbeVZc66
xVddmor3/smuinuKmwo9VZpqvVGropGMlZK2xkJTfXC063nKOp+9bWKvleIp
l4BnziNgJbkOhY7a7ee+Z6Y63Xjq4eZmP9uipbiX+B6hdJ/Q8mdl/5nivwXM
QfHfyP7ygks9e6w00MHSVpX9xc1mArPDQzMbeB2KusFSn4rNT+gy3FKbCbMO
tNqUZX+skKXqzzkf9VTIVOb+vgRPOVMNwFPULRcdzVP5jpNrOJpleA2IG4nX
m7hj6OOlvsDYe+DrjWrvyKbSbCbVtvB5kqfknr27oq8sngrNPddC55zDz9xG
3FL4eKlXsPre+vvpSu7RgmaiLqKuop6STIb3u+eNjDhTLY0PF//9jhV/J8w6
U8G65k+fHbvAdVhzDqZaGAZHXSlsdcutp+rCU3evXPfCPYX1N6zVwfcF675g
lgbMzti4O9HbmrrrLuGcGM6h4bweDEAtleIp9BCaiFtIshR9zvi7l1zobfQY
2DsoeUqaS7FcfNc5nrLWqbxaFUm1J1eHnrL0Ar6spsr1VPq89XDN6vxdtVw4
asVco+KuqutVm1XdSjNWSlrbC9Zy9QOmwljrValmsgb2MuIZtKck/3SR2lC7
DT/h2qOGp3B/3CLPjzZdnh1uFJ7acH8/Pdpdc/Me0FPVPInCUmU2vRyubVeh
c79pj5tvDmlv1vAaGzwHL8/DhVl2Qr9ZKNJ6I222RGwvXuvrNp0xGE/hbame
ouumQvP8Qp9Zmu+ueQpNBZfSnlP1n4nm9yZ5aq3wAoZ7Sgx5PM/LWp9CF12M
2cK1nNhapZiRtDVYMXNxT0m1KVrrobaCaL1/eCzJYnzWHjcbdRXv5dPqVtxT
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
S99fyE4vDjcbGYSncqOvkdpuzJtA79C6FNSSeJq+2gjWqbinHu3suL9zoD4F
+0ThbGupD+u8a0/BOQRKUr0lOeFl9JRWV0v1FF9rxT93bm9lM/H+Pq0mlWOo
trH00n0d6ky1i3ITrs2E1hDF1jlJpor19UmvG5o3EZo7gc+V1lNpsc4L5Psa
815IXh/TXKXvN1VaKtVT3FBSXyANrGGCeelQo7o/t9g7XFyqsjc75xxEZ1VI
M/7gNjQVdRWuL4Lnw3HAaFj/AlOVRhvy1zDdvO3qZ1CjgnofeAr6KMFN07dv
uDVWk9evuNy9cbW6Dr6C/kDY4/DZ/r77d0N4Lrw+vDc4fw/PcLjaiM1XzGdX
Lrm5GFPXL7v5g6vjQ27frL25u73DpZniHHHGeWpv5p6rU0HgOswDLNdY3XFr
l8BHd95628W56p23VE9Rd/E6FZ/tJ1mH7l+Fx6iM9u47vbG336ouczwV6zFs
46qu6lZafyoP31cNPdWlqZJrVqRuZekFTNnDyuwq5imzrZT5FZKpwvPUm3v+
Sq7qukbVpmdQXHPVxlQGX6VYioaaoktP4fwHt2apn5il/OfzelTtKM1QGOjT
k3xF61TOVAf1TIp6XnrfacXfM7Bvr6tNLejn1VanDNpLbW2VM/fiol0VWgeW
4ilpdoXVUl1//lB/39fJU124qStPtbeU3VuxmlPMVFq4pSy2aeupUEKvrfVA
htaW8f16Q3tKlRn3wtdN8V4/yUhaX6AU8AzM2YO+P+j5258vzmGWll3AVFin
qvbfJXtJgZNw3yo0FT8HhtvhfugfhPoUeArrVNj7hzMk3ByJ6zervj/Y5xfX
o0HvJOxVNXXzZm/y2jWXu9evu8uJq1fdJay9gn7Lo9VVV6OC/UDAcVgLk2pV
tR2uVEkzVdNnziGX33U9fFCvwj7AjbtjrmYFgfPa8lx3zFkKzwXhXBLOi6EH
EOpU4BgIeApDPYWWqupYQqSZ6dp+wPgcetyRN9/qjb31jgv3VGydlsVVXZgq
5KlUX1lt5Xx1e9gzFU9Xtgr5yjq/wuqqlJmAVYr/7/GYXBWZCRgzVaqnzqNG
leotv/+vZZ0qw1MxS3FPSWnjKR6Lp/Cx1FKlo8BE656ZUoKm4p6CNVMuxFPw
WDfTb2XFWWrbrWvJc9Efi6cuwlU5nopZCves6uJzp3wv9M+J1NvXlaeWC1+k
BE0ySB8NylTn4ajl8al+mv10KXP/YsntzQvNmwito4rt9yTVsEJ1Oq32xutt
1FR8z10665xbSuvdi9Wl0FG0liUFakK4Vy3M+QM/gaPQU1ijwhkVuI8UWAqM
BJdYv6Lnt/T8F/v+3H5NxbEw+HxqKvBUaapbLuAqN59ifNxdgqfAURi0FQbu
B38dLC+7v+fAb1ALw9fAc3N4LfQVrU9xT8VNJXsKrFPXqq66me5Qr4J9iCE4
AwHWUEHPH8wALM/9Vt15JJzvwv3Q/wdrl5ydIp7SIu3tS98ztyU8B+ticAme
Gn3zbReLp3LWb12Eq7qwFXgqZqrU2lUrW2XOW2/tKsFTmqs8Wykz2O39fwsu
bTx1EabitrLWqbJqVf2451j7/A42yrB57jxV/abhol1T6LxyvhdUc69daY2U
vzaqctTmpgvOMYfQn/l9eBv07kHNCY6Jc//K11nvp79uqnit4/WV3j6sl4LZ
Af1zIOqOl7Gf72Xx1Hm5SlufpHnKUpOiewAP8vsI1Tjb/m7b+unr4KkcQ9Xu
8ZPupnDw8dqMCr43VWjOQ2jueUp9KsVTlj10ua0spqKu4nMD+fdg9RQ6ilsq
FOos6iXwlBTqKZgNATUq6PuDXjwwFKyhgkuoJaF76DkmzpigNSo6E5DPraB1
LVxPBaFrtPh6LIw75siIq0+BsainqKmgTjV+5YozFdSz3L5g/XmF9P2VGXa1
OZjVR+dQcEvZ61XMU/3n1WuuZEeAl2D+HJzTwrkjnCPCeSP0UMG5L8yQg/vh
O4Fjo4+4mbA3UAp3Fe8N5CakpkJP3Xnjrd7IL95M9lSs1zDXVF0bK7cn0Oqp
QfUFSnMBpb2s2swEDK2zqnJvuhFTvSqwr1WoTlWbaqFhqty+vzau0o5neR1e
q4rVqbQ9qnI8JRqKhM4elPLkfjOlsXZMofvranvscn/5vX11Xx/WmB4U3y8a
CXoUMNxP9D68H01Vz/7D11nr7+ELr7FaWmq53GeT/rtqm1rTy+6pru1wHq6K
eUqbMxFz1CA8pVkKv/828/f+2DyVWoNKdZD1GEtj98TUx2v21cXm8XWR2J5N
fIafVu+SevxCpoq5yvJdaDUq3u9X2irfUlL9Cf00ee12FeopnAMBe9SWphp3
psK+PFw/xWeoS/PRtdnq/LwW+//AUhD0Gh6Hrseq5nj361UhT0HAUxC4Hfr/
pJmE5WcYqWYM4qx0OtuPesrWB9j0lP+cy+z+0izQywemgjnccC4L/9YP56d1
P2DZywXfP7x3fJ2Qp8A/NNxV+PjQHAt8jeq4LT2V4irJVDFXxdZXpfgqxVbo
KZpB2ip1lkWbPayyXJWx/spiqqan5l00T2m2spjqvGKpU/F9fzVP5YT6zKs5
MTOB7eyB2tpW67y3vyMG7oPXeLKz4fJ4u7DO1kbvbHPd7acOlgLrcCuFAv3h
GDCV89TOjhec40f7+6Amhf9+Wv2bcnHbunMVz9ffU4M21SBcFdvvKcdQkqcs
vZyWz01vw9+BZqA2vhqUp17WtLEP9Y81+LzF0buNaMek89a5Mbq2lLbeyfI+
pe8Hn4Nz9Pg8iJitQvW2UP2Nr6NqemqkcpVlvoTmKG4q6ilqqnp/2mFnDNrL
h0Hr0PoOP7ek19FF1Ec0tL5Fg72D9LWqWtXNm2K4rSBYp4JLOgscz9XhmPh5
sUZFTQWRPMWNRD3VfPz1wiNX3WWZ+vmjb8OsiXcL67zjLuF58J7c9wJ7gxW/
fzwvh7Ux8G/9YFv4juA7gc8j1ahof57kKW4q6iqpD9Dr/VP6/VL2v3qZTNW2
btWVpwZeuxJqVSFXWddZde0qzVR631/TU5qpUnv/LtJTTVOtO09Z61RtLKUZ
6snOWkLozML8aM5CS5V7+617ljpZW3GWOip+r9RI1oCTwFfUU9RR8BjoI4fZ
sWgp3vMvW+oPx1Nft/6/8Ezypp8shuKesv6urI7CY4Yc1Xb/qC7WTH0dPGWt
QYUslWIqyRha5OPbZuO1tZTWm5fyfiVL1euV7qiz9qy9gNxXWo+i5KnmPlFN
T8XclOIpNBXO1atddbtaIwU1EZw7wedRUEPx/j7pvsZ5KNnzFw0X6iG0eIre
hqbia4TwfB77HOGS7vHLPRUzldQfiJ7yI3uqNtXlsv/v6vVqf1y4DnvUbk6U
sxGx95KaitaYeJ9eSqS1Vt7x3ngryVMxV7Xp/xuEsbJd1d9HWHJVW2N12g/Y
wf7AofkVXcwKjJnK359qzlyjyllP9TLUqCx1KslV0n38Nq0mpTkK9iWPBT0l
pQtjNS21Vlmq4SlM1FHrbs455nhto/ATWGqvsNRuta/UwfJqNXOCrhWvTVXO
KzuPHr8/eaqO5KHUaFaK7U0rpc13Jf1eO5m9Z/RUG1ddtJva1KW68FToeTFX
WXyVayfNUnSOeOg91fUmuXaFn4/u74Se0iLZyjK/Qlu7ZfEUhs9Jl9ZAtfFU
fazbXujev7w3Eb8HuA59gtg7hybDn8vUxnJGGy0DM+9gD1wMNRy1Vb3/b3Nt
FV9nxX+G83bqH3odzETrUtRTcBnzVG64pSDDb7ztbsf78THw2mAK+F5wXRu4
Cr4X+C5wlkZzVqFcu4pZi9az+HorvD/VUyFXnZepUmyV6ir0lMVUbXzVVZ3q
PF3VxlPUVDFP/SGaSqpTubA1VZKvUu6L1aQsjvKzLibXVNxlvqVWo56CmlM4
aw1PwV5S4Ci4DreBo2DmRGi/l2r+c6ZL/uSp8/NUl35K8ZT2fUm/y4uYeR7y
1FJhkVByZt5dlKkG3e/XhanoPEBqitBeT7F5fjFPyX17E6KpJE/5s8nvNHrv
LK6yzLLQ9qEKeQpmhkM0E1FTWeZQSJ7yj3ezEXAVvAdqK+opl+FRF+ydw7pP
bazyPBV7/NYminO88VG3Fyo4CuaJw/w7PN+ls9ixD5DPZA+dZ9Pz8NIYuouw
Zw9rUtxVtJcvxUxazYpaiXoKa1T8dvgZPAOfC74PsBTMCYE1bfA9oRnRIrSm
5GbywfqsvmeqefT9uhbvCYQM/eKNxnorajO4LddTgzaVxVNd7GXFXUU9leOq
Qa23CtWpunDVeZiK16i4p0Kmis39k/b6TXWVdgxrUl1V2qp0FZ1XYUlofVR3
ltI9haZKDX0+GApTWmrVsxT31GHxe071FNSisGYFs/tg5pvr64LzXLLOna9/
b7t/KZ6Ph+6LRfNcSqQexlDojGfXA9nSUym9dm0T+y5zfhdtPHyRhtI8FXNU
G091mVxXSbZqs25KM1WOpeh+VdocPuv+T7w/jnsq3Ls37nlK+mxNT/lz9eqM
qKYK9QaG5l7w50imKi1VO2fy2g0vkqf4nPSYofzcEF7jZlWvQldBqKlgzjp4
CupUWJMq12GVt2FPXzUv/W4ZcBXUqeZu33Secqa6eV00FZ2HgftI8XNsvK25
p1LTUugarAlRV4VMFXIVf5zmKclSUqBmRddXwfcK8+xhj7Cte8X/G0YnnF/h
fWKNDV8PnjP8xpuVieB7AI/i3HgwEtgJ/UQ9hc+jdSo6P517Stvr6rxNleKp
Tl11s4zkqlRjnUfNinoq1VXaPMC2e1lZTNXWU6muuojYbLXmAt5JmRMRM5Sl
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
eu4fe16Os6QaVag2xeeJwv3wfPwu0AOhehOfZxeu1dwVf08xS/G6EcRSX7LY
K+Qo3B8K5+BJNarQLEO6by79DvF7g/vRU5Y6Uk7QTCPvXGpcYvh8u+YsvNo5
cInroODcDmZ3O0sV51n479w4+w/nAGLNCs7noF5FXQW1qtj+salzKGKWkmxF
96+STEWtxnv0cuf+aZ7C3PzZL9xtdEYg7Qks9wa7S9ZZXerRvXvpflTYB3jj
tZ8161NvFn4KZOytS2Im3vGTUqv6Q3JVzjzAFFtFTVV4ymqqHE9l16oEU0l1
KkvaGCvkK9lY4f2F29oqZiralxeeEyEZSl8HZV77FLCT7KlVL4eLK43wx2CO
l9ca0QwF9ShwFF9vgH0v9b/dxuetXYSnrGZan9CzMTkrZuvePInuKWopnovy
VFtLWo83SLdY1xzl9gqmvI7FSi9D3Si3j6xtUupY0v630rop+ucObsPfg/85
yZ6vbMYE72HjjqBrjerobkr1lCWh70+zVG2oIc9T1FTSWio+Hx37+dBU8H2h
R+ESvkN4LDwm11NSrUkL2mn47Xc9SzlfsZl2fGaDdI5Ma1VuZvNYObcCfYX9
gDRwjgXnYfA4OCeE58N5NZ6Ha+fjg/AU1oDwEp9DvwurqXLWS0mmwzmA6Crw
FM2N137uLuGxYCro/aOmgnN7+n2Cq+i+VGCp66++luwp3VXvNDx13qb6Q3CV
xVlBU/U91dpUZN/uNqaqXBWpU+W4qu0aLJutbPtgtbFVqA/QPifCNlfCuhYq
11NgoFRPSY7CgJ8wWIvCvj4+X5hG81TMVi9TrSTmKc1UfwyesialdpO77inH
UiH/tLFRyEj0vPrr4qHU8/tBuouaiof7iv7OZL/4buCzz7mX0FHoCVrPKRP2
ofbnQfuO5d68EfH7ttamqKMmr93up94biu+Fy4OOwjl+aCpao8K/C1I8ZbFS
KOAoLVJ9BXu+ypoN77+7VJ0L07VVcI4HVoLzLOgBBEPBTECcXwF9Hfh3NdwO
525wvolrp7Cugv1kvN9P2w8q1HfHDaWF15w0V3FPdRn+nripwFNoKlxnBWur
cH9g+B1Isz3we8U1VbmeaprqnYapMJPvXm4k5Ko2+1ZZXXWRpkp1VZKpiKc0
VwX7/vqO4rGaSq1VKXv/Uk9Z09ZZaf2Bcy65rrLaCg3F50GEfOSbKD4/QjRU
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
C1iX0uZkWNcphb6nmE14Qv2Add7ofw9+PYrbE2tGdV73kvJ+/M9SHl/6/bj7
fvqaS6qnNGOBo6Tk72cVqF31g67ituLO0upW1nThrJircuZXmGdUGEyV6qvU
fsCU+eptk2usqK147apfy+E1HmvivXZLuseUx+8vYVaqOeO4zglrTZqVuJeo
k3CvSZpyz9x2+4t2OTstt/dvkKbilkI/rYzeUz3FHZVTX8K09ZbmqbbfS0r9
KWSmUF+dti9rjqNCfqKGkupOmplCedkdxT3Vddqcvw8qA68JduypHF/lfCfa
bSmOQksNvXW58tTIm5cbtRhaq+JrolJmGnRVX8k1hHTurnmqNJVtTRLtm8Of
6fcF35E07y5lnkPs83PDxMKfF/o+6LoyqZYX81SKq/zkeWr458XvIBDdVW9W
QUvBde6nvBkXurn4HHu+F3WsfhXrFWzbM1ibKm2tlWav3Fnqkq1CpkrxVRez
KwZtrJCzUupYkqdocm2lOquwkzgbQ+nZ21vALFXhMx7QTby21LRSOLH5eRdt
p5S1VIOyFXUStRTNy+IpqQ7WxRow6wwJ65qlNnvNWvetDfXuoZ+wLiPVmzRD
wRp7S/ga/ZScl6cGZalBe+qia38p1hq04Qb5fYUchYaiNSn0FKS0lO4pba9Z
69w3ax3Ker6da4imr4RzdZd6VgI9hrYui35GXpOzzuFLqT/Rz3btpz8Tc/Un
r4nRHl/mVW+tEnVN/d3UkTwVPn485fv8afVeeFzP309edWl66o1eaqilRn9e
htuqmTxP8fv4f1sWW0nGonZKsVabulW5zmoo2h/Ia1YWU8V6AXN9leOqXFvl
pmtThWpVkqlS08Zeu/PzLjtzc/3465zquQIznpniTuK5WAedl6lS622xUEuh
n5bv3HWJeUrq9euqzy/XU5Kfcv5sDNJOfCY0nQFhdRY1FK89cTeF+vZyLPV1
89Qg/PXH4KmXwWuD+L6k9VG8DiUZikbzlDYnIdSTFjJEm5pTqqFivuLO4o+B
c3vqAz6LDl1FL/F6bM8l6/cgvXeLmSBXfvyqGPHxPyqs8uPCWj/+qQt6BetA
WvBxGPDOlR//pMqlH/5Izbs/+KGYd77/Ay9vvfI9L29+95XeW//0Su+N7/yT
0O/3pmgmWGuFlxjqKbx+5/Uy1FPUW/XttadS9rtq1LsC/3YhuSqnftVVbyCd
6dl0VlmvkupX1lkVbT2V6qtB9gKeh7MGMb8illxP8efg2qft2eIce2amMNN0
P80ZedRPspUs+ePwVNeuoj191FLUVCmeajuHItVXMUNpRpJm36XuVxvyU+o+
rJZ9Wunj6AwJqx9SvDRIT7VJ6D2l9gK+jJ5qW2vpMl2/btemavMd0XoUd5Tk
p5CnqKn4WqhQzclip/M0UyypdRPuL6uJuLdi30XsPVrMBLn0w5+Yc/kHmB8V
tvpJw1WVl4rb4H4MPB5y6fs/dAH/vP2971fu+fl3/rH3+j98R8zPvv0PVV77
1rddXv37b/V+8j//zuWHf/vN3g/+5m8b+f5f/03ve3/133uv/OX/2fDUreI7
wdwuvquh4jvEjBTfOdaf0E1S8DFjxZ9xHr1eJdevUue20/oWXud9gdaaVY6p
2s4FDM0JREN1UaeKWWpQrqKOkozVhZu0Y4GhJFu1qVeFZjrEHGazVb23Lc6y
htRmgl69u8W57qS71OpN4T1v0/00KE/xPXwuylRt61HS3ImQp7SZFJqXYt7K
sZM0RzBmp1QXpZgp5Ce+xw/f58eyp5O295NbS0LsBHvh4H44oeDjrI//unlq
UM56mdaRXdT3Piifnac70VHcUpKjbr95KZjhNzD+HG3ez9d2JvbL5KVQbYf3
xYVqW9Jn532G9PuyfB+8Nmb1FNgILt/9wY89L8HPkHe+/yMx736vDJgITSUF
7n/3ez/ovfPK913e/u73XK3oF//wj65e9Pq3Ch/9fWGjvytc9M3/6fKjv/mm
lx//7f+orv/wrwsj/fe/cQEjoZO++xd/1fvHb/xF7zvf+LPeP/75N7zAbZBv
/x//reGpX/z9P/Te+NZ3eu/84yu9y6/8oHfjRz/t3Sy+D+4rsBVNzFFdeyrV
WvBvG1ovYKwvUHNWjqssswFDc9dTZqlba1UptkJfaXMCu6xbdZku+wFxb3KI
pT+Q3m6tWdV1qNJRuGcQ7iFU9+2BjcarcDctjo6LnoqnW7+03Rv1oupUqb6S
PEXXSoU8FapTWZLqKWoo+l6p/zQ75booFq2OpO2xw+8HC7XZ+xTOJd25ad9E
E5dueNcx3E5aUg2GofvypIafZ6c8tysPdmWwr5OfrL+TnN/heZqqjaV4fx+3
VMxRmqekeRIX7SipXtTWTrFeOP569HVD9SWtrkU9Rt+X9B7wfv5Z8DG0BsVN
hX4KOert7/2wyjuvYL7vvIShfkI7oZvATD/9H3/nzARGgqCP0ER4SQO30dvB
Tf/053/Z+86f/XlpqOKySt9ONOAoCFznnnrlz/+8B/n+X/5l78d//de9V7/5
zd7rf/d3vTe+/e3eW9/5Tu/SK4Wzvve93tUfFNb68Y97t199tTf02mu9kddf
7935+c89T/E6FnoL11fZbaX7ytITyNdZ8RkWMWOl1rIkb+W7Ktz7Z9n7l16P
9QCmGqsrW9GaVW5SbBUzVX19Vt3/FJxDa0b8Z+3x/DH0dvp6pZ/Kc1+6r21Z
M6iNBGbCaH5pa5uYb3KPOcich7N4+Bx0zVEWT6XuS2VxFK1v0foZvBdpLnis
3y7FRJa02cvUMr8s9Fw8L3Tng2/Xe+BQR0nJ8VTMYW08xUP3+Iklx4ypSfHV
y+Kntt9zl79Pq8HOs54nzZvQHHXrjXfF0PuHfoHR50nk9uy1nU+QNscgfT2R
dY0Rd1ysvhRyn/S+aC0p9N5o7amqL/XdhM/ndnrrlR94fsLA7e6+75YBL6GZ
oOb0829/p6o3gZ3QTVhPojYCE/Hg7fg4+liwE/rp2//tz+T07aSFe+qf/uzP
et/9xjdc0FaQ7/3FXzhjQX7wV39VWevnf//3vV9861uVt7CmBfUsrGNdhKca
jwvMrcipW+Wut4q5qlnTKve+jq2nCrlKMpbVVW32tWqz1qqrpNSt5PrVTBXq
KrzUjETTNNKMl43JqSrr/z979/0cV3Llif4verGxMi212tEDJEgCNLCEoQEB
wjvC0HvPpve2u9lqb9TyfmRnpJE0smN2ZlY7b3eliTdv/MTsm9h48fLlycK5
lTcrfeY1APHDNwplUSgUgPvBOXny1deFVI570VFVv6Cf0p4qyidF2ymmq2J4
yuQoG0+JNjPNVrepReH98Lnx88BxBgMfnXFMvXMmI9nWjFxmPbvOiub/J4/H
hHAsWN3/Bv4u3KyJq6vEmG7vYqCYMdnRN751vLx75mK5NM/k7SrZ6yXbQ4p3
lMpQstw+d4l6CaNeC2Vba3J1TkhcjGSztsjkK/Hr8TWf7Hnw9SRZjUlXb+J9
JHMTXndh/yGWc3MHWM7M7CNnZ/dTN+1jwX49vk+PtxPvpppa0nyw3oSewojG
4u8fz1M7iSyzO7eTmR09NDvI9Pbt7BQyu3MnCzgM3AXOwnrWpX37yDX6ul2n
ry8aC30lmw1onglY66paS1X3ERb7/VTzNnW+UhkrdN2V/cz1m6mE1Ktiu8rH
Vr7zAbOwld0Mi1pPqepVKjOprPTRK09S+dzj12pino/G16Zq+/SKtkyZknX/
IMTWUSpP2US2xsq2FoXPTTYHnN+HFsObhu8Jsq37ZGknm8h8xfc04XGh+L91
3lMQvl4F0bnKJqb7LnnKXMPLIr6vG7+fkk1iPZ7OViGutO1RxZ8D/LnAORLY
r1etM13mjCTP7dMXJdH38GVpqZguihl+XZLVrDyLr1HlKNvoevdY/55wHVgK
/AR2Oj09R06Mw/qmKXJsdJLl6MgEC/brgZ9EC/F9edLePImn+DqUWLtCR+3d
sSs5rcnOHdqIngI36bMzFd5U6CqobUE9i9WxhkbJ8eExcnJ0gsDarMv7DpIr
1KPQBwnzOe6cOlMzKxAjzhgM9VRMU7n2//m76qY0sj2sbPcBVq23ysJVvrYK
jY2r7OZbfLYmYn1JVmdCI4GbRCOhnT589GoSPP/Bw1dS4T0gn4v2iGXJU+Vw
lYun+HnpIZ4S107xa6JER2EtSuYncS9aFku7uFjIJ7brPGTPS7y9at08H95S
cHwomkpWs5IZy+Z2sutcj89jRfd8QxLqrVgxPY/YbsojWZhKZyh8z/I/D/Dz
UV3zdMVoKJmdbp26IIldH59Nz12RNvIxiiku9SzT1+j7HEQ7Yb8eH7H+BH46
SS1wbHyKHB2bJIdHxqmXRqiThqhrBql1Bqht9synaiJVZIYSPSWL6CusQUkd
lZmn5KnWsnprgr2DfK/gidFRVseCHsHL+/fXrMnC9ViYB+fPpXL/3FmWhxfO
J3l08YLSUzXRuMpkrJAZFi7zAnWekvUBmvatsnVVJQ+t8t79R0nY8T/3MR+0
Am8IMWl3ZGctt1rYE2VkVpJ9XeJroUqopyDi9UXbJSSm+dqmFPGcRTPJ1iSZ
PCXu9yu7jaofkL+PrJePnwOObuIdJXrKtD7dtU7k6yjbXiSVt0yGEvfE4ecz
i3veyP5GqP5m2PxdkV9fjKuy8pSPsYqIr2tFj2cdnalizLaQGYp/fdBQ6ChZ
HUpeb1L76ebJ85K4z4VQGaosDrKZzZCadedpq0rU+y3p9lzS7b+EM8j5OeTn
5vaxiPPIYfY4zhw/OjaezBeH7B8YJPv2DFQi2EblIfF2Ib4Sa1p8X5+ro7Ly
FK69gshMJQbqWEktizrr1Ph40isIsy+uHTpEbh49Sm4cP0ZunTxB7pw+xTzF
7ETDe4plfr8rm3l/pr+TNvsEm0wVOofd5CldvUrmKtt+wHfuPmCxdZXMVypj
8c5Q+8q8t7BPVL5S30ftvxr7CF+7+HWrrKmL+Rj+lVTKYIqyeKqI18DWU7ra
lMxTqhmB/OOKa6BEO9XUnjTxnQeQ1X5BLvPMxHXyqvnN4gxnmad0wf1Fbf83
55b5/qmcjsefFk+5Pscy2Mn2+6gzlcpVujmPsteNdxT29akMJa83qQ1148Q5
SdxnP4TWm4pyk03cP6/ZS6aIdpL5Cfdqghwbn2ABP8GeTWCnA4NDiZ/m+vew
zPb1J5HNjRBn8IkzJnw9JUa5Vop3lbenuok+bp7iewDRUPxtRHfxxoJ61tGh
IXJ8ZCSpZ12YmakY68RxcvvUSeYrCNSqWO1KuQ4rbasQT9nuZeVTt9JZy2a9
lXzmejVv37mfCropNC7G8nFFrNhZrhrZ8TAct/pEVqMwxd5TcoMUbaIyeCrP
18JkKVtPqR4D30uimfiePZWNFsL+P6Z17zb/d1fNbfbZR1SMrG7l4iTXvzuL
Obr++qIirpNz9Y1Y5wxN7FqV9axAS0ehpXwNJTrq+vGzQvT7MMnWRKkMVTYb
hZjqyiExRzIJziaHGXswW4/fz4mfT87v3YSzIsSZEeLsCJ2Fanrz+vtYxL2f
VHtB2aZmpoSqRuXpqZkdXUQWk6eqrpL3+8UMWGv/HmquwQFybGyUnJ2ZJpcP
HawY6+RptiYLU12T9bKxPmX7ty10znpIf6DOUuJtdK6S2SokLs5S+aqcWfLU
YvGUz2vi/NgKQ6k8Jas96WpNsnVOooHEOdQhe69mYSOfWWummWamvW989r1R
mUq0lcvfEJu6VxYp2k5l8ZT5edl7KradYnhLt67KZbaGOGeCdxRfkxIdJe/Z
k0fvKLWnXGZHxPaUrXlUM+18ovNUZc/bME+BmWAvJ9zPSZxRjnvh8nvfgp1E
P/GzIvjakmoehKmmhK7h932K4SntjD7DXD/n+tR2aidJ5nZ0z2e7Nvvp55Tl
QO8ulv27bSO3FM7ASOYL0tcH3HpgYA85OjpCTk2NkzPTk+Tc7Ay5uH8fszXs
r3zrxCk29wJqWNgXyKe67qoSH1/pXBXDWaZalWkuu8xUoXE1lmv/YNGBY1mZ
jfA419VRLpay89TiTVaeyiKwRxN6SvY9l33vZU4X+/RkdSaXOWgx9lR1je+e
S66zA2T/Q5cd+4nrOzD89ab9QzG2rjL9zcjLUSb7LdlO/z26/7Jf7l28pE3o
/WWP8eDSlSSPrlzzDrs/9xrA+0e1j65pjyfXmRFZzNXLur5k66JkbyUfUx0Q
c6hmr1t+z1veSlhjwo/RTrgnLrgJ93WCehO/Jy6YCfvtwE2qPZ7EmXsqP8lq
T9o+vPl9ck2eCqpJldhTOlNBVPPYayOva4nrr8TXcq6PWmzPbla7goCfwdPw
/oBaJRjryuFD5PrR48l8werswIs1nnL52+C6R3BsV8ku58/ralUY+32G9Y8V
o44l902c/kTb58HPk+Yj26snVk1qyVML01MQG0/rZuyJbvJ1hq2vsnBTyPNW
eUk5B0/Th+SX6p6hrrZyNYPOP1mkaEctBE+JzzWGe7KOzlUu4R9D5ih+H12X
GXsu+93G3r8pT0PJZtvFCu5vW03VRLytRGPxtSasN+G+uHA8jLUnCNgJzcSv
WRItpdor1zQnQmanpP6kimChTHr8Su4pG1vZu8qQ/l7mJz5gKghch8Hr0Fnw
3oH3ELzHsH7F9weK9asHF+TR/Y1w3dPKtq7lMiNQtgZLZSH9vsLmtVr8Y4Kd
XI3l66mYfYu1qbWUi6tCalNLnireSbaOeuveYxZT3RJ9LuvV4x1iu35eVasx
+UpnoRj7//jPDKj+rtP1a/H+EI/3ZOGdZBuTp0JNlaelbPoXy2a0GB4KTVF2
unvhZW1s6l22dpJ9fbKfK37vJx9DZb3PU+z1Trb1Jtl88NBc3CfmgFXgeJY/
D31asB7m9N4pcmpqkq2PgUAvF+TIyDA5PDyUHBdDnxcE1tNA8DxeJq5hslnX
JPMM+gOd4mqikJj25NV5aYqaRpea9VM9nUSWqq16nKJyln7mujnYFyi6SRX0
FHzv2es6X3cEa4s1LHhPgu2hhgXrsZivLr5Mf19fYoGPwVL3z19I/k6Z/OQb
U03LZw57SERPibaS1bhUxuI9la2JQtaD1XrJtU6lm5VtnN9mMIaNSYp20WL3
FDjqzbuPWPA9oZpRjoZSzSMWDWW755HN7LT8TOQ/T0233oU3h6z/iD/my8tT
JlOp4uKgMqQsxso64tcS6p4s4ttDaDIU/zn4ny1ZPcpnf9wYdSiVp1wt5dKf
p4vJRbjvkikunhLrTHxwXgTOjDgxMZ6yE5oJ/SSG9xNvKJtZEKZ6kcwqRbnJ
dr6Eq6my9lSou7DG5eoszIG+3iQH+3cnkc0ahPMwtx3mCR4fH2OePzO9l5yf
myUvH9hPrh45zGYKwhqsx/T3Dwb6A+H01UtXkvCXy4K3W2iueuM69dO1W0ng
POStm3cr14lzMOjlb9+6x07xY8w7t++ziOddwz+mTawe13GWoc3sDdmcQdMc
dtFFqvqIKkV7YzEHXl8w1Bt3HrK9kuAUg5fj3G+csWDaJ1TmKFnymEGd5+xs
0VM2dSi0kyqqWpWLtbLwhvi1yB7P9vP7ODHUk4vFUzbfpyK85GMpF1OpXHjn
/MUkoqXEWpTKRj6OirEvVOz+PLGvTjavQTROVhHtVGMmbr0TrnkCO2HtCYLn
dY7CmhRvKL7PDi8TY3KUzCSmGlGWCfESZpKaRZayeMpkLPM+wvLwjuJtJdsD
C+azY9DnSX8gfS9CnRSMBfVT+BmC9X43jp1gNSxZn6A440LmK1P/gs96rBBX
GWe4X72Z8pRoK7EnkPeWKq4eihGj0SKs9VLtx6Xca0pyG95T6CPeSkueyt9Q
2NsHZgJHyebX4WWil1SzuJLLBDfh2iBMFp7S7r9jcF38yGtRsp4jPiZT2Tor
Zu+frr4Uyzy2ZvSp0WXhyCzqXFl8bvz6dLbh/REjMV1lW1fjP/9tevySRKhJ
2e7xFGuGRExP+dSewFKmPjsbA7kErCSeF+0k+kk2p5zN1eP69fh+PjZTYN5Y
vKN4D2H/Hd+Hp7IUekpXF8rLUTHqSy5ZjJ4K6RWUzRMUjYU1LJyPge7C9yW8
n+G9Dj9fsA4LZ1zALEHeWCZXmXylctVrl+V5cuUGC/hHZiC8PDQqV6lSFlfp
LPXunQfSvHf3oXPev/eoJh8+eEUavB7uVzVZtWeQzTDgrATH9CZPLZkq3E98
Tx/WonhH8TO6eSuZZirLZjCLfpLFpV5ltWephXNsnpdPqvs91e77xJtB9JM4
T8zkKvH6rOtVJju5OCivhPgqS1flEdXXlYWbYtvKxlcqB/KGukmPWTBib5/o
KJVzslj7ZNPD59q3Z7N+6fyse93J5CWxN080Ex+ZnY4NjZKjg+k9ntjHwron
Pvzl4B/xelONCWtT4popmafKWG/KylMyW5XZU7ypZIaa2dGTRGUr/jYQW0+Z
gu8lfv4J/I8A5/LD+x9+HuDnCGau4FosMBZ4StYbyOpaF/VrcUVXqTwlM5VN
8D6quLjKxlhF+Mq2jzCGp1Sm0kXmKQxfH7HJkqv8/ISvM/bs8fso4X5HfG3J
dr9YPjJjyY1RjYuxfBLuIbvIZ5Vfkfb0yfyk8pQuLv2APq7gnWTyk6lX0TYu
Xgp5nNjG9Kl9mW4X6/PyX5vonFQNJ0Jimsq2jibzE+TG6bNJxDVSrjWlWGuf
Qj2lMhS/duns7P6anJvZ7+QpF0Ohl8BKvJnwFCOrPx3eM0QO9Q8mM8uTCOue
RF/p6kuy3j3XFOGpLNY/6Xr5bOLuKVOycZXoIllM5pLdhvdVuh/QNrX9grAG
i8/RoSGWE6Oj5Pz0NLl68CC5ffw4uXvyJHlA/5Y9PJOuY8nWYonrrsS8dvmq
IteNRvKNj618alfFWuqeNu/dvZ9EdTnk/XsPnCLbWxh8xXvKxlY29aty5mG0
vPPgkTJw/Vv09Ya8Sb9PuP4J6k/gKHSTbA9P0Uf8vrB5eyrEPbHdpLZS7V5Q
sCdoOunjfnHthslSOl9lscZKZRZXzxSdkHpWVmu8YtrMt4/S1kWiTfjEdpZr
VM/z2klqpVNnagKX21iK942tqWLtDeUza09lqDMz+2pydhoz6x2wk2ytE++m
pO4k7JMLdajjw9V6FDoKcrBvIDnmlM3h082UCE0ZLBVaawrx0mL1lKn/zyau
8yxUntJFZi2w1bHhYXJybIycnZwmF+nPL6x1hH5BqGGBq3gjqQxlE1m9ShVd
rcv0GK59gUWZyrXHT+UjF2f5uErnKbGGYvLUwrRVPE/xZuIDfvrsbag73aJu
ukEeX72erHdCP4lOunP+sjT8bURP6Xr+ZJ7KopdO55t4tSU3P90+fZHl1qkL
XOR9fTJP6XoAY3vKxkY267ls6mi2KdpYsdaAlSHK77PBSqHxNZWLzVQ1KHCT
LFdP1K6TsnFQ1jMlYnlKrEXpPIUmUgXXNMki2qlmZgQXqD/xAUOhpdBTvKnE
df4mT4WEn01RpKdi9estLE+Fxs5VMQ2l7gG0MVXtnEBxZiB6ircUzBCEU7gM
zQUfnxgZJ+emZpivoEcQ1mKJ/YF+rqrWq2LFx1bmmtVN6qfb0rx9605w3qHH
z2J0Lnr/9j3ywZ37ysD1eBv8WIx4nw/vPjCmaqtKD6DY/4ezuH17/2JHtd+S
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
a4TLUE09HRwGM0eh3xBqYVD3gj5DXNd1+9hJ5iwxsM4L7AXmwhoXnKosxTtJ
/BjMJNakrOpT8/19WJeSuUp2ual+JeZzDx+TDx88Svaj4nv/Kv1/lRoRH7wM
TsFCiYnmg+fx9LM37pEn1+6Q167eZnn1yi2WRy9fT/aJrd1/tdZIeEzH//9c
dhvd/9l5T4X2wHj15Gieq6oHiz/2VfWryWsuch/p1mDbxOQtvcPcendEq+Cx
le2xl3icJVsrATEdr+ni07tkZ89qsqhdyXoAdf2Asr5B8X2r6w2sJBvvZF1X
Mrkpy9kleXlK/FrEvlnRULb9dllG5ifeUGAm+N8rnuK8Pfi/bCXjynkRtnUn
0Uqwr6cpeNwTsu7dxku6wAy/kP47X89kkaz34C2rp3wMZespsBSfPPoBwz21
nbpphzLuntK7SuarTDzFPa52LaVgLDSUau4F7zTcmxjC9xHW1rbSgTVdvLPE
wDovcNfVA4fZGi+occE6L/AXru9Cd8FsDZhXiHUvfo2W0zqrW7fIe7dv1+T9
O3ekvX6m+RMyO8nqVOApCF+nYnUpzlPQbwepGupeqh8Pe/Jg7gPMesBZeTAj
D2c+8H7BudPp/30elR4PmvqSTMd8qvUhsmMgm9kHoZGtgZGv5zlstJFqFpUY
1WwqWXSP4xJXo9k+Lq4N130NuHbcJeLxGKbWY7VxdZbcWuoaH17nYyqf/j+X
yH6+bDxlY5ey1pR856iErBX0cZbv7BhVLUq0k+q9b/MzY/r/huznXve7TZwX
wffs6eZEwMeyNU4hftrXt8eY5NglRz+5eGqhOGrJU3ZuUnnLxVNZmqosnlLf
z85TMddOGWdUGDzF17JEL2HEepZY41L1E7rsJY63r9kLgrMYuoufrwE9hhio
gaHHoBYGJoOgyTBJTezsWfLgzBny6Ny5JI/PnyevXrxInly6RN64ejWVN69d
k+at69eleefmTRb+Y3b+5u2qnejHmDeu32RzPcBIGJyPB/PEIWAlmLGAtRfs
rZftqyib45Tu6ao9LuQvk9VgbCPrSfPpKYkTd1OYrCBbT+0bH4uEPpZpPbhu
nbh4G911+sxKg//nVnlLFzd/1db9TP2UMW0V4ind+drY11xCZ0sWMS/fe96j
xxpB0/97XL5m2fNAQ8HvZ/F3pOz97fMzYppBzv8eUf3simufRD+p5kLYrHNS
9e35GCorT7kais9CrUfFslRsR5XZUzJTuXoqK1+J89R9ApZSxdZUOoul7yt3
1aG+3ZnmcP8e6xzq669xlsxV/Hx2iKqHUDfbXewnlPUY6kzG20xmNLEehg7D
nBgdJSfHxlhOjY8nOTM5meTs1BQ5Pz1NLs7Okkv79pHL+/cngfNi4PIrBw5I
c/XgwSTXDh1SBm+DnweP49AzWBfB43zsRcc+CuytgMiOS6vHpnIfyP6u+tYc
ZH+Hk8uphcXADMqsI/u8eUblEduIa7bFdduxIq5lECN7Hr6Rf60zqai8Ja7H
UL3nMcmcnZrMkgvTc6nA/2gw8P8Z/F8NrAuFwGUQPI+B/+OoAv/fkQX+56ML
/j9IFvF2+sc6znLzyEmr3Dp6yim2jwvB5xI71w4eU8Z3topsPSE/o0nnKd5L
qlkw/OPydVPRT7I1SbguSfZ+N0U3S8/294ys/sTXnUxesl3zpOvfK7unREfx
noplqNAakWv4z+linbJ4ary7yzkxPaXzzSGwwyL1VGhM/X/ZmqrfKUldS9Ln
p1uTJbpL5ShVf6F5HkZtvQprVq4R9+nTBfZGPzY8nMrxkZGay/jrxKhuq3sM
/LzYE8EHj3Erf8cqfehHRybobcfZKQbO42XVfvVq3zo/I0n3/0O+N8M14jpj
DPR6iuG96xLZY8ki6y31ja/nQu2hOp6Rvd6+3yPb72Fsw6W/1r3RA946M1HJ
2clZIeJ800rdG6OzFl8Xx9q4TdBeeKrylc5Svp6yjYuPXI2kc09Irh44qozv
7H1xngm/XxrvJ1XtSeYz3k9inR5rTqo5DrgeKTSqeRCu++Dq7KQzkik2a6Fc
LZW3p5SW2rnwDJV3nSnLulRZPQVOWvKUa8+gvacO9/dFi7WnxFjUnWT9gTW2
cuhFFG2ju05loVgB2/Afxw7aC+pmfEx/31TreHkHibeXPZaphx0fz+Z2NvFx
sBiwlMzYqqQcJnmtVcE6pk34WqcuJybMOT4+Js2xsdGaHB0dscv8913nU+Nr
5+hYPiqbmZP+f8CJEX1Ojk4pc2rMXAsV66a8t/BjcJZoMJeIVlMZzcZlfG1M
VQOrxN4lWdWPdJ7SWcg2V/YfCQ7/eKbXRqzPwansa7y87zB7bDi9OHOA5cL0
/qRGCrVTDLq/8l7dm7x3xfc5zNwNS/rnHn+3xqop2ZrINT6Giu0pH0eBofjk
6agyWQZT5OeO4Sl0km4ehew2ptrUkqdcTbXkKVdPFZmYNrOpgWFUM4/EyP7O
xbKPrFZlmyw95WIpmaf42NrK11pZe8raVYKnVK+VzevsU0v0qXFWMpGK6vjQ
1lmuNU9ZfVKsVdrUNfHxZPfnDafeF1DtMrGOxvusmspx/KW5Q8bAcX+WkTnG
9fauj+HynESn2bhP/Pz86wl2Qj9BTZT3ksxM+J4+NjTOAnuWiDm8ZyQw8vXL
ITUlV0+F2ggzt7vfOrCfDIvCQrHWR6kcxXsqy/VKZa4PFZ2yeQqNtFA9ZTJV
PnWqndQxu7Q53N8ria+n9Hbznnuh8pTF/EGvORqecTGUeL8Q55mek9JejrOP
soiNp1z95WqhmMf0RXhKdFVWnrI1lrIXVdFHa/M9CPk+2vo89P2Q1Mkc3lu6
XlTXvlX+sfk5pz6R9Z/K+lFxbg/u0w7H8nwtRBX5OjN10At8zcX29uJ9xOtk
QRuawptG9KWu7if2cYqB+4NbxTolGFi1JjT53g3Tj4cmWI4PjrMcGxhjOdI/
kuRw33Dq40O7h5LAeTGwr4lbKj32SgPt6TfmwMAebaT30zjKxUW+MXkqhqF0
joLM7Mh2/kPZ++2KzGRXl1fy9pTJVUueWvJUkZ4qa1QOy8JEPjbz/d+kylYu
a98y8ZVknZuPr1w9hVFZKZahbD1Vs87PoT4VMzE85eLpWO8lX0/F+L+Ai7uq
x/R7rYM9Z7bh16O53lf3WKrHtDFhbexqfbLr+JohmgkNi0ZP6rC6tbs0Mi/x
l0mtxFlKFdgj0i2VvhFl/cjDU+L1++hxBx+2b62ng2Z7+6Jk366+YE/5Ogot
laWnirDUQvEU1Jny9BSaxbR2ytZTMX1UNk+53G9heMo24Z6y3T8rt9nxhhQx
0z5WT4WNd2LPtGX70Kt8ZzEz37SPGX+8rzz2t1y35moqX0fJPBVipZieYrE4
5jc5xMvDijpZJpa28HRW8Xkfhpo/xnsX66q2Pa2hPx8x1yrCbXFmq1gvQgvB
qYtf8edAtBK/74ju95psNpPLjFyXqPrwIbxzbOxkE6mfuOj2sM0rYJ68LYWG
4pPVjPKiPFU2U6n69mJ5ynWfXhtPyeL6ecrqKd+41KhMnpInm3mAi91TIYkx
C8j1a421ftfGOyF9fTZ1MdFTsepTYh9Vqh6gmcsYcrwqO75zOabN2lAhnhLN
5FrfWfJUfjbKKzbvcd+fhRixfq25965YMzLNnRWNxN9Otiejr5l0/tGuTfZ4
DNE+MVM2Qy15aslTvp4a37aNRfSUyjOxe/Ns5wgmPYYRjZRnZJbir7OtUfk7
K29HKTwl8UZoX3LRfkq5hlunGqPnWrf+FRJrjS7Gxlo29SdVH4iqd/7g4ECS
w8NDSbKclZj20pAxJ0aHn/pUXw+7431dzUU2GzM4kfoKi3ZTVp4qy/PI+vmp
Yjt/NXlfCnsW6uyjs5DKRjrrpLyT4f/obGKqJZnicx+flM1TPrMnZKZa8tTi
9JSp3iSzlquZFqOnXOteLnUrk8Eq1++Kso+Vr6dCZ4oWHdu/O7b/m/KN+Lxi
r7+NNRcp6UEX/z4p/j/J95HwxspibqL8GH4wFR9X2ZjMJ7bGKcJTNrUHlami
Wyqip2L22+ksYvJJ0X4rs6d83h+yuanaKAwV2j/nktD1OzH+9oa6JQ9LZeGs
pfrU4reUzldZrJ8SozIVromq6dFTPM5s9zbjGi0xsxaZoY9nis3jmJK3s0Qz
ieuy9NfvZKYKdZW7pyo50Nc7n8XtqZr/6ykcFBob/8SOl9Ek/6cUg4YS61fo
Kb2DYsXOUrUZUObY8B5tbG8re+wTw/45OTLIZVgbta3UjlKZCk9Nnopx3Fxk
YvokC1PEcqGPq7L6emTvKZs9KGxnq/r2eBf9dyva35uCPBXjuWfxf83Q2Doq
y3kUS5YyZ6q7miw9Zdu7x9tJjM3MCxdPgZP2dnVYZZp+/qyclYW9fNZkpS+v
9ZSYJU9l56vof98K8JRXJHZy6QHE4xzTsU94rWqAiDUqu+jNlFWOD6nj5quh
VGw8dXJsxGrdv2yNjHjcXHZP+dU687FMkZ7yfZyYr7erl2L5qcjf+0WlqNpR
0e7J0k82joJMb7ebe57FnlN59tbpUrSnXHv+RE/J/IMGMs1PV90XMkMtA+HP
i7bSfQ5VLQp8NNXZ7hS4jxib2laW9opZ20pfXjEV7yqdrVQBE/lbKn6d5mnz
VPJ3yKFPr+ye0rkq1n5hNreTHp8ND2QacJxPjg8NKoM20t2Gv53OVLIag+0c
NRtPlT1ZeCqGa4p+XYp4vUP2WY85o7XQ3/uLIK79dlk5pqiY/CRaytZTsSyV
Rx/d0+YpdI8YnZVEM9lE5zZpj6Ckp4+vO9laSlavConpsWQWQ+tk6bHqdT3M
VLyrZL4yZf/uXSkf2QbuV0nxFirCVUuecp+16+KpWO6q2ddrsN/bSnBfPrLr
XR2V9CRa+MjkKZ2p0FW2fVyyPr/F7AHeUFn0oWZht9jPIYvENFHM/S6Krjll
7ZeyWGqaHo/wKdo+edkJ3aRKHo4qq6UWg6emOlqJmGmo6XDhL+ONJN5OFV9r
idF9DvTTZFc6U90dNdnbk5+nTPUtmzqU2/22pyKayjqJi+yzmD1l66rof089
Z0osJE9BinIU76lYsa1P2fQZxvKU8TEyrJ/Y+qCI4/qirWF6XxbxmixWT5Vl
TZS2zuLonpCZdlnWnEQvmZJXHaiomBwVy1NFr2kKsVSM+D5f3Qw/XURPTbQ1
E5tMtrekXCVzGARuh7cVfSazFF5nqn2ZzObiKUievX1Z9P2p11XV2khbh1J4
al9vaOzm1i3F31N5zvzL2lMuexqbjpn4Y6eyeMpvzZa7k3yzkGobZTRAVgl9
PmX5OmyTtZ1cevqy/D1v8pSNeWLPDI/tJJeZCkV7p0hDhXqqDPMhinZUSEY7
9WYa6+hQRvTUeNtmIstoSxPLWOsmdn6ifQuZ7NhqDNxOvO10V2uSme62VGxr
XD6eStWk5mtKNr2GssSYAW8zmz58r2D7nr4sPbV/Vy/LkqeeTk+5miqrfcJs
j78ODPQlieEnyJGRQSdP+a6xipO4xijaPgvFUmV8TgvNTj6OClkrFbPv27Qu
KPT+zuuQItWbyuSpoupcWXqqTHP2ivaQaCOfxPIUeEkV0VR4mcpgGDQVumpq
W7Myrm5S9Qkm/Xg9tQFP4fVlspRsFr1qPypd0vtQOc6d0Kyf8kkWnor9t67M
s5qWPJWvo3w8ldU8isMD/V7Jw1O2x8W+TijqmL7o51SEp7LqpytDyuKpPP+O
ZO0pH0u5uipvO2XhKZOVbO4fc+55HuuOivZT2Tw13kx9ZMhEyybpZbJMtm5m
mWrbUpO97VtrrudrWUpzcXWt2Z72JHPbO7Thbyveft+ObSwHtgvp6UpycHt3
9BzeuV2aI7t2sJj29DXFNAf9MP39KAvayrhGyrretXA9Var1yAvYUy6myqo+
5WusWMfAWR7zZnGMnreninJUEe5YaM83a/csdk/FrFPlNu87oqNc108tNE/5
1J9Mj7UQ6lFZOsrXQ6FxdVSIpyCjWzZauUvlKjwP4W+HtTBZbQuDrhJ7BV2i
MpXMU7YGCgn6SYyPow717eKi99QRhamwXrXkqWJdtdg8ZWuqPDwV6q2ijnFN
z7doU/l4SvX6lM1NRdZMs/bMUuLF5+9Hrk6yNIVNXcm1BpWnp7KMj59i9PuV
yVGxLVWUn1SesjGUzlNTLdQ8NJPNm2oysbWJZWzzxiR4me5yvD8+tu5zyCLe
b2/rliTTbVudM9PenGSuqy3Jvu722nRtY9nf3ZmEr1np6lYxnHWIeuowNdIR
aqMj80YCM4l1K95Q6ev1e02p6lOQQxHqU9XslmYheipPVy1GT9nYqujjoYV4
7BvLfXl4SnWfMr/ui8EdZf1a8vqdXZavp8jalEuNxsdTNv18C9lTeTgqtD61
5Kh8PDXa3p6KylM6U8ncxF8mMxXvKt5mIdGZyzbQcyjLdEdzJe2tLLPb2slc
Z0eNr1Sm4k0U1BO4q2qqw/P1J3CSOH+Cr0+lr9fv4yszFJ8lTxXrKhdPzfb2
BSWqrSw9pXKVzTF1iH2KPn70ee6h97dNFrUd021lx6Gxvp4lU2XvBt/b5f27
Ou/Xpaymcu33i70+aqF6yuSfvT09NcnbU0uOUmdkW4dVVF4aaWuTZri1lcWl
PuXqKZWrVDbCxxndtMF4+6kt1ezduik4yvrY1i0sU83UWS3NLNOtLSwzbVVr
obcw6C6xtqWLWPeC2MwClM2yqF4H53eyoJFMNSlZXOcEqvxWTZ/SWCZvFe2n
PF1l8lSoocriKdFUNk4o+lgyy7jOl48V2EtZlYOD9p7Sfd9cv49F+ynW+67M
Rij6d+fT6Kms/ma4JLSmFTrHT2Wrp8VTps9TFk8tpLVROicNtbdZRWcmzFBL
S01ET9n036F7xF4/cBAfV1OZXMY/Du8pl/h6Sgz4iqW1OcnetpaaYH2LD/qL
j8phtnMFRV9Vr+uRmsrkKtV6Ktt5gE+jp7L4G6nzVExLxfDU/v6BJD6e4k1V
tGeKTlGeMjlLVXuyscZC8lQex9Qhvxdi2qHo35dl99RC+VuRtbWy8pRpvp9s
PkSZ9vcNqT+ZHnexeip2PQky3NGenKrCm2mwrVUZ0U4yPw1s3VqTmv18Lfrr
EtPM17HQOqKnRFu5uMnoqk1+UTlL1kOo85TUVlywlmUKX+uCzNHvOURW7xJ9
JRrLtn4F/YN8sJdQl9o5F6ZU5l34zGbn+wOrv9+5HsO+3gL+Fvc6p/J8I3sq
w70bdXtFhszq8zFV0Z4pOlmYKHSGvc5aIbUv/jZFv+6hx9cux99Ze8rGD0X7
puzx/b+QbVS/b8vkKJOpsvZKyIy+PJ+nj618H1NWB8NMdXdHz2RXV9T4ziN3
Wctk6s2zMZPOT3u2bKmJrafE+hScwmwHMJVNfSp2fD2lMpXy67bwlG3QWjqL
obP4mhdf05LttcW7SmUp0U4438I2Kjep5wz61bOqNa2+Sg1L6Zm8j1MWv6dc
TaU7XtYdy/OPJz6u6rja9viwyOPrheipkJkhWbit6O/lQvGUj63E92ieLlE9
1yLdYPO6xnaSbXwdFNNOtj1/ZXdUFs4y3W/JU26WsjWSLqKbwEC2VlLVm3R2
6t+8uSY1+/lq+uxET/Frrfiak0sNytdguXnKcgZhrCSvacvWJGI/oax/UOwX
xPVYOBsDZq8fo8f3x+lx/on+3ewUcrTfLipn2XgqZO2VvWey+Rvt46iYnsrK
TT624o8VTHUHWGvD20rlKVViHwNn1eOlO14tk6ey/j97LJvZHOfHcE+Rsfl/
iUtCvh95ui80ec9iiPX9CfFU0fMoRE/JnJO3p1ysZfs1xbKdq610j18mT5lc
JTOSze18DcU7SeYnmZdED4lmQhPJ7NS3aVONneAyMaKndD17vJNk/X8untJ9
HhtfPU2esgm/josPeAucBb7ibXW0dyfz1bE9u8mJwX5ycmgPC3wMkXlK5ipx
riA/p712D6qdNZeV3VPpHsN4nuL/ZpfVU6KtTJ4CQ/ERa1VLnirGU1n/Lz3m
sX/R1imjp1xqyC6vu28dJJaLivaSlSEK+n1b9NdtY49YnvKpJbmYyebrMn0d
ITUvV0/Z3LdMntL17rnUpWxqTrqePVOtSeYkU71JZyfI7qamVERPDTc2EDEj
TetZdOuhRGehmXwdZcp4Uzq8l3TXqXzlOp8960w0b3HO+NbNNUFr8X2DqVrW
9i7WD4g9gGAmMBae8lHVq7CHML0uqzLzAudgQGAuxtx8eGOJ0e4PrJzdLtSV
LGZd2EU+X0NuJ/PzyurYwfXvtXSmkkWtSuUp0VKiq/C2tsfWi8lTPtbKq76U
9//dY3nK5rg9xDtZ1INsX6OQnlzfOkhMK5WhtvQ0esq2HuOW7anM7OhJRXaZ
KeJjymP2FJ7avj6696SpxpS1p2zqWjpD2XhKdFAMT+ksZYrL2ifX+RAmO+n8
ZGsnTG9jYxIbT/Gm4l0l9gPiZSpPxbLU0+gpvhYlXqbzFES8fyrtLWSqo5Wt
ycIZF/yaK3CSqecvtqd0rrJxC/x+zMpT/PPY17tT83zUnsrq777LHiHKfT8s
j+NEV6l6/vg6lXhMmaensorJU77H9HmaKe86Z57H976J7SkX48R4HUM8lblR
POsKMeoRrsfFMX6nev0ednZPVmuF3Kzk7iY/T/FxMZTuPa4yW2jfX8j8P1dP
+ax9yqIu5WMpnaFc50Poak2+duLdpIroqaGN64gqYq0KT9EA2BMI/WqiuWJa
yqUv0GZNls/+wWWpT0HtydZU2tpWK32MtmYWMNZ0ZzsL+kqcEwhm0s0MrF6f
9hSeYlx8BVEbJv07ks0G3BXiKv3arhBPZXHsEv3vucMxHX4sHjvK6iu2x6g2
5sjCRr6ewuedVU0pZk2iqP+5x/SUz/+jY3nK1lpl+v6oPk/WdnJ1UagXxMcP
dUeM2d+h88KLTfk9ZXo/qH4f8NerHltXR7J9jkV6KvZcPts1UK7z+GSO8pkV
Yesll/qTraVcPDWwvj4xFboKTtFTWJ9Cd/DO4d0j9g0uRE/lYSxbT4l1K5ml
Rjc3GY011lIN2AqD9SuMbL4gRJzbXrVW1VO4F5bMU3OWtgLDyCMcS+3qLdRT
qucl/l4vq6dM1uJPMbLjQf7Y0vY406Xvy3ftSiynZVFPyronr0hPmUy10D21
0L4vsUyUVT2lqJTNU7GOyd3TnaRoT/ma0MVmMV5zl+cWYqnQeRExaks+c/h0
hlI5yrV/z8VRsSzl4ym+VgWn4CMwCfoK11GJbuL7BXWJYSir+YCWhsrbU/i4
OvuIl6n8BKeYkU2NqfOqOhZG5SsM1LF4Z2E9i7dWeq+s7iTgKozoK37v4YOC
pfTW6pXG2VHJcbVpzkQ6c32V8J6yne+XOk4Rjnds+0Ly9pTs+cku8z22zHIG
gC6+j7+Qj7OLeu/oju9j1XWXPOXuqaItU6SfinYUpjg/1TrK11SxPJWVe1xe
h709XdZRvXayqB+n1k3YmxdaO/KxDwTvL/blifP2bINmgo/RTeIcPl2vnngb
nMEnM5LJTLXZyNLbuEGZXRvX10T01OCGtcQUcBSeYr0Kz6OdsHbFW0pch1Wk
p3xNlWV0nlKFN5IuoqdMphpt1od3FvYJ8v2CWNdCZ013bqPW6kwy292VspXK
VKKn1KaSe8rVVNVjKlMfXzqzu3ey8DUzn3kUrse3RXoqxvGzqmYR2z4htYqQ
4+9Y3lmofvL1VKw8LZ7yed353x+xPKI6/i3aS671icXkKds5BunIbVBGT/l9
ffLUvm72jnLJVHdncipmsmtbykb8xy772drMyfOJOKvcZm8nPryfYqx94s+r
7AS1I7calN5Nqvh4SrQV1q/gPJgInSXzlMlUvp7ycVbRfpIl+Xq2VBLLU7JY
eU3jKVV4Z6GtJtvbWKY62lnQV6KrxKj6A03OOigE52OoYrMflmsfok0/uOlv
vOsxQt7Hx9JjgUBfwbFl7P6t2MfpMgdnaZvFYCmbr2XJU/l+X7OwSKinsnhM
18deDJ4Ks8XT6SnV6yBzj28qXgIftac+5hPbTD71I9M8PZu1TaZ1T/y+T7I+
PRtPiTUoNJGNp9S9e8V4Ck2FnkIzibUqvMzGVC7eCvFUGZ0leirESzF8ZapR
6TyVrl21JuFtBa7ibSUL7y3Zeitp3UrTQyiL7TwMG0+5rK8NPU4R/ydsaxvj
3/MAT7k8Rl7H1UFWKqFjF3IWuqdE+xfZtxf8vcjYUbb28X1cF1e5POYU/ZtR
ZIpzFNZpytvvh2uU+NMsLFXps7OzkSm1XmrTxrfO5GOiEDfZrGsyzSn3WdOk
MhRm18aNgam10o7161LJylNgKQyaiq9doRFieMqmjhXqqSIjfi3Qp5dVYpjL
5ClVRFepIlprhtpqlrpKzNyO7lRcPeXjKpXpdOYzJeS4wuo4YZc+0f/PGvE4
L0sPhR6HZfZ/6hL4p8yeyqp/09YwrsaJZai8PZWVd2L8Tsvi+S95qtyeCv2a
7fdcMjtKtJKNnUbbWw2x79HzqSmF1Jpc98K1nVXutr5JXV8Kt9RGqZ9sEttT
OLcCrwM7TbdtJQe6O5iD+BpWVqZS2WQh+KvsnhJt5dMHiJ4S61UY/jq8Hm21
l9pqmrqKDxhrpoeaa3tXElPfoDKWhgLDVT5vNTLnuWaxecrXB6EGyspQymMY
4evkj43K8pouhNh8b4r0VB7ONLkrT09lZZ1Yv8+ysuBC8VQW64bEeRQhM9Nd
jVW9rdvvX91r4bqvUjp2NSd9rUluppG2Fk3i1qBCvRTLUKp6VKihYlpqx3o/
S2XlKT7gppn2ZnJoeyfrZ1PtF+wa3zVXZU+oMZO1ak0btcnCYqZ+Qdn6Ktk8
C7hsrKWZZaIZ9tdqYfts7W1r4ea3p2tYtbMFu5UzBSEHeuQ5SH8vy9Od5EBP
F8v+7s6aVGfH99Q8B5fM9GzXZnb7Dpas/RVyLGPzGCojuB4z4eeLebxm+7cb
zotuytNToeYq03NxMW+WPZ62Hsns/wk5rYHL2zp5GWqheyrbNUHFeco+br+P
bTzlN0s8Xs1J7ye5p0LWNfmubcrTUSG1qWz6/Mrrqf51a9gp1F3mtrWyOtXe
1i2pNVVZmyr2jPbF4qkYprIx1vCWJu1sQN5TeL7irqqnKqnstVW9X0uSSh2r
Wdgrq7ZvkM8s/V0519mpzD76ezadbUnATeAp/jJMdT+ubD2FMf2NKcpSMT2V
Z3z+Zouekh4flcBUZUksT2VlLrhflvbMssZVFk/ZPGbs7/WSpxavp3xrdbpa
lN0+S659eqGOsvdUjN49V0+52MllPyhfT2Vhqpie0tWafAKmguN7cBQEalVQ
p1LtcxViqpgpi6F8rTnUuEGZPIylcpW4lxa/HzF6ie8R5D0lht+Hq2YfYuFx
ob6lCtS9xEy3t8+nNcnstnZqrY6qneh5/jI8hdvKTWaOOIfD3l/ucetDTP+d
cz2GycN6IY8d0l8T01NBx2AlsFLZPOWavGp2RTsKv8Ys/idRFkctecrHUVVP
FeOo2oTs5aSaq2dbcxIN5WejheOpEEu57qFb1hrVQvDUVMtm5imoUcE+S/wa
K352hWgqk7my8lRRidUPaWOnvOpX6CmIao9ijLjmiveU7f7D6DbT5xLNlbZX
63zS7kJDQdBYYir+atfWv1QR9+iyjbieLL22LNxYqv8b6o5dbBwS6iuXddoh
9zUdk5hMlJWhFqK9ljyVnalcn0NWlrL1VlksJf68L3mqvJ7S7enkMjfCpfaU
n6Pc+v1izZgIsVSoo2LPpAhz1PpSeArcpAoc3/OegsBl/ExAuB1YCWtDaAvR
WrIalq9VirZTiKeMjxPgqCz8pVtnpao7ma4LuY3OUxVT1XqKr2XxdSs8b2Mt
m0CdyzawZkwW7DtUx60W5lrf4m8nzg/xtV4+UfRVdvekIh6TmJzm4jj9cU62
ycNaMTzlUyspm6fKkDwdlbenQv4f8zR4Sv+/p7gOytJTtvPMeUfBKThJZymZ
c4bpMYApvoZKP07YnlAxZk/kZagy1KfSlkp7anvDWuuIntK5yDdgIjAS1KXA
VeApOObnZ1bwdSqsS8ks5VOjKqJfMCtPWT9OAZ4y+Uo3t0JlIV8rqaIzVDot
86mtXfGego/Fy3hjucTGWTW1sM7aqIyVjn39y9RPqLPUQveU6Ki8PJXlsZLJ
U0XWsWLXS1wT+vzLWA/M+vX26akrq6Mwk/T3WJEpwlChnrLtywt5DJml0Eum
vXMxrnUnG0P5ekr9OO6WcvGS70yJGHtGxY7JUryT7Cy13stSeXmqMkO9npoK
6lRNZKZ9CxnbDLPT6+j1q6gT1rLr05E7yqVGVYZ1WIW5rASeMrlKZassE+os
13VYNnF1lyw4h0PmK523xLoV7y1T36FqdmLIHI7is51FZykxNTMXLWeJ2NbC
QuP0uTUOfBoS6gwbpxZtqBiegvf53I6dyXs+WjLs6bNx1GLyVEid2mltbYb/
3xIN5bqfrtjbZ2up0dZqRlqancLfVxfxfsPNW7m0sLjUn2LWmGwtU7SnTLUp
uZVsUk5P9a1dTXbXr0o8NdncyDwFroLLwFMjTesSU8Fp5eN1qTVWoXMryjLn
InaUMy7m7VK0pWSmsp21nqenbF0V21I2nrK5P++p6oxDe2fJ6le6yHoEy+Qp
l7Vn6fSw+HglhqWy8JSLqZY8FV63eVo8lUWy+J761ILBNBP090hRKcJQqZ/7
DI2ktJOkh0F0lMxLujkTKkfhqaq25GspG0+pDVXJ4JbNNFtZYu2pm1XfnW4v
KIh4O5v7+CaepdY7OyrP+lRv3crETWAq9BQaCmpVcHnVUum9gV3qVNoZDRma
bMlT/jWqImpVcXoC7epWMRO75qXuL9ymjDi7UD1jXp/93d3G+MxIDEsPC7rK
NljX4qO7ThfXz+37/GSJ4UHbvdNCjqft+5bcHIUJMoHCqUVbMWay8lRMV4X0
1RZpKR9PxXJU1p5S9X4zO3V11sRmNp/tXrouPXc2bgL7+HjLx1M2bspy/ZLK
SrbG4c9n4Sj+c2Ffn5ufGoTE8RTUk2IH6lPgKejvAzdNt9Hj2a0bEzvBZWCq
qqUqdS2cVaFbRxUzC7HGtVA9pTJVHsmifpWXp3yN5e4rtafEvbvEy+Dj6rz5
duntbf3lO3e+aE/5WMY3oYZa8lS4p2zqfkUbKEtPxX5vFGGoheqp2JYK8ZTO
S9aG6tyWRNe757qnrsu6KFv7xErFUJUMbN5Es4VFZijc2ymr/Zxs60+ytUhF
eYpfG4U+4k/VblJlLelZV++cWk+tJHGCnlpJPbUiuRxqVFCbAk/BxxjwFPb9
gbtET+Xpqqz6CfM01ULwVJGm8vVVLE/BfUTz5FG3Cl2vpZ4P35o6L/t84uxD
lzmGfGT7KOvi9vidNfuAxYhrv6JN7S6LZG2/MnjOJrH7T/ljzizWpLisd9En
no1CkoURXIyykDyViascXeTjJp2jRE/51KNwfp/t7HPTPIjQPZ5s7+tTi8py
TZLL7LyQHjvf8IbiHdWzbl1wuteudUptv1+llhQeXD9V8RRcBh9jfx8GDQU1
KrQV3AY8hbMBZZ6S2Uq8rW2KdlYW7iraTy6mKlPQWKr6lG9dK6+ewizXcbnE
5vGzniXvl9p9wGzWksX21ZKnyuspn+9nEetR/Jy1uDzluw5pMcyjCPJWRnaS
mYnPREd7KraOCtlDyma+ns5SupnjOleFzOIrQy2qSEPpak55GypvT8F56OFD
V+E6KfQTfoynlTkVa4yeyiplqmn5uqtoOy1UU/nWssriqdizBmfa7DLd2mKM
6r5z9O+mT/Zt66iJ6rax9/cyxbz/VyVzPZ3S7O8uKsVZrkxxrYGqgq8r/73V
7QPnW8+MWT+rJIKJAuan+Noglj0Wo6ecYlFP8q05ydyUMlR7G00Hy1hHNaPt
7V7BvXH5hO7vZGOpkNjOlog5OyK2o+x76+KliJpUnp7iL8O+P5yJjvMp+Nl+
1Vl/61L7/ebpqZh9hTgHw3dmhq/fhho3sBTtp4VmqsXiqVjO0jkolqd842Iv
372V7ffzCnOVaCuTe2Ie6y95KntP2e6rvZA8lcUcSltPxcwU/X6LKbrfT/ac
8kyol0x2qphJnjH6u32srZ3F5CKbhO6L6zqjPGtD+c6PiGWpshkqpqUWkqew
9w/WR4l+qo1+T9+sPVVUr2CsdV/oKT5FO2ohuKrMnsrDXCH9giqPZeUpre9C
exYd9/Fy3085bS08H+s4Pr6z8smBrrjZT4/nYsfneahfb9Psy7h1R/c9B9Iz
TrI01JKnyuMpGyf51Z10huKT9lSImWxt5JNQJ/num6vylGoOX6wePx9Lhdgm
1FO8dbJ0VB6egtoSf1llbt/KZNYfnMfaFJxHX1XWUq1fEJ7Kqq71NHiqjNbK
y1N52KqompbKU6KpbGpavgldF+ayP7K455f7Xl/VyOZo+M/WCJ/t8bR6SveY
B6kzxBifh3d/5cL11N6ubmVM99XWTpY8RSapubOMr5n87CRL1VM6N+HlPrWl
slsqhqdir5dysVSsepHOVXhdFjaCdNXXO6UoT+F57P3DgKn4/ajE6zHgL30W
tq0GN64PjsxUS656ujxVhL9Eh2VR98orsr2RRTfh+cn2FqmpXPZW9jGRby8j
v5bMNBsxt9pYBvUkL0d1d9TkYM82p4j3lT2mMZF9WbtWTz7/BOtkqn7EIj0V
21Zl9FRWThrfts0qNmaysZO9nyqp7nvbxiJaKsRKWa11Knt9Ksv1UiH9dzae
sfEU3o6/fR6O6qyrYynSU3zvH5yH8A7iPeXnqPJ4KsRULm4a2NDAYmuqoo20
5Knyeqpog2WREE/xRtIFbmd7W53NvNZ4RZh/H3tG/ZKn9L562j1litNanyVP
eZnJxVMmM/nYKe0nMdRQLbX9emWzUpk8FcNM4fvgxvWUbfDxXOtJLm6ySZ7r
p1SewuvQUzg7vWyewvkYqsQ0la2h+LjWqRaCsxaKp0JNJfpqqjluJrdukSZL
2xXtqKzXh4mz4fnHN82OV/UhxrRSyJ5i+c2nF9wmmdkYEm9XObontqeS+0l6
C3Vx7odUzjux2/9atyeAbo8B73lx3fLs7enyjuzx1NbpnE/5PBXDUbynYhpK
7aZ0qnPMK/Uok5vEy9Ehu7eERWecfD3VqMxuenwE6aXHbmJ2b5Snd8N6q+xY
v84Y2PNWF9Pet91r6zRxryfF8pSLn0I9xe/ZG+Ip8Tx6StXft5A8pZtLmKWn
YvuqDMaSmSdLc4V4KqarePPEcFMRniqrqzLpCxQe32Qpla1kjrK9r2kPsIXg
qrJ4an9XuzFe9aaMPeVqLJd1Xa6e0hmrTJ6S+arMnhLtE8tS/GzyWHUorZ1a
mlMfQ4Zats6nxXpvW944eXgqzyxkT5lM5eKpEAPF9BKkY/XqVPjLXTzFW8ps
KrWnsC4lRuaivDxlspJPfDyVPB8LL/maysVTC8FdMT01tqnJOhP0964qrq4R
s3eLW6bp3x6I6Xa+zjLV08Zb/TPR1lya+PorhtlUFoplwhj1Kl2/YegaLtWa
sDzmboT0HcbuyVPNvMjCU+p0s8T2lE3tKiRKiznWp6pJ9//h5dZzHRQ9ivBY
492ckbqFeDooVoL7+Cz21YV9c9FPA1s3J9mzZZPUT2K/m+663s1+ycJTup49
c2r9JCa2p3Y2hDsqhqfyqinZuskmoqdUXpJZSm+qWk/xrrL1lCnq++bvpxim
iu0pXZ0qtrMWg6lcPKUzVd6esk0WnoKMtciz0FzlU+fKug6WRb0tVl9giMNU
Zgp5nGj+yqD2lYW7bAzmYrXF6ildDStLTylrTPNuwtrSaGc6LlYy7Wcb4inb
GpSNp3hHYcBSFT+Bj5o4P2wqxFMYnXGeZk+5WCqs589tJkTRjlJ7ajXhgy4S
L5fdxjVua5H0nqp1WXGGMn0teXvK1VVZ1LIWiqtGm2pjYyqZrXwchfd7Gj2V
V2J5Kq8+wyw+fwxP+dwmD08V0qfoUPdaCJ6S+WmuszOVLD0lfi7b5LVeK4t5
e6FuimkqW0/x/XsqT6kchfUocFTaUmZP6eaAs9kMAZbatUn/2LYJc1QxngJL
qTzlaqmsPOVqojwcBWlftaq0nqp1iL2nKinGTnl5ag99f9skS2vl0UcYarIY
njLZSuUpH1MtNk+V1VSq5LX+K29L2X5OH2eF3BeNJXoqVt2rqLkaKmtlWcfy
8ZR0TVVn7T7DMrsseSp8ZoSPl0x724rxcZaPp+RzJdSO4utSMk/x9SCbWeF8
dtK/1SEJnTtu2vvJPno38dlFj8EwtuukZJaSecrHUjaeUptK7ilfF/k6Cozk
EtFTu9etJnz6GtawiJfLbuOaPRvqlVnMnrJazxVgqBBXxXaXyUhlmUMY4inX
tVWmZOkpX1+5ekvnqyKSxSz7LGtZWSeGqWzua/vYNrWvWOu9soqqtuZT38pj
/2PRcel+xk6WWXrML4utY3wTOp8k1MC4v/bemsw7q1O9320lXdJMdFBHtasN
ZWskcV9bVXyMxZzlOFdCDG8ok6MWqqdMc8djmExnJl2eVk/pbJSlo0I8xZso
xFO8qcTztS6Rr6/K01O2dbUYngqxUx620s0btDFVzP2IYzjL1lOufYC+mdrs
niVP5eupvFyV1YzFWOu7bGZqmEzla6kYydNbJnPluV+X1iP0uB/i6qlp+rg2
eRo8leylxXkKLIWe0hnK1kuq/W0xrs5KvOXqp+atqVTn9KUd5eMp271s8/CU
yVDxXZWdp3g/iQl1VBGeCu3XC7WUi6eyiugpTG1voGvcjJRFQuwW4qU++h7F
5F2/itk/GNJL6OsqF0/51K1sDbbQPZW3s2LMqA8xVVa2yntmfcjaLpmnbB8/
b0OV1WV59yImn7dDjJunZGaaoo8ji85ZSS9h4Jz8rF4vn/kYvLOqe+Ruq9qq
TV+jsrWTbM/b/ubaDFAT6TLYxturttYk1p3E+Xxi0E9iRE+lbRXmKfRILFf5
7H3rsz9u7eew89Ni85TL2qm8DNW2cqUxZfCU7HJbT6nnBhbnqKw8ZXISf72Y
IupcIXto5bVOq6ZO1VibvG0V4inX+/iu91ry1MJODFPZ3DePmthCMVrR/Yha
x3GWmqHH0zNt7SzT7eqgrdh5haEm29ukUVpr/nFrfeeWrJwa6qnq+UrvH0bW
/+fqKXHvW5Wn+ujvb13AVNXHVDtJZyWTl0wJ9RSaKktP2Rppe0ODdWrvb94H
io+tp7SWWhduJJfYeCqr+RExDAVpXbGCxeSpUFe53Bdvyz5n/aoklZkX8jnr
uv2v8rRTbFPpbOTjqSxtlfcswiznXMg8pYpvLctqxkWTe3wM5jvvPUu/lC1F
26dIW4WsyxLra0WYaqGZy9ZeoW4zPwe9pcRg3UnlJJWteEel06qom3mmIE+J
PZDpGlW7ZO4DtVRrbW0KbBTiKZOh+LAaVvIY+VtK5ymXWQ4+ntpB/67z0RnK
xUn+casHoat0XjJZSuepLA2Vl6eycJTKU6r5E1l7iv9cvWtXpTwFUe0LvBA9
ZXO/LD2Vha2yMJXOVVmZysVToq1iGKssnjLZqmjjlNVTWZksa/fF6Ec0eUp2
m8WQou2VTfw8Zer5U9Wr9rZVwnsKUqmVhSdWD6bvfA0XT0FknlKZSuaoEE+l
97NVm8fVTbg2Suau9Nqp2vVTrnPx+H4/0Ugu0dWibE3Us26ddYr0FFpK5ql8
DLWGS3xPxfCTylGxPKWb+6e7v+p2YCmZp3bXr5CaSuepssTHdFn3WZrWs9Wk
ZJ5yNZXNffLwlKm+BZaC0zJ5SpbxrXFTtJlCnFL084vtwhBPmdZ/hdS7FmqK
t1GcVL6eNm1k1jLdR57KaxfLUxBV7Yq/TWyHygw5QT/PFDXSZIt6xkPtOqWW
lKd0hhL7/GRe0u2/JPNUrXcq4a9T7Y8k3kfvqLSnfOeM+3qqZ8P6VHR+sjUS
zFawTe391T7RucrXUaKnsjZUraPSnrKZPSHayNZRrobSOcrHUyr7MP9YeErn
JzEyT/WtXWkwVDk9VWMlzV5emJg9l1F8VZCnfGtUvjMuYnnKt28QPTXeWMnT
4qmFZqyFmCJ6B0O9VrSFluwlmsrHRv6emm7NN+Hfw/TXAX4ap48LAUfhx2Cp
ieba2XiD9HcrROyt0xlqz5YtSfC86CeMav9aMeL+Ryr3qAzFRz/HT/V4/ns2
8fPxZEZyia4WlYWnalPrDxtjyYxkk+1r61ny6OuTO6rqKR9L2Sa2o1w9pXLP
rvqVSdBVMmfxj6l6LL2nVkn3GM7LNy6J8Tlir2NbyJ5ynXMRe3agahagcqYF
/buQx97DqX2I6d8pSOy57ZlZKeA5Zf38srBMWZ5LHqbKorewaOc8Ta4q+muH
xFzTF3NNoGsm21uSvcIn2pq5vcNbyBi1FGRU4imVq0yewog1qV56X8yuLZtS
2Un/boip2mojy86mDdLg9WJkntI5ytdTprnmrp7qXt8gjcpPNiZSzaori6fQ
UHyKtZTcU7HmmmfhqFBPoZ9ET+GpraeU961bmYpoKhfXxPZSHimLpxJTlWAt
lY+pbO8fe05g6D5YMT3lM6/9afZUFuZZ8pTcVLbOKvr4vkwpo4eKNk9ZIr4W
aUNVA44apr+/IKPzjhrYvKnGU7jOSPRUtR9vs9FTrC6lsFQentLVt9R1Ljc/
qfaI0hnJJSG1p9ie0iVxlcRILontKbOf3DwVy1KuXnL1lM5PoqF21q2Qekq8
TFbLMiWGp/KISw1KVnNTfV1l8hSL5+wKlWeynscew2NFmcrXVTE8JbqqaC8t
Bm9lbbUiPSVzUVa1q6IdU6aUyVJZmAockmW8vdQiD87pmaI2Euf2yH6uRzdX
M7KJOor+zpUFjIXZQ8/v2QTu2sJOdUFriTMd0Em+88Oh3mNzO7F/UOwt9K07
uXrKdQ4fb6iuhnXGdK5ba8w26hNZ4LqwXkCb9Veq5DWnT22mzrrV1p5aCJaS
ecrU1weGQkfB6Y41y5OIvgrJYvOUzlKyr22xeCqP2YG2hsraUyZT5VHbEl0U
uicW1r0gS54qb4oyl+ip2HZzrQ08LcnSUq6vteo2Id93WU0nZnzfb6KjwE98
ZHNQ8Wc0/f+vTSzD1A4Qlaf2COlv2sQiMxQ4C4N1Kr6OBaYSXePjKb4/zsZV
Ml/FspTNPruxPOViJZvYeMq1rlUmT5ks9TR7CoKWEh2FlpJlsXvKJS6mKqOn
it5HOKQ/UPU4We8THLO+ZXP/2Hth8Z4Ss+Sp8iVrT4m3K5OnnjZ3hVhK9/qw
171ZHVWNRuYLmTH4Wk7NbSPXT73fd5qv3/Q18r9/+Fq/ad5rOk0s6C3MEDUE
nwH6GKyONX+KwdvD5RC47SB1xp7Gavo3bpCkkWX3fMAsYBysb7EZD5xVeMPo
zBNSb5Kui4q8jy7GVIva1iCkAE/pEjLnInZkfgpJx+qVSdpXrXBK28rlqbSu
WKZIfp4Sa1Q2ieEpXV+caJWizRTNXg6z53WJZjGNmVz3uvK1V1GeymsPrBiG
i73HsM5TOmcV7ain1VOxTGXrrqw9laWr8kjexrJ5DiF9bT5xcVUuVhJeF/49
nLx3DfuZi3aS9QSY9szAj4epY2rTWAk1DNaysDcQP4bgGqyhzZtSwdvBx+Ar
3l9i0rYye0pVE7KxVR6OEj3lsv+TqSa15Cm3uRKxHSXzFO+kJU+Fewp77Xat
WVFz+6KMFTo/MIanota3IngqdG/hIudaxO4LLLundDWrmPMubBLj8/q4MCRF
myoPj/HHpzJPFT3/omhLxbZXiJFUtwupz4huqpk9bmEqZb2nwPqSS8TfU/j7
EvavwD0v+IxRE/AZ3bBBG7CVal8Nsf4FEZ/f3i2VyJ4v/5xF2w1tWJ/O/P8V
Vf+j7NsgT6+QXRtVEUy2oSkdYT2UzE3iZS6OwhjXQj2lnnKfJxHuKZmjTJ6S
mUq8Pk9P2cyTsHGUrg8wVr8fnB+iP4tTLZvZ6c7Vy61mPeRpKV9Xue6PbGOp
IFM52mg3/RlUpWyuymvuuqrW9TR5qqjk7amF7LSQnsAQT5XBYAvdbbbPK5ZH
XOpTolu0vnF4v+B7JnXe0UK+Uf7faN5Top9U0XlKNA5/mbiPofh/K3GfQdlz
tdkj0bRG2cZTOxtgnnddkh3r61l4TyUmatiYCm8pHyctearcntLZydVTtsml
PqVwDAQvgzpQaMTPY4rKU6ObNpAD3R1kuLGBbF/5ktUapaytFWOvK19Pme4X
y1MmH+k8ZTLVQvWUT8+gq6dMj6PbK/hp9tRiclcZ6lQ2lhJvZzJaaL9i0a4q
2lq2n9/qeVtaycVSTvUifC6tm6WZaNmUispTNZZrprff2pRkbPPGVOB4AjPS
tL4mY436jDdtYJlorGSc/l7G4Hn+Ojwd27A2lYn1a8kkNYgqUxsbKmlcm2Rv
07qaTG6qRHU5ZKJpbU3GG+tZxpoqGW2sIyMb16QCl4mXDzVWMthUycDmOtLf
RI85Glex9G5YwYIf72hYOZ/Vlayrm4+4TxI9vlu7rjb16yuZP9+zdn2Srrp1
LN31DaRzzVqWjrr51NclMZmHT/v6dDro8YpLttWvS9K5tiEJPEc+eDl/e134
r1Ubw/wKleVq99UN7+NzdZRtL18RnmpZvpzFxVNoKpmx+GThKdlzgYCj9rZu
IYP0dxDUp1S3y8NTMfcO9jGRjaWy8JToI5OlQmtUZfZUkcnKU0+Tu4q2Utls
5WKY0PVYea//KtJiZfeUzkiyfj7TOinXmRa8p5iXBEuNNzelI75vVfUYzky8
k+A4AgO9Lnz460Y31ob3FJ7n3WSXhlQSL5nCeUoW9JHoLd5TqjBXbVqrtZSY
kU31LMObKxncUg3YCk6Htq4lw83r2Gk/ffw+6rXd9Pn1bqxnNSxI7T6zEktZ
eAodgd5IDOJZUwJDtdHnB2Gmoscyprh6Cp6naCmdr2QeE5O8LoKbnmZPyU1l
5yZVavafql9B+PStXcmC53vrlqeuh/Nidq1Zpom/p2RWAkfB7zkwiK0B7TxV
+br7162KFnxMm9jayCdZeMo1oeupslhLtZAthv1+Nr0butQ4ift/rU/E///6
JPQ5OKVgF5bNWEaLiHWCZr9gvaAoTymdZegZ862/5B3velHLZhb4n6UqeBvZ
9xPCX4631cX2vQK/GyY2VcJqQps21kRVRxJNNLJhXZJhepzMh79ODN4XT8Xb
859LrGGl05AKumqcek4brCNtrGPB8/xlkIkNdWSSeoV3Fn9bvi4lnsL9Rzes
ScJ/Hr6mxQy2eR0zGNS04BRsNbp5bZKJ5vXUyRtYplo3kr1tjSyTzfT37maw
LRiW/u3fUG/1P2JciyK7nF+bsr1+PnWryI761Sw7164hPWtWsuyor6PXrWGn
fTAHvoH6gn4sBiwBvsDZ3T11DcxzcFrJBtK9pmK8HWs3sLpaT/1asm3VapZu
+jkqj7WaBetx2+lz6abPDa6H1O7R5NbrxxsIrwMvMXPS5wPprqtnwfPi5ZCu
NXWKrI6SUEuFeqrWVG5+MnlKtJHoK5WhTNdXrRW3RoX+wetieyrUVS6GysNT
sedRFGmqMrnK1lZZuoyZSjorSh+tryJaZaF4qsi6HHjIdu/mPGtdWXqK77vC
5yHWrLKYpxHDU0Uay2odknAb5+cnWMdkKpWJXNzEWww9lnqPzP8ugVP0iMop
qn482e1UtlIZC06HGurJAD0WxsB5DN4OH1P/POSemmxaT/bSr3V6S6M0e7es
Z0HP8MbhPTW+fg3zFLgKgkYaWb+aDDesYhlcu4IFLoPIfMZ7Cj7vbEsj2de2
iRzo2MJOp1s2MksNb1hdqWVJPIXhPbW3Fd4jTYmrhuhrMLBxLXMVH/6YBMwE
a/S7V77I0rPqJXYe9/aB83A5W7PfsJoFHAWm2kUN0wvruejHHctfJG0vvUja
l71EulZVbAX1sX76ux3SS321m/6dHGtrJWMdHWwtF+5ptG1lHfXTusRTYClI
x4o1pH05GqrikopR1tDLqA9WvETa6Ofdtmo5cxTYCk7BGHCb2jpOOmK9SDSV
uGdTcrt5D8Hz6li5KgmcF83k6yn4+jpWrkgC5zGunvKdh76QPGUTtan86lIq
W7n295k9pTYO76QB+vtJFhdLaR1m3cO3cj4Zeypg/gWLp6dsXZX3fla2LsI1
xIPrG4ypmankGB9LGY0lWUOgSla+KrunpPW8BdJjyc/1go9xRhjfKyWbG5as
55fUIGyOk2W1BpZN+hmQufUxes57i+Ut3zqfb/Zu9ct082ZjxPtMbWlKwteS
mCu4PrnJpo0s01vo/aizIXAer0uvUVon7ZPj1yThbdApfLAWhLcdpX8fICMN
a1nw/NiGBmHdU0PqdpDhdVVPQf8MBHsH1b8rG1igPgMZa6xkYhN1xxbqjq3U
T81NLDMtm5KPwS8sWzcw3/DroVJ1K3psgpZCT0HAT3vqlpH+NS+Rgfrl7DzY
CjwF9xfXV/FGg88Hhjq4bSs51NnMTudam9jt+MdQ3R9sNk5fJ1grBt+rvdSZ
rBeRug+e7xj1z/j6VZVsWEYmNi6neamSxufo9+15+p54nsxsfTHJHM3+lmXk
aNcqcqa3gVwe3kLuz/WQ14/1kTdPDpC3Tw+R986Nko8uj5H3zg+Sx4fbyc29
jeTkTvr4jf8HfYyPkcsjDeTubDN589Qu8qXrE+Rzl4bJ125Pk+88Oki+9fAQ
+eqdOfLO2T3k9nQzOdtXT87sriOXhjeSa+ObyY2JNnJlZCs5t7uRnN65nhzr
aiAzm5eRkfrnyODqT5PBVZ8hAyufJf2rPkV6l3+C7Fr2cXa6c/kzZNcKetnq
58juNc+T7StfIDtXV3zIXEiP9SFdy1+qZMULiSHhFOe/ddH7QDpXLpvPCmbE
bZqkjZO2Fn6M9TUMPGYly1l6Vlazcw31KjVgb/0aFvh4B9TyVq5MbsPus2Yl
82QlledSYyrOZbq0r1gelLbly1h8evxc+v3QVHzPX1jka65irada8lT+lrJ5
ni7rr4ryVRbmsnFULFfF9FTiKgdPhfqqFFlgngp1FXyPBxrWkf619cxV2BsG
16GpZaZKjCPUEnyTt6dMydJTVonkJNlrbesp3j02UZlL5idV/YhfU4SGAk+B
n8SZDjjnoWKaeuYhcW4DGgn742Se4vvqKpaqTzmKNxQ8n1nqbT4z9P3CP0e4
T1K7oo/FmwrXYdX+npR7CpLUrKitMGAslq3UIM0bEk/hqWgrvtePX1fF9/Jh
XYqvQYk2E2+H5qpZdzVf0xIvh/tgLQwcN7ia+q1uVdVUnKcqBlxdCbXUZOMK
Mrt1NdnXUkfmWlaQYz0N5OZUF3lybIj6ZpIaaR/5+q2j5PuPz5E/efca+bMv
3CO//cZr5Pfff4f8/Y8/IP/4k88l+ddf0NOfvkf+9g9fJf/Xj56Q337zHvnh
k2PkDx4eIL/88GXy+x+8Rv791x+R//0XXyb/8WdfpLf/gPzDT94mv/vhZ8lv
v/2I/PXX75E//9JNetur5OfvXya/+tw18pvP3yB/+vm75Dcf3SG/eO8W+fm7
N8lP3rxJvvvwAvno4hHy+pFJcn96iNwY7SUX9mwjp3Y2k0Md9Pu1iXqxEfy5
nPTXv8g8BWtjwFPoJTBU57IXU57iTYXuQk+hV8A8nfPeAC+gH0SPoCd4O2GN
CnsA+fpUD7VXJfP9kqsrAUvB8+t48XnS+tyzLPC8wVI711RsBbeBuiA8xw5q
vhieCjVVZp5aS7+f8+lb9xLpb1jGTiH8deij/jq7ZOcpXOOVnvtXG7nvXHrw
8vSU6jGqfjKlPJ6yXX+VxZ5VeXnKxUtw/Apx9ZTOPXgb3bzdVLg11rgeW1x7
Lf7df+psVaTLMnCV7PbwXuirryO99G8jvH/AUzNtreyY3sZT4jG1t6M4T4kp
Yh9ok3dwXx9VQv3jahmfaOtOWzDzfWX0e4MRazt8+Nvxt+VnLcjWAVWvr9Se
0FKz9DWZa9lMDrQ3J5mhr88MNRlfh2K1DRr4GBwFx+cYdJWbp+pY4GMIX9/C
/js45b8mvB1//+F1a1KPJc7xU62LQg/yXwf7Wqg1RBuJwZkTspl/M5vXs6C5
+KB5+L4+/HxYLxqlxyTD9LgJa1lieGeJa7RwHRc8zkjdcpaJBuqk9Svo5c/R
z/M8/f49wzKx/hMs+7a8SE52ryU3x1vInal2cne6jbxzeoB87eZe8sdvnCL/
9eu3yN/+4BXyd3/0hPzTT98i//7z98h//OpDevoO+UfqpN9/5z75qy9dIb98
5wT5w8dz5Hv3J8m3b4+Sb90aI9+8SU9vTrD8we0p8hefu0j+iT7Ov/z4s+Rv
vnqD/ODBHPnyhT3knSOd5LP7W8mTuWbyYKKJXN9TR672rWYff3Sqn3znxgz5
7s1Z8tWLo+TDE/3kvaO95P1ju8nnTu4hX7lAH/v6PvJH94+RX7x+nvz5O9fJ
X31wm/zFB7fIn757nfzqrSvkZ08ukB+9coZ89+5R8qUrc+StE0Pkzt5ucqF/
EzXjWrK/bQWZ2vQCfb88SwbqPk52r/xPLP2r/zMZWvsp+n55nr63PkMG658h
fWueIbtWfpz+Pv8U6Vn+MbJ9xcfJzlWfpJ55hmxf9SnSveJT1DefZOla/gxL
z8pP0+uepc55LhW4DG7f/sLH2O121T2fZPeqF1h2rfwk2bGcPqcVnyQDa55l
ObxtI7k01E1uTPSSa2M7yckdW+n3lhoanPjSsyzdL32KuvFFsqse6movJa6C
3j1wVOKrDDylun3FU7VpoT5UR+8p8BNmYMMKFvgYDIWvZW/9C0n/Xt+aSsBM
e+pXkoG1q9gpH52nQmYB5u0pk6lc103l6aksLRXLU76myrNepfKWq6dkH5ts
JTOUeJmNp9hj07/l4Jzptq1s/QPvqViGeqqdFWAi55khAUFP7Vq9ir0vwApz
He2sRsUbjXcGPzsN6w28p9BGOj/h62TjKd9k6S3c10eV0Hpd0Z5Cz5hsZDMz
QTSEzBS8p/jaFNgJTHWwo4Uc6Wonx7d3ksOdbeRAC32f0q9hH32umNnNjcwg
Y+vqUoGeMlmNShbVc+dNxT93NNMgzMaCecP0YwwaCk75x7AJ2Amed03m6zZ8
Kn1xa7iaTnX+BMTkqZnmSr8gBNdgYc0KHx8DloLwfYH8Gix+HZYYMNgQPWaE
x5mhz+VAcyM52tFEjm3bRA60riand1KrjLaQu3s7yb3pLuaKL13eT37w6Bz5
xbtXyV9+6T752++/Qf7pJx+Qf/v5B+Q/fvMF8r9+/SH53fcekV99eIF899F+
8q3be8k7J3eQ+9NN5OrQGnKxbzk5t+tFcrrn0yxnd2A+w86f7Pw0Odr2CXK6
+zPk1ug68nB6Ezs90/NcJZ3PkrNdnyHnup9jp6e3fYYcb32GHGv5JDna/Aly
vOXT5FT7c+z06NZnaD7Ncqz5WZajW+ntW54nZztXkMu71pJbA5vJg7E28nBq
G3ltbjt5n36NX764l5ruIPnhw5Pkx69fJH/y9lXyy/dvkz/96D751efukZ+9
e5P88Mll8u0HZ8mXrh8h752fIW+fmSJvnpognz0xQU+nyDtnZ8grh4fJtcmd
5PxgBznZ10oOdjeS2fZ1ZLqV2rYZ1rGtJkONq5IayeDGlfQy+j5paSDDMNOe
XgbH9nCsP7JpDZlqpe+NjkZ2G7gfXDa2BR5rHXuvwNq5mRb6Htu8isxurSPH
ujeR23v7yReunCA/fO0m+frt8+SrN8+Sz18+Tt49c4i8dXI/uTczTo52tpC+
upfItuc/QdpeeCbxFKwnw/VQLo5y8ZTpPqo56r6e2l33DMH0rqH2XAnG/c/U
uB+fv/zT9O/vs6R/zQvzeWk+4NXnyJ5Vz1OHvsh+diBin2B/HTXCmpVJdq9e
wWLyFLqND9a+RL+h4Wwiu68u4EWbhD5W6DwLe7uZZ7zHmgEfc+68GOirkEVc
zxo7sGYWgj0dqojrmW2imyulmjXFz5uSzbCCHpQ99avZzxx8jv0drWS2dat0
DlUl6wqPuFZbF+yb8XWQar16rJj2r/Gew+hZy4LHgl4/8BTYHo6z4T0xQ49X
+b4s3kziuhddaupX3GNKZ7I1NWmTxUxFqZkCnVP1iF+Sfq6MItaRVHUlMVj/
wVM+Yi1FZYKamou4pxIX/rHhPNSlIDWfd0NdyhdYS0Fr8L4wzRhnmf/8JnOJ
lyX1rHnHiV8z//rxX6PSTw31aR/Of23818l/ffDc+VMxYr8fXz8SZwKip8TX
ldWXuJ4/vl8QTTVQ/9J8XphPpZ41So8Bx+n3ZbzhRTLdtJIc71pJrg5TY8xs
IR+c3U1++Gia/PKdY+SvvnKW2ukG+eefPCb/8tNXyL/97C3yD3/0Gvmbr98m
P3vzJPnGzUnmpjuTjeTSntXkwu5lLOd7wU/LyNnd9LRvBbmwZxW5PFxProyt
Y4GPIZeG6lKnV0bWkosDq9n5a2MNyen18fUstyc2khujDeTaEL2un96nn962
bxW5uKuSl3tXs9PzO1aRU50vkRMdL7Cc3LaMnr5EjrY+Tw5u+TSZa/wE2b/p
GXK4+dMsB7c8Qw5t/RS9ntpuG3VXzwr6WHXkxsgm8mh2G3n9yG7y4flx8q07
R8mPnlygrrxO/ssXH5Dffu1V8t++Tl+Pb7xK/s9vvsby2689Jn/9xfvkv3x0
h/zmvevkl29fIX/yxmXy09dfJn/82gXqtdPkO/dPkG/cOszy9ZuHWL58dR95
59QI/Vz95M3jg+Td06PkazcOku8+OEl+8PgMu8+3bh5m+fatI5XTG4fJH9w8
Qr5z+yDL9+8dIT9+5RT51duXyPfuHiZvH91N7k+20q9lLbk5vIm8OreNvHl4
B/n8uWHypYtj5PMX95HrIx2sRtW7+oWqbyznT5hmUuTnqXRETx3s3kAgB7rW
U9euIUMbnmeOAk+BraB2COlb/TzzU9/qF1n21L1If16WkeH6ZWSAvj7JOkfO
BHl6ytZUZfdULFfF8FQWex/HMlWensKaHFoKLsvLU/z8Kdk+KLynxNnAYCn8
+du+7AV2imvGxf1TyuQpl+D6A996mW4GWFaG8vFUDFNhDyA4CjwFdSp4vnl6
qiaNjank4SmpsUroKXHtDL+eJrWmRnNfjMpLproNbx+Zg3jjSPvVJAZTmQwt
Mbp2TRJYazNEf2+JwboJBByFEb3Bu0oMP68hef7z/X3izAp0k1hzwuttvRji
KVk9iv8aeAfxrwfvIawb8cG6E1+fEmtieH9ZKh5bPZ+V86msx9q3ZQM52d1G
Lg92kUf76LH1lRnyY+iD++gS+f13HpJ//5PPkv/nF2+Sf/zj++Qvv3yGHs9P
kQ/O0dvObaHH3/Xk5f5V1E0rksD5a8Nrqas2sJrUo7lm8sr+VvL4YBvLK4fa
yevHusjrJ7rJK0c6yMP9LeTe7BbyYF8zeXSgldze20RuTm4kT452kg8u9JPP
Xx4i757tJe+d203eObOLvHlyOzv96MIe8uUrI+SdE7vI9eH15NboevLkQDs1
Qg95bV8HeWWWfr6ZVnJrpIncGNrITu+MbSaXdq8jF3bWUWvVs9Mz3SvJ6a4V
NMuYnc50L2f+AksdafkUsxVzVvOzZN/mZ8jMpk+xzG7+DNnf/AI53L6cGnQ1
ObptJTnWSe22fQ05u2stOb+7gb6mTeT2WAu5M95K7k/R5zTXQ948soe8d3KE
fHhmnHx0bpL1E37z9hHyvYenyB++eo7Vw37+zjXyF1+4T/76K4/Jn3/+Hvnl
ezfI9x+dJl+9foA5C4z1wekx8v6pUXbKHuvMRCVnR1g+ODVI3jrSS1+DbeTq
ng3MUfC1w9cNAWde2EkNurue3B3fQr9H/eSt42Pk5O4u1vsHszDY+q6cPSWa
ymbPXxdP3Z/dRSB3p3eQW5Pd5OpIOzm9cyPZ37KCTDU+R3+WPs0yuvZ5NrME
Tqc2Lqc/J8vozwn1+/A2cm7XZmYqqFUlx8eCo4rwlKudyuSpUFfZe0r1OfOz
VExPQWyu962J4Sn0ytn6id+rxNVUJk+xY3KFp+DxoDbVCzNaX3yO/dzBcTOE
f8wYnhrduJbFdL0sto+h91RthhvXssiu862V1awZF/qWkr4hB1OlfCX0RMbs
lcS+O3gPw17o0BcNn3OurZm9J/g51Gozra8Jvg7imhr+eF3de6Xf9xTdpfua
YvQNhrpIt8bIN/i6yZzDz9aW1ZpkRlJdjiZgvWz077aq1qJygqpWJTOVrp6F
fpCZAB3Be4Kvn4im4h9HrLXIjJIYjD5HWJeFzxX797C/b4Aem0Cw1w/XSvH1
KNNrw3+9JlPpbsvbE93J+1Nm0YHVL7EMrlnGAv14vEvF12asYSWbt4ev7f6t
68nRjs3kSHsjOdS6gR7zryHTTcvJkW115FD7arJ30zPkUMdL5Op4A5ul96Xr
e8iP3jhAfvX+KfI337hO/un7nyX//IM3WP77l++QP7x3mLx7ZBe5NrCeHoev
IRd7V5DzO5eRi/0vkGsjK8mN8eXk9tQqenxaySsHG8ibJzaTJ8c3kksjz5LL
4y+QL97cSb7+YJJ8+xVqtXePkV998Tz5s69eJH/6lQvkpx8cJ995jV7+3gHy
m6+cJl+6s4t8/uZ28pffOkv+7md3yN///B753Y+uk9/9+Cr5nz+6wvK3P7lO
/uFnt8g//fwO+R/fOU9+9s5e8gt6/19/eJj89K195IevTpJv3Rmm/ugnX7jU
Rz48v5O8f6aSd49Tfw02kKOtn2F2AmOAN673N7DcGW4iD8a3kluD68mNPfS6
3WvJld565g74+sEhcL9zO1eRE50vkiNtz5NDLZ9hAXMd2FqxF34MAYdNb/wY
mWn8ODvdu+E/k5kNH2PZt+Hj5EDjJ8n+jZ8gc+s/RmYb/hM9/3FyZMunyKn2
F8j5buhLrCPnupaz89i/eJx+vhOtz5Fjbc8x7+3fRO/fSB+v6ePs/KnWZ8nZ
jufJxe5l5ELXS+Rm/1ryeGIL+exsO3k0Dj2OG8ntQfq17aIO7n6BHGldRs70
wMz9daT7hU+wvb86mKdWCfHzVKzIPKWzleipB3O9BPNw324W8BXY6tpoB7ky
3EYuDbaQC33t5FxvK7VxC7VxG7ky2EruTm2n76EZ8t7paWap3cufZR5ic/Qk
lsraU1nExUshpspvD2Hb+Yb5esrVVCYrhfQSygyFj8lbip/lJLMRztBF8/Be
svEU/xgya9l6aueKl0jXC59hP3/Q6wf1KVWPoKtnRCuprh/ZUM+ic1VsT8E+
kaGeMlmLdwHOcfb1FLqBX2+Es0NkprJZoyZeDqfoKXg/w+cFS8F7wsdTqv1z
xP/xZ+Upfv1aUH1q/uvDmd3uSdd7TPUf8TayfjLZOhu+RiKbAy6bBW6ahYBm
YOuA5j0lHr/jeZWRZMf8OmMpewMFM2HPGq4Fmt2ygcxt3chOcQYD3EblL7Ee
JVuPlJotztXZ4OtRWUpcO5Vau8XVl9A6YmTX83U5cT2YraXExxLXlrG1UPOO
kgWuh9cPX7uKpVYk95turGOeOr29hZzbBceEzeTSQAd1zh7yhcsHyDfuHCLf
eXic/Oqji+R/fv8R+fs/fkz+7ZdvkP/1y7fJ7797l/z8ySk2x+H1uQ5qi43M
E+AMqPHcHG4kdycayePZZvJoXyPLkyNN5P1zHeQr13eSb97pJz96fYr8+ReO
k19//jD55v1+8t3Xxsi//voV8v/9zZcJ+e9fJeTvv0fI332HkN9/nfy/v/08
+Zdfv0l+90f3yT//+jVC/gc9/5vH5H//17cI+ddvEfJ/f5l9/O9/8YT8x1+/
Tsjv3qf3/2Ilf/s5Qv7mbfIvf3KH/PXXTpC//PIp8sv3D5Jv3R0kX7yyg7x/
tpM6qpuaaoh8++4E+f7DOfK9B7Pk+/cOkK9dmSAfnh4gnzszSE+H6Okw+eLZ
Sj5/epDlvaM7yVsHu8lrMx3k4UQz+/rBYFjTuTLQQC70Ul9R61ykrxHkAnUX
nF4Z2ECuDTWy86d7VpJT1ERwuzPbVyXnT3UuZ3UxWMd1umMZOdb8HDnY9AzN
J5ilIOCq/dRf8PGZbS8xW728YzXz1aWda9jHfE0NgnW2q7tWk1vUgw/HNpFX
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
OvUV3mPf4/Xe/Gm0qjyVVpXNpv6Ce2i0Op3GajJpQ20WbVmcsAxzoM0wSHcN
nexfSA+uWUG39gzTK8fHDWttNsy5jV48Pko37x2gqzu66cTKOjo6OJ/uH62n
C5ua6Ma+fstSzFmfPX+G/vath+n3Hz5B33hsn339d9+4Yd/78fPn6fu3TtM3
rx63dSm++sAeevXEZnrp6Li1W3tWmd9uMty0kM6NrLCvr28fsNz3+I5Burq1
hy6NtdLljR3mNbPgGnru4Fp6eh/nUK2iFw+toZcOr6Undw/Q49u67frrJzbQ
s/tW0iNjzXS4vYLGqlPoQEspXRpttKz15n0b6cWjW+iZAxvsfcVM9V/FU8tL
C639JTzlcVRiSjz1+PgK0nZ9w3K6NtZgl9fHltC19Yvp2ugyur7e3P/jTfTc
1nZ6cUcHfc0w8jvHNtGl4QYaMOeotyjbzmvC1lPm2yTcFGeu73g+/O3xFG/v
4in5vtat/hyeQizAVCzSPmL86y/kqdvN5brdc/jn1vmIyzX7c7WpqbChq0Y+
5qmOm7+auQkMJfOimKHs/ejzFPSpAdPnsB7GXGLZRPSzbPwe+/PSsC3bZByN
78vXbPI+9fZTbjkWy5DtvG15HKK9KI+aE1l2nVmK/c/gN/T4qu+zST9Cj43H
1cyV27vGw+V3sb328ybyAyfKiXbVn5I2mV83mb+nx9Mn+55rXhqXBqH5Qta0
AB/LuvYyZ8jjqui8oGxhzcPQEJ/Hv99bVkRdBXl2HJx/m+fWiZ8faGp2O7n3
NpYKxy/ukYlMcoBzm0li2+J43uUD3049cFf+j8vPn4hTbF1q9bxpkzyFGgKT
MZPzc6W/SI5w5dG44uhc939cHN2k8XVJ+ym1OTvS+L2/xFb5vMC1s7SBI+JM
H3OsvifHiJSOhD6/r7w4yeAT6HwnHVcofQa9D7uNYDFoXXbuXNa8SosMFyUM
E+UH54E5aWVlvs2FZ+P6e0MVOdRfNpe6CmdRZ+6XLTuM1XK+TI7VkV4+OkTv
P7SePr25h3796mlrP35yL3393Gp6Yle9YaVSOtKVQ/tb0+lgVzYd7smlk0NF
9MC6eVZ7urJtCV3dvdSP32ujrzw0SJ8+v50+e8Gw2dOb6B++c95w02tE//aO
YaevEP3TW0S/f53+42dP0G8/vESfv36C3r68jS7vaaN9vbU0Vp8wfJhPw/My
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
ETf3kIutBoPvFlueWiuYCr5XXIymZKnQkus3ypi9OL1JP09x51UyluSpYMzH
Efc4qM6P61yAp+A3htcnug+tO+ptpD6lcx0naqfidKaJNCt9f+mx6bic9InG
QrD//6waFK7YSZdNlcPwG7iHENMFnuJ7kHVw5imuPw1/F/XhVlfl0fiiUtrV
XEXHBxvowsYOeubIevrg6kH66asX6O++fp3+6eOn6E/feor+/r1r9Pmzx+jN
s+voyrYGOjFYSvvac6ztbcq2drijgE72ldHZkfn0yKZldGNbE93c3kyvHBmm
9x7cZO3jh3fQD588Sj959iT94NYxeu/iDrq+q5N2NnL/9gVrPaV30nD1TNre
Wm7n2B2uzaWWghnGR0q3FsdSQbyLr8vJfDXUVejz+yY8r3qMBGMhk/FUpM6S
8OsjeTyII2NmMCxla4IXR2tPSG5Cuwxz8RRypwZK0qmvaK5pvzMi2hR4qjM/
JVgyS3FsJLiKl6zrwUJdc2o8pW2ieL+IRuXzlNSmLFP5cX56XDouZi5ok/xn
firxflPlqShbZQbamWQf+TqpBscEppkKXBUev2eap/i8bqqfR/s6663d21ZP
O5sW2fxGHh/g67k05S5aMudOu2RGXlvn5fXG1SRC+y3bK2YfMBFYiF+zac7C
e8xTzFZgL9aiwljA3EDf4nXehpdNuan2PX6WV2TPCbhoRa5hI3Mv8nJ5Tmrw
mo1fL89KoYbMOdZ4nU1yFfMUcxQsZIhQu8d9jiXHCjdnp9jPESMA7R+6P5gk
jqf4feYpji0Bu3jfSU/6zXCf6Ulx3vI5xH/2LINc8XcyB0jXaoAGBb4DG/Jr
MIUed5TPiUuv4s+5r5F5K/CLrJ7v54NiHghe4hm340jGT4Wvav1Wv83lpdai
oVfb9sLXpOU4mPbH8FxJP4x9ai9+LjxGr2ZNImCqbr9+kIwzjNMu4a9o/yUS
I+hzmayXEcbHevUlIjlgkfHf7Mixal1KxlC4fE/kpyLnJ8z/KQ1YSfrJWvvQ
4/+BBcwU1Xckz+m6EGA6z7zYPVlPjX83jrG1PuKqySaPSeoTWl+A9uYxlne/
4jhkjB5zKL8f3Jt+bD6OTW4j+25oU9CkEMsfMaV5yZwtfQ4l90n+i9SvEuO+
WJf9THg9UfciGufp0iRc/vREmoZrX65tve3yk9oLafKZlfczji/Ur+J/x8VT
4T2erH9pLUyeR9fzNaxiFKUhF8wV14iYKPiebIgRksbbIX+M+2Tpu8r6Ml5c
m1uXipv3IP7aJuuBUr+Li7vRvpP+DL6vrvOF/epaEuFxhcfrypfT+pnef9z1
wfmV1i9zfIpDs899sXmGi8L4MealEZ5bqTaL1i3IobULMmlNXQZtWpZjtacj
vfPokc0t9NDG5XTr4AB97ZFt9NkLJ+lXbz1If/feZfrjh1fp99+4Qr979zL9
5KXT9NqZNXRleyOdXllFBzsLaG9bNh3sStB9w+V0dnUVnR4qt3ZhtI4e3bSU
rnKNvv2dVof6+vnN9NkTJ+gXLz5Iv3zpYfrhE2fotaNb6IHhRtq6tMTO09qZ
P5uWp91BS+bebfyi2dSSSPN9rmw7nsfj0y2sz5X485k4auvG8ZS8NnwOe1Wf
Jdsi2VfLPho+AuL1tLYAw+d2G8EMkWtVlhcZz5JsNVWeYpbqLUy1xkwlmYV5
CobXqHMICzkq1fmZ1LG65TH6epM2F0M5zaHNaLZwGeISZYxtr/KRwLOSpwaM
TwPrz0+OF5ImNa7QcrxrZ36TrZ9jYYXhWod1MdAXO/6L07KDWvHSNE/xdeSc
RtRZGTccxX4T38+cP7hs7j2Wo1ZkzLDczG02eEqOJcoxRi8OoywYC9M85XFR
rtWVwEUwORcbXiMmkOcVCDWi9HCOAfat/X3ys42xkcackImYmZidGgzfsIGp
ms255veZl6BHsbH+BM1KLsFTIX+kJ7ENxg6YpxozZ1umkrHV0RzVZF2L2WR5
+mzLVPyatSnuu/h9nnOOzctljTfJeDpmW/OUy6CD6VrXup6bNqmLRMYNlcYE
vQoaFW/PGgDP2c62cUmVvRc3LOKYqzLrD3L7hmdBjvsjb0XmTQbjfX4tAc1X
coxBxvrGxmP78y2EPllh4FNF8yQ9fpK5WZH6MI5YPnluJTvFMRVysjB/g5dX
6D1X2ifg/4g6FMyPOEbJUHIsRvt8OB/SR0U/5vmwUV9ajj9Lf1ryVOQ7vp6i
WQB1lVDLHGwCA68wS1ndReXE69zRSM2mmJwXHafm8q1lHkxYY8/TRzjnirmI
c5zGF1YGtQT5NVgG96lkHhyf5CkdWyLzniMmcrd0/QtZ713HcOo6FwFb+bwB
XpYc4t0XBRGekhwamX/LwU3ymsTlDLt0nbjvefsMxxqlzyXvc5ceheMJ73+3
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
qlf4OC5zzd8tc4GQnynjil36VMBcqu8Ln4ewlrI8NzL+2pWPoK+ZPI+YR9Rt
bo1Txh9qvnXxNL/P15njIjhGAvER3Fby+/z9sO0L60DzuBDX5dm0pJLGF5Xb
3PLR6nwarymijbXFtKHGPJOl6TRSMZd2Li+jU8P19OiWHsM4w/T2g9vpm9f2
0w+fvY9+8/ZDNobvT9+6bhnqu0/stfxzdccKmwd1b2sW7WnJtMsDnXl0qDvf
sFiJje+7f3UNnR9dTFe2NtG1Hc309IEew2htVpu6uqOBvnV9h/mNw/Szl0/S
L146a3mKtain7x2gkz11tLEmw/iwc2nzQnOuDQswT3Vmz0riKRnvn5R/XZBr
WakpJ4Mas9OtgZm0gavsHI2BX4l7L8pRrnqLA2JsRtenkvekN2adnnQ/oo+D
BqbbBKljgYcQpylzqKBfSePtJEf9pTwFpsL7Sf1yQXqQX4Xx9DY1bm/9L58v
pI6HuEaOf1hfV0IbF1fY5dr5YV8MvlnFY4cifwC1MtoK0qzx3NIdRRmBfx7k
3/ttSVCnPmH6zvzsgKmQxy55am1lOH6I/l6Pv8jrCp6KzD/s+4/QoZJzr5JZ
ym2q7qB//jRPce29jpJsy1Ercj1mgUbEpnlXahtaG/H885RAP8E2qHGjt2et
BToM1vm7qJ3JyxUZs+znvOTPQ5YJ/Uqp6cu6qh6jROc60vO6ueYh1XMVxNX3
7hTcKlkJPiwvUceulfOozNKlTemadVrv0H2Wq/8CY+n8KB0HKK+NvFZ8LNxf
Mk958zV68ZuokYx+FkzaajiMjZlK1jHXzKg1O+nr49x47V960Nahn5X5PIjN
4e3auP5NXqpd5/dlXJ+rXifGkwNNuiCsUyPbWD1mhTFmVywP+mHpo8MvxPFJ
jpZtWr9/v4KfpG+DeH8ZG6r7FnxPPgNBTIvKWQvbgYwgRgKxXDJ/X/OU9Htk
u402TOaluu5V2b+BN7XG4HE0avpFtRjJ0WgjZZxaGD/n1VuU10DHisXlwWsW
wvexLj93/X89nwWuuaxz5Ppe5FkXsfuIUcGYoawNIpfy/Mg4V51DxdshN4vj
D6H7BrlaIvYQzObSa9x18tx1BrTGJGMlZe18WetBm96XK0ZTa4yS5WTdPamv
oQ1xHVM0xyfUnMBS7FPDrw5yOpUfDt3XlZ8VjZlMJPn2MgZtonmxXHNIyXU5
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
nnQ74eIpjMXExQ/r7+r5b8LxkzBOyXIV6kIXmH4gPzUwjtfGmLgcN8D9rPMG
ZT1MGZsqxwK87RIRnuJ1qVG5crKmYuDA/tJ0WzeiL2+OzYdaVZJpY+J4DH8g
dw4NJ6bT2pIU2rMslx4da6RXjw7Rty7voJ8+e4h+99b99KcPHib63g361289
Rr989QR988pmevFIFz28aYnNg2J+gjFHMUPd118e1OM72V9Cx3uL6IHV1baW
xK3d7fTCoX56477V9LUHNtB7l7bQtx/fSz98+pRBtRP04SMH6YXDo3RxQzvt
b68y97G5b4pnUmvWNGvwo9uzTV+dm2aXrZlzLEOhD+clxkXD8TEvXgvzvoCH
sJR1geU2rnlhpG8lv4f5VqIWjTOCv96Zn5tkvcXmOSgtMvdgMfWVFNrXrC/Y
WMSCHGorzLXWXpQXzJ8D7QTz57A/bH1iPx9fsqCcUwBze2NuExyza+wd8ZET
mcwzmch0Xj9M+9TNrFewtuFbc/oMa8zOHVkzqTcnnQYMd7G+yrF8a6tyaF11
Lo1W5dL66jwam5+gzQuLafvSctrVMI82La2xdcO4Bhb/D67rxjUWluWmemZ8
84bc9KB+tqzrJk3miMj8e52fp+uXhNfHq3kCfsNSx5/yd+0cSFmGJTLnUkNW
1JZnp0WsPntuYDgWadD9cByap1ibkob7J6yn5xn4gdtW1AKX8XySUZJy4vx2
GGwlY9Pg70vtBG211FRCHQs6SrRunSvm0OO3aM265BoNXhsQx1Nybqlo3YbM
pLwpadwOcXukeUrH98InYT9EjrfCF0WuO/xWOU4OX23QH7+U/aesJxhossE5
Ca+ZjuPUPCy/A3ZF/Uvkn8hxGDAjmAT9q+YRySx6bFP79nKsGPkLcuxQsxhi
2uAb6vgczU06XlnmeeI/ym0Qm+j5X2GcUaA9qfg/8A04ub8kWntCmozxc+VW
yVgdl8XN3wL/AMcrtT+XJiV9P5w3XAPEVnr+ZDQvSI7f6dgtV4yc5ClXTVMd
v4bx6ZAV/DktBNfE6R4TMZWew0dqAq55awLfXDAEuBrXWdZm0PpU8D8cepI8
Phn7BL9SWrT2azxLyXkGdD4amNX6peL5k/MF6JzD5PyEaDyM5K24nLMuEcsq
6+vGjRvI5wDPgtRuMdcS5rDV89/qOYN6S6I6k6wjAV1q/YJyW2cUtUb5PalX
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
SXYCM2hOc/GTi6e0fsYMJTlKMkqrg99C7vO1HVF3osWvIwlGAlvxOrfzHDuy
aWm1jR1hP13Wn9a1DkL/JTquE/oomZH/Opm2F8YfZyb5F1LnkPn4qHHv3Qus
480KeErmQMHfkDVnwUyoN4xYGVcek67BDbbs8HmpTS0xJ7h8HzF/rEVBj2IN
io3Xw/lZopqPzHVCPWfWFvj/on+WdQRRJxCMKOdakjlUet5WPZ+O5ild8wN+
kGtMWfZZrlzFyPi7OFa+rsyRzFbMVZxXwvuU8UNxcz9H54AW/Kdy5yRX6doD
rroUmIdc5k3pechQ21WOO8Pwfcm08hrAFwh0wRjfXo/Zu3JPJHPiOrlqb+o6
DJKndG06WadP14PGcbNJ3pL1zSVTyVoWOt5Pa1Ku+heY30PPByTjX1FnJsw1
Cn1uWT9Y5k3JWvp6fAjtp8wv1TUhIzFHgmddfCTfczGFfnbk+JfmRqmlyxxQ
V70a2fa55sGKm28pZKr4XNzI86Lj7JR+re9byZOu9SD3TGiNuJasq7K+ymNM
0FqhO/MS9VS4/v6W+iprPHfN2IJSY8U0vqiU1tcVBTw1UJJuWYg5SM5/inUw
FT5nnkIsIL/HuVj4PGAroR+CdSNxEua6Dprzu9b4emybjF+xsyRBY5UJy1Pt
OTOotzDV9hngKY5xYJba1VJH6xflGX4xffeCTBqvT9Bju3ros+fvD+ZturGt
hc6P1NGR9nw62JJLh1rz6MxABV1cU2Pt4XV19OjYIrq8YQE9vm0ZvXykh945
O0IfPbqOfvL8Hvrdu6foX759iegnTxJ97zH6+asnLVN97aHNdHV7Cx3rr6Zt
DTm0pna26ZMNN+X+lWl//xu15nyR2nK/RO25d1vrzJvjmYOn2MJ5IsM2ukf0
/3jm+J5CP8jPtc31FWO5sh5Fh59LJU3nh2h9VY7lejXIPH9K5si4dAzJU6xB
ueK2wFPQp5ipQn4KjbkKnJS0D6FJWT6AfiFYyjKSea6tGYZingIfxelOMPDT
srz0wCwn+D56fc5sa8tyZ1lbnjvDMtXy7HuotWC2rYsywnUiFuab57KQNtQl
aHR+Dm1ZUky7G+fRwbYa2ts0j/Y0lNC2RQnaYBhrIOduapr7JWpM/aJhsbs8
8/WSZYY7lqbNtJzk2UzLTWCqQIfy2YpZypqv08AkP0mOCuL3fF6SuU3yOiM2
EGwrmYn1pYCNMlMCzYmXeB/cJG2p+Q2YZamEW4PSmhfM/gfBjMxPS7IMq6XP
sMY6oeYpPacuMxVyqLjOH2pIot5f+LyEOTrgm7hYOxlvZzUhwU6aqWSOktV7
kR/EuVCZKc463dxOYDvWmxolS6WZ/WaYZyPd3BOpoYaG3CrUGbGx/HlhDqat
DeozpayHoY1j+GDNhjl4ydoS4vv4PcTuIZYAPrmO9Qtq+vtM5vXxUT8tjqe0
fqf1PlwrvnYyJgz6BfQa2S9LXQoMgzwkrt+EGHkY18XlWkgcN8HG23DMB8eh
s/F8JKifizwnzm2y+U3su5VkB3NSsiYltSh+zdaaPzeIfYd5c3Jn21qaPAfB
wLxCu0RdTXvvJsI6/ZIXXHnwMm9GM5GuYyfrpWrfXdcIR2wMb6fjlHTe00Tj
y5KBZT/lypnSOejgaeSW6P4vjqNccUhdhdH5AqRvLH1h3LfOuI98WMgNOqdI
znmbPM9vWI/CNZenjMXsLUquaaB9b50npTVBGYfWVahqK4g6M3K+MdfYLxjc
VWMjjn103J9rHmBXPXVX/n9snpqj/pyu3yLnipOatPRjpT4vcxRlrKwcT4nG
0Lo0n7wII+tagTrW0xlbJK5Tcnw25gIM47SDWnWqnnbcPLSyPY9qT2mR9cnG
zSRTyudLtjtBPF5JtBafjG2UbUZcjRsZ9yhjHxG7J+McUeMHMY52TMncM8xT
PI8ta1NgHean4XKe9zTbrnMdBM/SA+Paf5gjFQzFvCSZSs6NCp6CPsWv5f8d
LAs1ZFyjUePPjpvn5oFEAV0sLqVLxp8+lzKLTprn8Jg5X6sN4w3kzQr6L+Yq
jm/Y3lxrbWN9oWUq1qhWVqXRBvP6/rF2Ort6Md3bWkQHmnMsQ53qL6Hzq6vp
gnn/8voGurqlia4b1npmbyu9eqyPXj/VRV99cJA+u7WV/uG9s0Q/vkH0v142
9rpZf5L++NEV+u6T++jhTY10oLOEdq0ot3P/dhfMMscx21z/6R43Fcw013JG
MAdLm2EDto7cHLM01zk3y75G7pKsiRXO9Zj8bITjWtnBHBbctvJrbp+RZwB/
KZx/0zNZx5yXugadrKkQ1AgQ9Qngt7vylaBbSB0KfnccV8ncGG2WpfT+lQVc
wDXH87NDjoLeVJzlaVTm/DBHgY2SYt8S/Fmm8c0zrNXnehbEqfnxhaxX2Hiw
uXdQS+Y91JPF+U8zaE3iThotvIc2ldxDW8tn0MayGbShZJqd32zrwjzaubzC
6lP7OxfQ3vZa2lJfaZ85jv1jbuKYvaWz7zDLu6kh1YtD4/izZZmG3zJSgnws
xBQylzB/yLg2LJkNwZSumhBxtffkNYX2B8N10nlPYCKwEjQnqTvZ/zpB7Qid
/6R1KVfcIP5D8NrXoZidPIaabnl3ecI8C+W5STwl4/x0/hQzFfujdp6s6mLr
p/KYtud35wa1JCbSpXScHWLtrDYUw1OYh8A+mz5TSdOxbmAqZi2wVxB/aBiK
WYqZqikzLcj1WuHXcAjaB9bEfD1c6k2Sp/S8w822rZqdZMxQkq2wLlkrjOeL
joUmx4ZE45LCPKqQATtEnpfU76Smp/On2Dfkvgd5NqxZMFfZGv+leUlxflz7
wXIN1zvyeYpZiecZgUme4nW8j1h6zEcy6Oc08X4QZyFj+sBSrIfZmhP+b/Nn
mqe6S7Ot8X3K/CTvVeYrft/WqlT14aXOInMvwCPwmXUsuY7H0Zyrx99lfST4
gbyu2UVyjSunxDX2LllJztPhik+TOSlam9Q1L135KK78jA7h88ma+eizXXOy
uXhK1ktHnJqupSzrfKGOMup6cb8vdSk9d6/k2bj63JKlZa6U1jWSYjCLkud8
1PkmcfNw2RoWZdEcKjnfDubj5dwoxOO5avNJ3UrmV7FhPl9eYl/INZF1E/Ed
xLTpmpiumvmIhZU8NRFvyHoFMp9I16LRtcu919FrqueF1nUk4+oKxtUaDPWf
sEYoWIK1ao7/ZePX/LmOg9QcJj/T+bL6fc/cebh6Xg2Zz9JdkBzf56rZKtu9
2Bo46v/pY3GZPVf+PQj9iLnH46RUwVDha7CRrZ2eSLFL/h7YCawEpgJ38bZg
L81Tzrrzfp86Znzf3bVldKWyih7ML6SHDWu8WDeffnryIP3o2D4arzbPuPFf
uZ8a8GMb1i8utyy1ZUU1bW4otjF/q2u47ZxOHYXTaHxZkWWpnY0JOtpRYPWo
S6N19NimpXbO3qd2ddOLh4foaw9spO8/vot++fIJ+uP799O/fPMC/fsnrEU9
QfTzp+hPn1ykH72wn1443kmnRippV0uG8YXvMsf71zRQNJP6CqZbluotmmN5
qjMxzfKUZSrkF+Rm+WZ8pbxcu95qmHEqPBWpLaJqzeM11/3rypPzvHh+B8bT
oVfJOui8zjlO4KiJ6tHBJENpjQhxd5KP4uqzaW6KaFe5oS7l0lOkphLwQkGO
NclSNm7P3FtcO4J1j4gOkpMSsaXm99jqsz0LX3sMgP8N35JjT3kcYkNVDq2v
NMuSGda2VcykHfNm09Z5cyxTrZ+XRmvK5lB/4SzqzPE0yubML1NDypcsk3E+
lTWOK8qYQY08h2uG59vb/Cf/d4P/iboX5hjAhVJjkzGMbK78MGlSl9K1KRA/
aM1wHerqQXuSupNkKCyl9qSZSb4GL0lz5UZJjuLfXpg2i+oMp9TMmUa1qfdY
jmJdis9TE+dcVhi/al4+dVUmkngKHCV5io1jKVnX49p/mD+a/VWM/XOsH49R
wHeXPCVj61D3QRq2dcX88evIXAT+8yr5QXNURKdhTSYzJczlSjP3S8osy1N2
TgLzv3l/ks2i+04N2qCWrHA+BrketShLsbaEPgmxJJKXUJsC2/Jncr4T1Ini
2EBvftpcB0ulJ/FUm2IqZkc+ZhkjGc1Vi9Ya4T4VPjj6ZNSrt2Mnfj0Ztkbz
nLbmzKQ2rgWRn2IZCvON8GvUmGWTOpZcRywe61Fcr48ZCjlR2sBazFiNOabd
yfVYn421VB2rqutUevNHeNzhmsvYlZ+r4yAkH+AeieazRecak/m41ncuybMG
/y0ux9zFLVJHkTqTvE64nlLrculusn6f5inNUjIOUNdJDthPmCt2C/EluIf1
/PHcX0OfkjW59Dy1iEeTWpWnueTb8VTJMHE10l08FVczbqL6AJE5VyfQRFx1
siJjwkXhsfHxe/PBeDE7yKXXdaHBP+BL/kxyqNxe1p+W50x+V+8bdRUQPxWd
ayysVRfEWAndC/zH8y6zgeWY4eJiE/U8QrJ2ITQ3MKC3j/yAoQNtsiS5lqPm
Wxl3OJnJ+iLQZmTdeMlSMt/MPe9xWIPHNR/D7ZjWuTr89hHjUJE6PcJ4PIrH
pthk7mmkjRUWx3/O+ff8ZxbzSzHreHlPXv4U57+vMu3+iGnrV/IYG/cJPN7G
fURijjV+zbXo2MBPiOdjhmKW4lg2XkLTQh32oKafmjMS7eUOc96Pmf70oumj
Hp9fQJ9vbyN6/jTRd1+kP17aTQfrsmhd1heopzKbOrgedFkmrVtSTlubKmlL
YwVtayyzGhXP39RbNINWV6bR4a4FdKq/hk72VtOFtTV0ecMiurFjCT1/sIXe
ON1LH18Zs7F8f3jvLP3HZ9eIfnqL6Jev0r/+8Cn62VfO0wc399GNQyvp0FCt
jSXsKZ5hzvcM4xNPs+ejz/ShOE/Moba+uX8OwuuEGD7kQoVc7rHTnIjJPknq
njLfE22zHAuUY0LI20b9KxlLhLmZUH/P5sSIeto6fkxrUUHsWF5GRF+YiJ3i
eEryUzCvbX62t54fspSdr6gouWaE1FhQXx315eCXM3N4Pr3HR0vM77JBX4Fv
Dv0Ex855E2ysQfE8YMMFsw3T59KW2mzabO6x8ap0Gi1PofXFs2lbdRYdqC+i
+9qq6WiL4e1FeYaxMmzdvpbsaca/u4uWpN1Ji+feYZdL0+/yasuZ55zrWEiD
DiXnV9IW/Fe/jp3VoUQOmOSpiFYnahSCQ8FRuM7y+ts8rCzffH5C/Qhpkq9k
vT6X7jSZJcXxKT2KGao2ZTrNn3EX1cy822p3fL/w3GTdPDcR55obv6mrLNfO
S8ZzS60w/BmnT2mdCnX/cH3AWYgJlHX7wFOSoWR9Cmmu+n+yroTVjETNGM0N
2rROBT0LbMdcwfMPMEutqaky/WKRzaeUde/5O6jh64rvlzyFNimcJ21GYFwH
hZeI75N1KVAnDvUmZFwf97nIM2KW4vFQjq3w+uLoGKrmKT1eFOSeZXsW1KFU
9QmhacAXR70R13xetn569gxbT4ZZipc89tFi3mNjtgJHsc7Mxq/xHuL/mLvA
WaxNWfNroffaOViyg5g/1EVn67T1rzze8lhqbsBSzE+IVeV1vjdxjyJ2FTwl
5+DSOpWe1xjrcTFDzhwcwRWSKRBPgbiJDpWvNFlsnasutBx3lvNha55yaVK6
JthULC6vSMf06XgSzQ/a12We0vP5gpsm8r/Dml4F/nydybpFpC65/76siR6X
Rxh3jmROgDx+Oc4BptSanNwu4s/4+WBcZ0OyFOpuwJA/Bt1K1veTfIUYP1dd
RFeNaZmrZr+n6rSBoeTctRH9SMQT8vVgfhpfWBkYuIr/H/6PNOTLQUsDS8nY
Rbz2jkkwVHFusEy6r1TcnOt+1Nvr73jbeNoa2m0ZZ4CxMjnnQ7QGYl5E19Nz
wOm6FFrLmkgbCmLERSy0rH0qTbKV5i/+TpfQEV0aVRxL2XFCjIP4uhRrSlxD
gvOnmKeYo8AGbLw+XJJhLfq+OW+Fob4FloI2BQO3BXGCgqeCmJYCr73jZ5V5
6oEVC+jTjcNEtx4m+uAG0VPH6aPNrXR5UTrdWzWXthRNsyzVWmTOTdFcWllb
SBvqi2ljQyltWlZk9an1C0ybMy+NtiwppGO9i+nBkSXWHt+2nF4+0kdfPz9C
3766iX7+8kH6548ueAz186fpT995hH766kF68+J6un6gjY6OVNPaJebeKf6y
8fn/ihrS/ju15t5h7o+51pgzcZ4m4qmw78d4VshT3v0bzXmUcTcY85IxpHrc
Vo5BoLaM1655vyv9Cel7QI+yNQ4yZlvfmQ16hIzrk/F1Qd6/8nenwk9aj0Jc
IDgKGhObjEOz804Zf5n9ZF7Keucy3g/13yTrMUt5GsrciEkGkFoHnwM+TvZn
hiq5fkuhfUY21SRobF42rSmZZW2Ducd2LErQoYYyOt1RZ1lqt7n31pXMpP6s
L1Jryl9T48z/ZutS1Kd80bIUc9Qyw2cNhs/YV78dngKP8BJxbvw6Kb5RvEZt
9yAnTMQ3ai0KuVfyHnDx1ETmqnsuOUlzk475k7yIfeHaMENVTr/DGr/m+6Wn
vIiG5leYdmAeDdeWU39VMXWY58Bj8VSvHgczkVlqngrz0qL6FHTB5Tlh7Y/F
adOCvDXkILlqPsRxFJuskbdCxuX5+0NeldSTw9ym6HzKkrPwGerwBtyQl23n
dOM5snm+7CGuy1maH2Eq/n4wd4rv90r/V2pWOh5Qx+0hTwrzT4GZoFHpfCmw
l4zVl3MgyXGlaPxHMk/JOYd5Tjtr/rhRh39OcG5deTauujyBL2nYiI1j83gJ
bpLG7CTzp3id32OTfMWG/XF/zrzUbedgyQjWwVj8HrQpW1ewNNvmS7HuJPWo
oI6KbzIf0HKVqE0n4/w0y8gcq86CTNJxTMk1uqIxXnE1zSQLu2p3waT25GIo
HRuotaW4Guwy9xy5cRPVnUiKB1JamSveTTKTq/6AM8de6FNgC8kOkhFkzW8d
7+eq8xtoQCIHDjUsdc6JzqOaiKsiepVDo0M7ET+XQkboy/s6FB+nZIqQHzz9
CeeF16X2BKbS85/K8yXr/el69HKOVH5Pzmsr4/tknJ6M8dPzL0tmAgPjM81S
Mk9Os7Osp4Fr7q1HY5Fgrvtrolp5rvEPtO3R2hhRDcrWNvfbbtnu63n3dI15
qetJ1nLNL+uO+3bXs+hyGLehLnN9jrxVmR+maw/KvDkdmx5cR19PQq1zjlka
LM2wWgt0KGYF5gTWqVizYqYK2SHd1vdGzKCLp8BSEaby7x+Ol2Ge6jF9HhvH
1LSZ/3d8cSX9+OIpovdeJnryEv1kWxtdrbyHrpTeTW+3l9Gltnm0NXGnHaPj
2IcVeTOpr8r4r4sKDU+Veyy1KI82LimgdbXZNFqXR1uWldJ9g/Ppsa2t9PKx
Hvr40U30sxf32pg++vwm0Q9v0O+/+gB9+7EtdOveXjreN49W1vG8V8a/yjH+
U8ZdQUwI93M8fhjExfusCeNzyEyF+Mi4epkybw/3oNREXWNviP9EPjVq+nK7
xp/LGmRoL4O4Id+nYH6y+U+Gn6xlpHoG5slNrtUWZ9r/jbOJ8mMQ0wWW0jwF
ZpI5P8xSiFFLijkU8xNJvzzM4ZmYpzj2btmcL1J/3l00Pj+T7q1No13VKbSl
9A4aL/wCbSv+H7Sn8k46sGAmXegupgdXLqBjHczxJeZcs54xnRak3EEL0qZT
3dxptGDOdGvMaAuMz8w6jpdv5OljC8z/XGjOBS+l8XtsNtYwNyPI5wrm3lI1
yaHHBTXvRF0N1LoLYgWZ0/x1WRtQ8hOMGQpsZ+s7KF5yaWZSl9LXPKhjIeoy
Rn7fzxNbkjbbsOcsWpQ6k+pmT7M6FC/5M57XmflpZEE1raqrouGaSstUfL/w
/uVxMAsxE7G59Ck8W7ouRWC5KdaYxcIaINOTOEnX04vTpVC/G3lXMh4QvCV1
ZMz7KOPypGG+bj2XZKBDm7a1OSvd5lGxVsWfMU/1c3wA16MRWhfvT/bRPF+4
HNPBOve3oe+YHYnr4LYMdYbkfL5yvl6pU/FYp2YujBN6vJWS1M+jzo48B/9v
e+cWG8d9nfHXvhdNndiWJUuUSIoXcZfcXYp3ipR4v5OiJF5kSdTdknWXIlmx
pDiNbVm2Y8NObKc24joJkhRw3Sat26IXp1cUfWkLFH3oQwM0aJCnPBfB6f87
M9/s2T//syStWHZUPxzMcrgc7s7OzpzffOd8hxxF7R3zwTXMnAjWBCpvxTm2
9YO2fTo+Z2Eurs9TZCTLStSg0D9FLQpsRY4ia5GneI/UalBcZ3uqlKWQU+zk
7JB8UtMX4imGz1O+H0VID6IWo3MxArM3S2t+lveOl+OptN6N5LmdxZmLIT8K
+5ifm/WeC7GV3RZ7gixP+XyWVvcX1L7KhM+PSQ+T1bLi+nzoMQjoM1gy/7d5
ue9bV5Jfe/vU7nd6uJ+Iax2tNlWul8zXo0K1gv7/w3taiacQSa9XrM9A17k2
NagBXefiSK/yURpbWH6x2p2/n3yGWSn82jXLBHbeEn3USrwBDRPz80SQ46w2
FpozFpq7ReYqbjs6XnBuLgnvO2c9QVarJ9tzPZa8z291mpC2lDb323r9+TPL
LZ/6+lbaXL5Q0L+HOn+IrxC8P8Xn854Vf+/fN0rzkbfnP5+nWIMXeUZELABW
spoUAjyFsDoV9CkE+6boO8FeK3CVDTIVzxPs3QFLHWpDjU6rxmt7RuQfnv2S
/PTLF+RPZ/vld9sfkR/N5EXeuiXyw2/I+2f2yvnsQ7I7hz79GvVTW9pVkHPj
HXJ1zy65Mt2h8dTeXrk0HrHUjX198s4X98k/feuW/OcfPiM/+ZM78t9//pz8
/MOX5CcfPCt/981T8ta5frkxvVXOD9bI2f5qOdqPOUWR/zWYrXhuiZgKNfDw
azqDuR8uwJsIZdKu7Io8RW3Tsr89Pn0vJs4S4Jw9nhdtLTd+j35qzN5gXzWY
FfkEvZfBUtChprI16hM3nXW5X1NDoh1Z/cP2t9hZQmm1WJZhfIYK9cPYea8l
DBXgKTIVeQqP/d4tzc1jLrQ1fKW+clkZzzUkYevV8PrgxXJuqF39I87vysiV
ri1yradabg1slRd3F+T1+RZ5+2CXstTtiXo517tFjm5/SPblN7p8eINMNlZq
gKe0j8dxgYZXAweWwmsZdY/JThPu/yP4MwLeGLPKT9s1WAdZrlaOPnc2wE7U
mOh7pz1G+eVRwlYxdyV+hp7uFKrH848B+xzbk2VZCv93srFG+YkMijo+xEB1
ha4/0O2uu9NjcvPAvFyb2608BbbCcYt9DBbDNko9D+sTDTCkT1F3sf0kZCz1
S49ZjPpUsTawVgPfJURyfyLWeenDmMZT+D76Hud4TP2EfjFkHupIaTzFIFcl
POaYAhrVgmMp9GnaHiz9e3d8wU90fyGryyW3/rD7vI60Ro/3u++MhqeX06+L
9x1x/mL9B6+T1rPP3ue0vOTzlL0XSJ4KaVQ+Tx2Ie0LpYU+eYv3DannKX594
wNGHz/HSgVhv8rUnnS8fsxQDP1udijzF7dn5Ur6XoL9e84KeZvWhAEOB98lS
5CbW/flM5ft8hzQen6fUO97kF9Y7pFhP0ZSan/maBGvhyvfDF70r7Px4O0eW
6+gNYz3PQzxFJvD9kv05SzZsLZyvVZbjKctQq+GpYm4c+fyyh8jWulltxvZN
295pq0FYfYH/lz4Fvi5l+8H82kqfpWz/WdFHbHlv42p4Kvm8Y9YAU1GbYp8T
OaL0/Rdr92w9X9E/Ppf8bLmUbEUu8SPZtpfPM/w5P5zDZtnOzsgK8ZKtL7S+
8JazWHvo1y0WNbr8Mp56rDkjfo2trxWn56Fh73Ysmaf6vn2+55+vP9laSdb7
+fpSOd3b9+mwHh221lJ1QhNW4+f9Kav/c2YEmYrPPRC/R8uJdgZXiKcYidbo
8RTySLAA2Ql1fwgwAtdZpmL/lPX1w3bITr63HzmLx3kyD6S9JapJif2KTvcX
5Gh3gzydqZD35sfkZ1+/LPK374r8y+/LL997Tl6f6ZZT1Z+Tyfqq6N5uoUoe
29EoZ0bblKegT6Hm7/osZp10yjtPHpf3b1+Rv/nml+Q/3n9F/v29F+XHb16T
73/lpLx99TG5c3RaNayj7ng67HLy61O75MnJnerBjvuHewq1GvRoQE0+XvOx
7g73vt33v69bzuzslNPuOn7KsQveL957ch/BO38U7+Wk81Q0d6R4/bPXA/IU
HvP30Kkwo/D63gn54syI8hSeh9/bfg76nCPnS/JBsFSu6HtN9gn5rvmcFYpy
PGU5irFanmI9n+39ofaizJD878hHYqqQiyLnOKUxK5OZjMZYbZ0MVVXLWNVm
2b2tVg7mt8ppd3w+OZSTm+MtcmusUa721cjFngp50rH1M3ta5fn5Trl9cKd8
dbFbrs6680R/nXsf1Y6RNsqIO04Rw5mtMuIYdSzjOC2bcXzWEEd9pNvEOtOU
2w+Tbn8gJtxrRkxpf1deY09rxE5YRo8Ly/Zbml+47xte9HQPsxR5qsRvwgur
Jdk+On9Wsq0Z9Pvu/PXkJz5WjspC16tSDQoMNd5Qo0wFRkIdH3QoMNSZ8SE5
sqtbOQrcjN+DpdSrI7ecn2wtK2IlnrJe4OV4CvcjuM274Sm/j8rnKbCC7XWy
WhJZwmeqpdhrnXVvOF+ph2ihSZbMNhGYdQeOIleBoWzgWo2wHhVknOi8Vso/
OKfxfBbiKV9/KsdT0d9nUvLzYh0keQochblg2psLlorr/crxlJ8z2/Os5SnV
pMBOsbZEL4pDhq1Wy1OHYybzeYpefuQp9gJwneYHXTmdaw9OQj2q7ZnyNSnL
VL4eE6qpC+oS3sxlf66YZaBSv5DleZzlKeZvfv3fsro5U5Pp61L+fCn+PvRe
OFcsLY6bWjif4eyxsRqeCnkcluOpKD/OlISvcRT7iXLBsP/P6rnF72nc42Vq
FdN6p6xOG5p9arXbUA3ZangqeW2e9wQZilqdDe4H1kP6s3v99dyura9bru95
EdBHrP8EI5nNbfQy6x9iw9YAhuZeWc9C/3c+HxaPl4ilkscp+tRKsTJ7hb0Y
bB0ffQ4tT1nvDlu7ENL/fGbxeSukS3Hb4KjjYNuYpyxH+T1SVp8iT/G5/v2+
tEjjKbJUGk/Rk4K+FJatIo2qqE/ZGVO2nwqzqhjkDH5X2L8DltrfUnDXgzqN
hcIWx0E98l93boj89R+J/Pgd+cXbT8mHF8bktYEKueny2HP1DypPTW2rVv0I
vVRPjLTKpekdUa3fTKey1IXR7fKdG6fkH995UT5840n5g2dPypsXpuXWnPus
d9a469oWgQ8f5usuue//MXf8wI/j2kSvzpTHtRP9v3hd6mnn8gq8VvQjqKbm
8pST7hoOjmKQK5Ma145Sz51inXmR90M+/rz+2Vo/y1Y4158f65On5qbkxvy0
zifEOjwPdX9Fb+PirE8Nw1OaB8b1fpanrIdamhaRVs8X0iYsT1mGWnD7joH8
2A+fp2zfFmvZklmtifbTFPmcby84dsjLdD6njDNaVyeD1dXKU/sKmAnQLeeG
+uXykDtO+tu03wlxfbBenpttlVcO7JDXj/bLa0cG5OaEy5E6N8p842/LVMPn
NCaaNrj/s1lnTk031+hc2lG3T/G/wG9T+SiKfuKRHjXu9g0Yatod/zNufyDA
U/RlB0PNd7bKYne72y9tqTwVYtpklm5zNqnrY22f5Shfn/IZqpwXie2jszwV
8gK021jmE5jMG65VlhqqdUxat1l5CiylHopuf5wY3CnXF/ZofR8e4xjFehwf
0OqW+Z9w3lZzxEL0qSTrpPGU9VyYN/7gPk+h1i/yqYj2neWoEE8xVstT/H1y
vyn2l/DnTvlaFfmCy2Q77jyFc9Z8zn1nMvUlfw+2OrGjXeOI+64ttRVUm0Ic
dduARsX74OzfLPrc0H90uc8sr6H08rsXPBX14K6Np/yZsf59K+aNVp/yecrG
WvSphM9M75R//ef9U66nPoX+KdT5gZNY78faPxvosWLYHHlNdV4mz7D5TzEn
Wu6BEGIqy1N4nMwP8bwLfP8C39vP7/3Ces5L4r1Gn6lsbYfVZ9I4ITTLNuRz
dy94yv4csUNRk2Lvlf4cMy33rd/vyO+vPQZCXMp9iP0J/Q9LWyPo91aF3r/9
fyvVmvmMhKXV6ehRYX+2upP19Uvjl5L5UgHu8ev9fJ6y/T7khURzMSzmz1q2
2iKD/wfrLSfytdrt8W/tkseLjRBP8Z5Fuc9gJa0q+nvPfyH+7ttaPZ6v18pJ
K3nLW561n4H1Wzwex0fhKT7/oNcTtVae0mMu1o04S4rze8FKZCnUsZ3rb1XG
QOAx1od4ittjfZ/PU4mXesxTiT9Cc07r+tF3gpioeVCeXhwR+cFb8rNXn5G/
mmqW93qq5Lst6+SPB2rle4uDcmdHfeJbC33q0E7Hf8PNcnbMvdax7Rpnh/Lq
R3FrfkBeODYjzx3aKZfGMu51bJGDretkLrdR9jZukLmmKnlse50sNTuG3u6+
cy6PPd/fq58PPgv0aEUetdF9PvpHMZ855q7Nx931mkvqfh+Fp0p9IBsTPyZq
VdoXBU/OyQG5Pj8ll3ePqH8zrqW4Zz7RUKm99HytuH+ZcFN+WzJLijV/GvmM
Rjmeskx1tzxluYBcZfUp9lD5/n7UP8hPfv1Z4oEeMwRqQVETCk+92ewmWcyv
c8f+Frk10yQ3pxvlyuBmOd31kJzpWC9X+6vl6emCvLDYLc8f6pXnHEtd39sm
Z4a3yf4ut53CRhlp2iTDjRtloKkyinyVDBaqZdQdgyP5avVGQExmHavAozru
AWK/FGfUTrVGMdkCrsroEj9jdi3mDJMvuV+SfqgU3/BQKFeaXinyE2YyWZ7C
MsRQyaypAEP5M798bcrnKbtMerLg/+B+Jkft2PSQalTYFhkJfWKPdbVqjd9S
b2fCTeQpHCtYYj8z1Mvd8BT6nvzZaT5PkaEsS83HHtkIchkYqshStcX3eJc8
Zb3++Hvro06WYtDnPOTzR96iv596W8DjLp7JMNeUSfzUsQSHHO9GfQl8wrpc
ztHhzn/uHO+YBLr7hYEeuTAM798+nQeP+fAInL8+jTwFjlorT/nag+Up1jTp
7wI8Zb0o/P4pBv0pfL8/v38qTZ+y9X5au+Kuuaz3o3+f75NuHyezqQM1XGks
ZZ/H3MnW7pT6R0czbzCjFYHHofvdzNNYJ2p957BM8x+zTGM1Njsvi3NnqUPR
Rz2t3s9np5BfoPU8LOfnfq95ivMm1SM9vteBddyf+F/+3BWrUeGYxuxqzFzj
LGs8Rk0LZrFxycBzizP3mpf32nkcfK95qhw3WT8P65Pu1+aV6EGBer9Qzw9r
YC3X+Xpiqa5Y9BkhK+F97XfXYbwnMqHPZ5anqE8Ve+7SeWo1+pSt77Pn11JP
kewynqLHoT+T2O8vCvUgrVafWim4DfDRR+Up20e11v6ppK8u9oy0c6N8fYoc
dWGwXS4Odcil4U65MtqtS6wHb4V4SuvcjPcEawERZC36YiY+wbmszpucclwz
kd0io1UPONapkDfd//lywyZ5YeNvyHda1su/HRmQX754Tn7x7a/J1x07zWQ3
K09Bn0L/1MkB99qHCjp36vF+x/vdte4zd8dpV51qUMe6N7nXtd6x00NyoOVh
d7xsVqaaz1WrDx94CnGk1W2rq00/B/jVQ5uy8z7IU9q77a7T0KfAUaiNOeje
E9hMI66TCdU0kKdsjsG6isSTEsd5fF8N94hwnsO579RwjzIU+pHBTv4sUtZ6
JHOLXH5XMjcqzi2T3o9V8FTIVyDNYyLEUaG+qRBPlXBUHH6+zlmtCPIU+6Mw
74g+EJOZLcpU+1tqXF6TdefSOnmir17O9m6SE+0PK0tdHa6U5/e1yhvHBuSN
EyPKU6d6N8v+/AMyk/ktjamm9Rpj+c0y6o7LEE8hEs9wZalssl8t72EOk2Wo
aXdcMHSGFJgKvW7umFp0eS2Wfs+aZSnr9W49IrRnzNT0lYtympTVpawWZcNn
Kb8PyzIUe6TAUGApBP4OPXEn3TX9iLtuH3I5PX0fcSwkc7ccL1lvSO0hi/um
4FuBJev9yED71F+6MWEqhM9T5CcbczFLpfFUVE8Y1UJS770bnrK+FHheCV9B
s4J+hd4qj6usR4XVsBZi70CtH4x5ivV+tn9Kt1HIqi4FlgJToXb54mCvXBnp
k2vj6A0fUKaKZpH0yDn3OSFvux94yp//aH3trHZFPwrG/PZa9UvnDCoGNSow
FINeFL6POraz0FKXzOzVa02uRgPzGchVdnaKelV0QndqTO6X2b4p1vhxnY00
P4pyc4YO6X3A5mX+0aU/Y/Yp+kp2aICp7AxXP9cGT+D5OJ4QeIy/sUxVUj/o
aUT+a8fvWJNH9gn1T/l1a/bzJU9Z/yffC9HfX79uPMV9D/ZELoH51RcnBjRQ
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
LrAOS/qqY6nPWSNP/R9Pucjz
    "], {{0, 480.}, {852., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{852., 480.},
  PlotRange->{{0, 852.}, {0, 480.}}]], "Output",
 CellLabel->
  "5/13/20 20:12:48 \
Out[362]=",ExpressionUUID->"27855067-edd4-42de-a204-2049f37a411d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"inst", "=."}]], "Input",
 CellLabel->
  "5/13/20 20:13:31 \
In[366]:=",ExpressionUUID->"e49874db-3108-45cc-b6a1-5dc76af3d926"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inst", "//", 
  RowBox[{"branch", "[", 
   RowBox[{"ManagedLibraryExpressionQ", ",", "ManagedLibraryExpressionID"}], 
   "]"}]}]], "Input",
 CellLabel->
  "5/13/20 20:13:42 \
In[367]:=",ExpressionUUID->"2bb14fcf-6cfd-4417-b99a-c43d41dcfc77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "$Failed"}], "}"}]], "Output",
 CellLabel->
  "5/13/20 20:13:42 \
Out[367]=",ExpressionUUID->"61438d73-441e-409e-89ac-aadd143faf89"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: using the wll-interface (failed)", "Subsubsection",ExpressionUUID->"ea323db1-7a17-4eae-88de-c3d05ea4ec2a"],

Cell[TextData[ButtonBox["https://github.com/njpipeorgan/wll-interface",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/njpipeorgan/wll-interface"], None},
 ButtonNote->"https://github.com/njpipeorgan/wll-interface"]], "Comment",Expre\
ssionUUID->"9e264e35-1065-4223-b8b6-4be1d779cd63"],

Cell["\<\
#include \"wll_interface.h\"  // include the header file

double multiply(double x, int y)
{
    return x * y;
}

DEFINE_WLL_FUNCTION(multiply)  // defines wll_multiply\
\>", "Program",
 CellTags->
  "wll-demo-src",ExpressionUUID->"28a85604-2bc3-45c2-90bd-b11dd43998fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<wll-demo-src\>\"", "//", 
  RowBox[{"pipe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pipe", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Cells", "[", 
        RowBox[{"CellTags", "\[Rule]", "#"}], "]"}], "&"}], ",", "Last", ",", 
      "NotebookRead", ",", "First"}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"CreateLibrary", "[", 
      RowBox[{
      "#", "\[IndentingNewLine]", ",", "\"\<wll_multiply\>\"", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"\"\<IncludeDirectories\>\"", "\[Rule]", 
        RowBox[{
        "{", "\"\<D:\\\\gitrepos\\\\golib-interface\\\\draft\\\\inc\>\"", 
         "}"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Language", "\[Rule]", "\"\<C++\>\""}], "\[IndentingNewLine]",
         ",", 
        RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-std=c++17\>\""}]}],
        "*)"}], "\[IndentingNewLine]", "]"}], "&"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "5/12/20 22:48:06 \
In[78]:=",ExpressionUUID->"991377c3-193a-4573-a985-7de15e1a5d18"],

Cell[BoxData[
 PaneBox[Cell[BoxData[
   StyleBox["\<\"C:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\
\\SystemFiles\\\\LibraryResources\\\\Windows-x86-64\\\\Working-flerkengen1-\
12108-10468-22>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\\\\\
gcc.exe -shared -o \
\\\"C:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\SystemFiles\
\\\\LibraryResources\\\\Windows-x86-64\\\\Working-flerkengen1-12108-10468-22\\\
\\wll_multiply.dll\\\" -O2  -I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
-I\\\"D:\\\\gitrepos\\\\golib-interface\\\\draft\\\\inc\\\" \\\"C:\\\\Users\\\
\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\SystemFiles\\\\\
LibraryResources\\\\Windows-x86-64\\\\Working-flerkengen1-12108-10468-22\\\\\
wll_multiply.c\\\"  -L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1 \\nIn file included from \
C:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\SystemFiles\\\\\
LibraryResources\\\\Windows-x86-64\\\\Working-flerkengen1-12108-10468-22\\\\\
wll_multiply.c:1:\\nD:\\\\gitrepos\\\\golib-interface\\\\draft\\\\inc/wll_\
interface.h:8:10: fatal error: cassert: No such file or directory\\n #include \
<cassert>\\n          ^~~~~~~~~\\ncompilation terminated.\"\>",
    StripOnInput->False,
    LineBreakWithin->False,
    LineColor->GrayLevel[1],
    FrontFaceColor->GrayLevel[1],
    BackFaceColor->GrayLevel[1],
    GraphicsColor->GrayLevel[1],
    FontColor->GrayLevel[1]]], "Program",
   PageWidth:>DirectedInfinity[1],
   FontSize->8,ExpressionUUID->"bb671f79-6430-4297-b72c-7bbca8f768b2"],
  ImageSize->{500, Automatic},
  Scrollbars->True]], "Output",ExpressionUUID->"2448491b-58fd-4101-96dd-\
166d2dc2a65e"],

Cell[BoxData[
 TemplateBox[{
  "CreateLibrary", "cmperr", 
   "\"Compile error: \
\\!\\(\\*RowBox[{\\\"\\\\\\\"D:\\\\\\\\\\\\\\\\gitrepos\\\\\\\\\\\\\\\\golib-\
interface\\\\\\\\\\\\\\\\draft\\\\\\\\\\\\\\\\inc/wll_interface.h:8:10: fatal \
error: cassert: No such file or directory\\\\\\\"\\\"}]\\)\"", 2, 78, 19, 
   19048858217763697533, "Local", "CCompilerDriver`CreateLibrary"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "5/12/20 22:48:06 During evaluation of \
In[78]:=",ExpressionUUID->"57e4eae9-6457-4bb1-9127-74ac70dae63f"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->
  "5/12/20 22:48:06 \
Out[78]=",ExpressionUUID->"7af2ae35-0946-4dd3-8fa8-e335628bd1ee"]
}, Open  ]],

Cell[TextData[{
 StyleBox["wll", "Input"],
 " requires ",
 StyleBox["cassert.h", "Input"],
 " etc., which are not included in ",
 StyleBox["gcc", "Input"],
 "."
}], "Comment",ExpressionUUID->"cabb180a-f1e1-497e-b16d-e0eb8fb6b804"]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: using the LTemplate with GCC (failed)", "Subsubsection",ExpressionUUID->"3b60d883-d272-434e-98a1-6ccde4d72b27"],

Cell[TextData[ButtonBox["https://github.com/szhorvat/LTemplate",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/szhorvat/LTemplate"], None},
 ButtonNote->"https://github.com/szhorvat/LTemplate"]], "Comment",ExpressionUU\
ID->"fd37b6ad-80fc-4c56-bd5e-ddb8afb15997"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "LTemplate`"}]], "Input",
 CellLabel->
  "5/13/20 01:12:21 \
In[7]:=",ExpressionUUID->"45cb4d23-7d7d-4395-81b8-843a0d52abc9"],

Cell[BoxData["\<\"WARNING: LTemplate has not yet been tested with Mathematica \
12.1.0.\\nThe latest supported Mathematica version is 12.0.0.\\nPlease report \
any issues you find to szhorvat at gmail.com.\"\>"], "Print",
 CellLabel->
  "5/13/20 01:12:21 During evaluation of \
In[7]:=",ExpressionUUID->"56bd0474-750e-46e5-b064-f89ed00a5ad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\<LTemplate\>\"", "]"}]], "Input",
 CellLabel->
  "5/13/20 15:21:44 \
In[179]:=",ExpressionUUID->"82278874-0528-439a-8261-e4ca6bab1c43"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\"\>"], \
"Output",
 CellLabel->
  "5/13/20 15:21:44 \
Out[179]=",ExpressionUUID->"0a3ab520-2d0c-48f5-a7fa-db5d1be7e995"]
}, Open  ]],

Cell["\<\
#include <LTemplate.h>

class Demo1 {
public:
    // basic example
    mint addTwo(mint a, mint b) { return a+b; }

    // trace of real matrix
    double trace(mma::RealMatrixRef mat) {
        if (mat.rows() != mat.cols())
            throw mma::LibraryError(\"trace: Square matrix expected.\");
        double sum = 0.0;
        for (mint i=0; i < mat.rows(); ++i) {
            sum += mat(i,i);
            mma::check_abort(); // allow for user aborts
        }
        return sum;
    }
};\
\>", "Program",
 CellTags->
  "LTemplate-demo-src",ExpressionUUID->"57984d4c-9e1b-4bfc-ab70-8f2a0892697d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<LTemplate-demo-src\>\"", "//", 
  RowBox[{"pipe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pipe", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Cells", "[", 
        RowBox[{"CellTags", "\[Rule]", "#"}], "]"}], "&"}], ",", "Last", ",", 
      "NotebookRead", ",", "First"}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"\"\<Demo1.h\>\"", ",", "#", ",", "\"\<String\>\""}], "]"}], 
     "&"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "5/13/20 16:10:01 \
In[195]:=",ExpressionUUID->"fa527f31-71fc-4bbd-8d80-a7db323e47fe"],

Cell[BoxData["\<\"Demo1.h\"\>"], "Output",
 CellLabel->
  "5/13/20 16:10:01 \
Out[195]=",ExpressionUUID->"e0fbb1ec-07a1-400e-9fc4-127888c5a4f2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LTemplate`Private`transTemplate", "[", "\[IndentingNewLine]", 
   RowBox[{"LTemplate", "[", 
    RowBox[{
    "LTemplate`Private`libname_String", ",", "LTemplate`Private`classes_"}], 
    "]"}], "\[IndentingNewLine]", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LTemplate`Private`classlist", "=", 
       RowBox[{"{", "}"}]}], ",", "LTemplate`Private`classTranslations"}], 
     "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"LTemplate`Private`classTranslations", "=", 
      RowBox[{
      "LTemplate`Private`transClass", "/@", "LTemplate`Private`classes"}]}], 
     "\[IndentingNewLine]", ";", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CComment", "[", 
        RowBox[{
        "\"\<This file was automatically generated by LTemplate. DO NOT EDIT.\
\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\>\"", ",", "\"\<\\n\>\""}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CComment", "[", 
        RowBox[{"\"\<https://github.com/szhorvat/LTemplate\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\>\"", ",", "\"\<\\n\>\""}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\"\<\>\"", "\[IndentingNewLine]", ",", 
       RowBox[{"CDefine", "[", 
        RowBox[{"\"\<LTEMPLATE_MMA_VERSION\>\"", ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"100", " ", "$VersionNumber"}], "+", "$ReleaseNumber"}], 
           "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"CDefine", "[", 
        RowBox[{"\"\<MLINTERFACE\>\"", ",", "3"}], "]"}], 
       "\[IndentingNewLine]", ",", "\"\<\>\"", "\[IndentingNewLine]", ",", 
       RowBox[{"CInclude", "[", "\"\<_mingw.h\>\"", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CInclude", "[", "\"\<LTemplate.h\>\"", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CInclude", "[", "\"\<LTemplateHelpers.h\>\"", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CInclude", "/@", 
        RowBox[{
        "LTemplate`Private`includeName", "/@", 
         "LTemplate`Private`classlist"}]}], "\[IndentingNewLine]", ",", 
       "\"\<\>\"", ",", "\"\<\>\"", "\[IndentingNewLine]", ",", 
       RowBox[{"CDefine", "[", 
        RowBox[{"\"\<LTEMPLATE_MESSAGE_SYMBOL\>\"", ",", 
         RowBox[{"CString", "[", 
          RowBox[{
          "LTemplate`Private`fullyQualifiedSymbolName", "[", 
           "LTemplate`Private`$messageSymbol", "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\"\<\>\"", "\[IndentingNewLine]", ",", 
       RowBox[{"CInclude", "[", "\"\<LTemplate.inc\>\"", "]"}], 
       "\[IndentingNewLine]", ",", "\"\<\>\"", ",", "\"\<\>\"", 
       "\[IndentingNewLine]", ",", 
       RowBox[{
       "LTemplate`Private`setupCollection", "/@", 
        "LTemplate`Private`classlist"}], "\[IndentingNewLine]", ",", 
       RowBox[{"CFunction", "[", 
        RowBox[{
        "\"\<extern \\\"C\\\" DLLEXPORT mint\>\"", ",", 
         "\"\<WolframLibrary_getVersion\>\"", ",", 
         RowBox[{"{", "}"}], ",", "\"\<return WolframLibraryVersion\>\""}], 
        "]"}], "\[IndentingNewLine]", ",", "\"\<\>\"", "\[IndentingNewLine]", 
       ",", 
       RowBox[{"CFunction", "[", 
        RowBox[{
        "\"\<extern \\\"C\\\" DLLEXPORT int\>\"", ",", 
         "\"\<WolframLibrary_initialize\>\"", "\[IndentingNewLine]", ",", 
         RowBox[{"{", "\"\<WolframLibraryData libData\>\"", "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAssign", "[", 
            RowBox[{"\"\<mma::libData\>\"", ",", "\"\<libData\>\""}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
           "LTemplate`Private`registerClassManager", "/@", 
            "LTemplate`Private`classlist"}], "\[IndentingNewLine]", ",", 
           "\"\<return LIBRARY_NO_ERROR\>\""}], "\[IndentingNewLine]", 
          "}"}]}], "]"}], "\[IndentingNewLine]", ",", "\"\<\>\"", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CFunction", "[", 
        RowBox[{
        "\"\<extern \\\"C\\\" DLLEXPORT void\>\"", ",", 
         "\"\<WolframLibrary_uninitialize\>\"", "\[IndentingNewLine]", ",", 
         RowBox[{"{", "\"\<WolframLibraryData libData\>\"", "}"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "LTemplate`Private`unregisterClassManager", "/@", 
            "LTemplate`Private`classlist"}], ",", "\"\<return\>\""}], 
          "\[IndentingNewLine]", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
       "\"\<\>\"", ",", "\"\<\>\"", "\[IndentingNewLine]", ",", 
       "LTemplate`Private`classTranslations"}], "\[IndentingNewLine]", 
      "}"}]}]}], "]"}]}]], "Input",
 FontSize->6,
 CellLabel->
  "5/13/20 16:46:03 \
In[212]:=",ExpressionUUID->"3e237d9d-09ac-4ab3-af3a-ceb8129ce2a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"template", "=", "\[IndentingNewLine]", 
   RowBox[{"LTemplate", "[", 
    RowBox[{"\"\<DemoLib\>\"", ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"library", " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"LClass", "[", 
       RowBox[{"\"\<Demo1\>\"", ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"class", " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"member", " ", "functions"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LFun", "[", 
           RowBox[{"\"\<addTwo\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Integer", ",", "Integer"}], "}"}], ",", "Integer"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"LFun", "[", 
           RowBox[{"\"\<trace\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Real", ",", "2"}], "}"}], " ", 
             RowBox[{"(*", " ", "matrix", " ", "*)"}], "}"}], ",", "Real"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
       "]"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "5/13/20 14:37:49 \
In[151]:=",ExpressionUUID->"cb443233-1c9c-46c8-97c6-0719176673fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"template", "//", "FormatTemplate"}]], "tempInput",
 CellLabel->
  "5/13/20 00:42:42 \
In[14]:=",ExpressionUUID->"cccd5dda-0e29-4477-b085-3d895f45fe74"],

Cell[BoxData["\<\"template DemoLib\\n\\nclass Demo1:\\n    Integer \
addTwo(Integer, Integer)\\n    Real trace(List<Real, 2>)\"\>"], "Output",
 CellLabel->
  "5/13/20 00:42:42 \
Out[14]=",ExpressionUUID->"f57e738c-18f3-4636-9940-ded659c463d4"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$CCompiler", "=", "gppCfg"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CompileTemplate", "[", 
    RowBox[{"template", "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", 
      RowBox[{"Directory", "[", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-Wall -Wextra\>\""}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<Defines\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(*", "\"\<__int64=wint64\>\"", "*)"}], 
       RowBox[{"(*", "\"\<MLINTERFACE=3\>\"", "*)"}], "}"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"\"\<Libraries\>\"", "\[Rule]", 
        RowBox[{"{", "\"\<stdc++\>\"", "}"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"Language", "\[Rule]", "\"\<C++\>\""}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"\"\<CompileOptions\>\"", "\[Rule]", "\"\<-std=c++11\>\""}]}], 
      "*)"}], "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<Debug\>\"", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/13/20 16:46:08 \
In[213]:=",ExpressionUUID->"8eec20f5-c432-4b64-ad55-b43f521ed41f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Current directory is: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["Current directory is: ", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style["D:\\gitrepos\\golib-demo\\draft\\LTemplate", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->False]], "Print",
 CellLabel->
  "5/13/20 16:46:08 During evaluation of \
In[213]:=",ExpressionUUID->"caecaf0f-bbb6-42bd-afc6-5be27c7909c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Unloading library \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\"DemoLib\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\" ...\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["Unloading library ", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style["DemoLib", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style[" ...", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->False]], "Print",
 CellLabel->
  "5/13/20 16:46:08 During evaluation of \
In[213]:=",ExpressionUUID->"8b656828-609b-4e9a-a46e-fdba66bbb1f4"],

Cell[BoxData[
 StyleBox["\<\"Generating library code ...\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FrontFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  BackFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  GraphicsColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FontColor->RGBColor[0, 0, 
    Rational[2, 3]]]], "Print",
 CellLabel->
  "5/13/20 16:46:08 During evaluation of \
In[213]:=",ExpressionUUID->"80c96ba8-f645-4a77-9967-208093fe8eeb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"LTemplate-DemoLib.cpp\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\" already exists and will be overwritten.\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["LTemplate-DemoLib.cpp", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style[" already exists and will be overwritten.", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->False]], "Print",
 CellLabel->
  "5/13/20 16:46:08 During evaluation of \
In[213]:=",ExpressionUUID->"0dbd95ed-8914-4c0a-b894-8dd781aaa104"],

Cell[BoxData[
 StyleBox["\<\"Compiling library code ...\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FrontFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  BackFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  GraphicsColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FontColor->RGBColor[0, 0, 
    Rational[2, 3]]]], "Print",
 CellLabel->
  "5/13/20 16:46:08 During evaluation of \
In[213]:=",ExpressionUUID->"499c94fb-209d-4b14-9467-86ed42542a0c"],

Cell[BoxData["\<\"\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\\\
Working-flerkengen1-19304-2876-59>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\
\\mingw64\\\\bin\\\\g++.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\\Working-flerkengen1-\
19304-2876-59\\\\DemoLib.dll\\\" -g -Wall -Wextra  -I\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
-I\\\"C:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\\
Applications\\\\LTemplate\\\\IncludeFiles\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\\LTemplate-DemoLib.\
cpp\\\"  -L\\\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\12.1\
\\\\SystemFiles\\\\Links\\\\MathLink\\\\DeveloperKit\\\\Windows-x86-64\\\\\
CompilerAdditions\\\" -L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"    2>&1 \\nIn file included from D:\\\\gitrepos\\\\golib-demo\\\\draft\\\
\\LTemplate\\\\LTemplate-DemoLib.cpp:8:\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\\
Roaming\\\\Mathematica\\\\Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.\
h: In function 'mint \
mma::detail::libraryType()':\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\\
Mathematica\\\\Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.h:280:5: \
warning: no return statement in function returning non-void \
[-Wreturn-type]\\n     }\\n     \
^\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\\
Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.h: In function \
'rawarray_t \
mma::detail::libraryRawType()':\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\
\\\\Mathematica\\\\Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.h:1048:\
5: warning: no return statement in function returning non-void \
[-Wreturn-type]\\n     }\\n     \
^\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\\
Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.h: In function \
'numericarray_data_t \
mma::detail::libraryNumericType()':\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\\
Roaming\\\\Mathematica\\\\Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.\
h:1290:5: warning: no return statement in function returning non-void \
[-Wreturn-type]\\n     }\\n     \
^\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Roaming\\\\Mathematica\\\\\
Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.h: In function \
'imagedata_t \
mma::detail::libraryImageType()':\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\\
Roaming\\\\Mathematica\\\\Applications\\\\LTemplate\\\\IncludeFiles/LTemplate.\
h:1585:5: warning: no return statement in function returning non-void \
[-Wreturn-type]\\n     }\\n     \
^\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\\LTemplate-DemoLib.\
cpp: In function 'int Demo1_get_collection(WolframLibraryData, mint, \
MArgument*, MArgument)':\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\
\\\\LTemplate-DemoLib.cpp:42:66: warning: unused parameter 'libData' \
[-Wunused-parameter]\\n extern \\\"C\\\" DLLEXPORT int \
Demo1_get_collection(WolframLibraryData libData, mint Argc, MArgument * Args, \
MArgument Res)\\n                                               \
~~~~~~~~~~~~~~~~~~~^~~~~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\\
LTemplate\\\\LTemplate-DemoLib.cpp:42:80: warning: unused parameter 'Argc' \
[-Wunused-parameter]\\n extern \\\"C\\\" DLLEXPORT int \
Demo1_get_collection(WolframLibraryData libData, mint Argc, MArgument * Args, \
MArgument Res)\\n                                                             \
              ~~~~~^~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\
\\LTemplate-DemoLib.cpp:42:98: warning: unused parameter 'Args' \
[-Wunused-parameter]\\n extern \\\"C\\\" DLLEXPORT int \
Demo1_get_collection(WolframLibraryData libData, mint Argc, MArgument * Args, \
MArgument Res)\\n                                                             \
                         ~~~~~~~~~~~~^~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\\
draft\\\\LTemplate\\\\LTemplate-DemoLib.cpp: In function 'int \
Demo1_addTwo(WolframLibraryData, mint, MArgument*, \
MArgument)':\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\\\
LTemplate-DemoLib.cpp:73:72: warning: unused parameter 'Argc' \
[-Wunused-parameter]\\n extern \\\"C\\\" DLLEXPORT int \
Demo1_addTwo(WolframLibraryData libData, mint Argc, MArgument * Args, \
MArgument Res)\\n                                                             \
      ~~~~~^~~~\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\\\\\
LTemplate-DemoLib.cpp: In function 'int Demo1_trace(WolframLibraryData, mint, \
MArgument*, MArgument)':\\nD:\\\\gitrepos\\\\golib-demo\\\\draft\\\\LTemplate\
\\\\LTemplate-DemoLib.cpp:107:71: warning: unused parameter 'Argc' \
[-Wunused-parameter]\\n extern \\\"C\\\" DLLEXPORT int \
Demo1_trace(WolframLibraryData libData, mint Argc, MArgument * Args, \
MArgument Res)\\n                                                             \
     ~~~~~^~~~\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Local\\\\Temp\\\\\
ccj8YRJS.o: In function `mma::message(char const*, \
mma::MessageType)':\\nC:/Users/Silvia/AppData/Roaming/Mathematica/\
Applications/LTemplate/IncludeFiles/LTemplate.inc:82: undefined reference to \
`MLPutFunction'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.inc:83: undefined reference to \
`MLPutFunction'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.inc:84: undefined reference to \
`MLPutFunction'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.inc:85: undefined reference to `MLPutSymbol'\
\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/LTemplate/\
IncludeFiles/LTemplate.inc:86: undefined reference to \
`MLPutString'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.inc:87: undefined reference to `MLPutString'\
\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/LTemplate/\
IncludeFiles/LTemplate.inc:89: undefined reference to \
`MLNextPacket'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.inc:91: undefined reference to `MLNewPacket'\
\\nC:\\\\Users\\\\Silvia\\\\AppData\\\\Local\\\\Temp\\\\ccj8YRJS.o: In \
function `mma::print(char \
const*)':\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.h:114: undefined reference to \
`MLPutFunction'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.h:115: undefined reference to \
`MLPutFunction'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.h:116: undefined reference to \
`MLPutString'\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/\
LTemplate/IncludeFiles/LTemplate.h:118: undefined reference to `MLNextPacket'\
\\nC:/Users/Silvia/AppData/Roaming/Mathematica/Applications/LTemplate/\
IncludeFiles/LTemplate.h:120: undefined reference to \
`MLNewPacket'\\ncollect2.exe: error: ld returned 1 exit status\"\>"], "Print",
 CellLabel->
  "5/13/20 16:46:09 During evaluation of \
In[213]:=",ExpressionUUID->"600b9b9d-60bc-48f1-8231-8955bb976e32"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "CreateLibrary", "cmperr", 
   "\"Compile error: \\!\\(\\*RowBox[{\\\"\\\\\\\"collect2.exe: error: ld \
returned 1 exit status\\\\\\\"\\\"}]\\)\"", 2, 213, 137, 19048939273408150536,
    "Local", "CCompilerDriver`CreateLibrary"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "5/13/20 16:46:09 During evaluation of \
In[213]:=",ExpressionUUID->"9537c84f-158a-469b-b3e7-0615c46c3456"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->
  "5/13/20 16:46:09 \
Out[213]=",ExpressionUUID->"7fcfb0af-61f2-4352-9784-3926c352e790"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResetDirectory", "[", "]"}]], "Input",
 CellLabel->
  "5/13/20 17:04:14 \
In[214]:=",ExpressionUUID->"35a28ece-6b50-4a02-b978-e96609cccfd5"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\"\>"], "Output",
 CellLabel->
  "5/13/20 17:04:14 \
Out[214]=",ExpressionUUID->"91ff72c8-0bf9-4a72-a1f8-270e3dae53fb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"?", "CompileTemplate"}]], "tempInput",
 CellLabel->
  "5/13/20 00:47:45 \
In[15]:=",ExpressionUUID->"159e130a-097e-4822-8fd8-909085ee628f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Demo: import GoLang function", "Subsubsection",ExpressionUUID->"829e7fda-9131-46b5-947a-875b21bcf298"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<tcc\>\"", ",", "\"\<-impdef\>\"", "\[IndentingNewLine]", ",", 
    "\"\<libgoutil.dll\>\"", "\[IndentingNewLine]", ",", "\"\<-o\>\"", ",", 
    "\"\<libgoutil.def\>\""}], "\[IndentingNewLine]", "}"}], "//", 
  "safePs"}]], "tempInput",
 CellLabel->
  "5/12/20 22:11:30 \
In[51]:=",ExpressionUUID->"acac9daa-67e7-4e36-857d-8d8828b4e63b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "5/12/20 22:11:30 \
Out[51]=",ExpressionUUID->"4a21df03-f90d-439d-8262-f737bac01a39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateLibrary", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"File", "@", "\"\<go_test.cpp\>\""}], "\[IndentingNewLine]", ",", 
   "\"\<liblink_go_test_gcc\>\"", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"\"\<Debug\>\"", "\[Rule]", "True"}]}], "*)"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", 
    RowBox[{"Directory", "[", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<LibraryDirectories\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Directory", "[", "]"}], "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<Libraries\>\"", "\[Rule]", 
    RowBox[{"{", "\"\<libgoutil\>\"", "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"\"\<IncludeDirectories\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], ",", "\"\<inc\>\""}], "}"}], "]"}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/13/20 02:56:40 \
In[103]:=",ExpressionUUID->"9043e9b3-1752-4105-85df-9f8b4b953bb9"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\liblink_go_test_\
gcc.dll\"\>"], "Output",
 CellLabel->
  "5/13/20 02:56:41 \
Out[103]=",ExpressionUUID->"c0519179-5794-4e3b-9f66-b656453c4712"]
}, Open  ]],

Cell[TextData[{
 "List all exported functions in DLL using ",
 StyleBox["tcc -impdef", "Program"],
 " :"
}], "Text",ExpressionUUID->"689ebfa5-18fe-4096-819b-c11cd140ffa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<tcc\>\"", ",", "\"\<-impdef\>\"", "\[IndentingNewLine]", ",", 
    "\"\<liblink_go_test_gcc.dll\>\"", "\[IndentingNewLine]", ",", 
    "\"\<-o\>\"", ",", "\"\<liblink_go_test_gcc.def\>\""}], 
   "\[IndentingNewLine]", "}"}], "//", "safePs"}]], "tempInput",
 CellLabel->
  "5/13/20 02:57:15 \
In[104]:=",ExpressionUUID->"83896301-6490-4601-96e5-893c3b6d19c8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "5/13/20 02:57:15 \
Out[104]=",ExpressionUUID->"1443bc0d-8e7b-4c1c-88c3-acd70a00bc4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{"\"\<liblink_go_test_gcc.def\>\"", ",", "\"\<Lines\>\""}], "]"}], "//",
   "Multicolumn"}]], "tempInput",
 CellLabel->
  "5/13/20 02:57:16 \
In[105]:=",ExpressionUUID->"0b61488b-6aa0-48f7-9383-8dbbeb644358"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"LIBRARY liblink_go_test_gcc.dll\"\>", "\<\"MMinus\"\>", \
"\<\"WolframLibrary_uninitialize\"\>"},
    {"\<\"\"\>", "\<\"WolframLibrary_getVersion\"\>", ""},
    {"\<\"EXPORTS\"\>", "\<\"WolframLibrary_initialize\"\>", ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/13/20 02:57:16 \
Out[105]=",ExpressionUUID->"5b04ff8c-0123-4b68-889a-50cb1739e83b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\util\\\\util.dll\>\"", 
  "]"}]], "Input",
 CellLabel->
  "5/17/20 00:46:45 \
In[518]:=",ExpressionUUID->"8c8c902c-5240-4666-b5b2-ddd885972487"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\util\\\\util.dll\"\
\>"], "Output",
 CellLabel->
  "5/17/20 00:46:45 \
Out[518]=",ExpressionUUID->"c59136dd-4527-45a3-845d-9e7997b986b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$LibraryPath", "=", 
     RowBox[{
     "$LibraryPath", "~", "Append", "~", 
      "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\util\>\""}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"func", "=", 
    RowBox[{"LibraryFunctionLoad", "[", 
     RowBox[{
     "\"\<mmautil.dll\>\"", "\[IndentingNewLine]", ",", "\"\<MMinus\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Integer", ",", "Integer"}], "}"}], ",", "Integer"}], 
     "\[IndentingNewLine]", "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "5/17/20 00:57:08 \
In[3]:=",ExpressionUUID->"920ec482-be14-43ec-a0c2-54a7535d111c"],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction", "libload", 
   "\"The function \\!\\(\\*RowBox[{\\\"\\\\\\\"MMinus\\\\\\\"\\\"}]\\) was \
not loaded from the file \
\\!\\(\\*RowBox[{\\\"\\\\\\\"D:\\\\\\\\\\\\\\\\gitrepos\\\\\\\\\\\\\\\\golib-\
demo\\\\\\\\\\\\\\\\draft\\\\\\\\\\\\\\\\util\\\\\\\\\\\\\\\\mmautil.dll\\\\\\\
\"\\\"}]\\).\"", 2, 3, 1, 19051198042844117116, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "5/17/20 00:57:08 During evaluation of \
In[3]:=",ExpressionUUID->"ded5576d-149b-4ef8-8af9-b9ae3fd97916"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->
  "5/17/20 00:57:08 \
Out[3]=",ExpressionUUID->"4e91ccc0-0f82-4c6f-98c5-236c6c840fda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["LibraryLink`$LibraryError"], "tempInput",
 CellLabel->
  "5/17/20 00:57:25 \
In[5]:=",ExpressionUUID->"9c5caad3-766b-45a3-a54f-170193b410aa"],

Cell[BoxData["\<\"Library load error 126: The specified module could not be \
found.\\r\\n\"\>"], "Output",
 CellLabel->
  "5/17/20 00:57:25 \
Out[5]=",ExpressionUUID->"4c4dccc4-5b62-4b03-9530-55628322fd11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LibraryFunctionInformation", "[", "func", "]"}], "//", 
     "Association"}], "//", 
    RowBox[{"MapAt", "[", 
     RowBox[{"FileNameTake", ",", "\"\<File\>\""}], "]"}]}], "//", 
   "Dataset"}], "//", "DatasetGrid"}]], "tempInput",
 CellLabel->
  "5/17/20 00:55:35 \
In[533]:=",ExpressionUUID->"d49e2623-14d8-42b3-953c-ddfa1066ff1e"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      ItemBox[
       PaneBox["\<\"ReturnType\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox["Integer",
         ShowStringCharacters->True,
         FontFamily->"Source Code Pro"],
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{60, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"ArgumentTypes\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"Integer", ",", "Integer"}], "}"}],
         StripOnInput->False,
         ShowStringCharacters->False],
        ImageMargins->{{5, 3}, {4, 5}}],
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"File\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"mmautil.dll\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{105.60000000000002`, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]},
     {
      ItemBox[
       PaneBox["\<\"Function\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{1, Full}, Automatic}],
       Alignment->{Left, Baseline},
       Background->GrayLevel[0.95],
       StripOnInput->False], 
      ItemBox[
       PaneBox["\<\"MMinus\"\>",
        ImageMargins->{{5, 3}, {4, 5}},
        ImageSize->{{57.60000000000001, Full}, Automatic}],
       ItemSize->{Full, Automatic},
       StripOnInput->False]}
    },
    AutoDelete->False,
    BaseStyle->{FontFamily -> "Verdana", FontSize -> 12},
    FrameStyle->GrayLevel[0.7490196078431373],
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  StripOnInput->False,
  ShowAutoStyles->False,
  NumberMarks->False,
  LineBreakWithin->False]], "Output",
 CellLabel->
  "5/17/20 00:55:35 \
Out[533]=",ExpressionUUID->"c002b04e-c2a7-4287-8e45-80b16f75b05f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"branch", "[", 
     RowBox[{"func", ",", "Subtract"}], "]"}], "@@@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "2"}], "}"}]}], "]"}]}], "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Dividers", "\[Rule]", "Center"}]}], "]"}], "&"}]}]], "Input",
 CellLabel->
  "5/17/20 00:55:36 \
In[534]:=",ExpressionUUID->"aa43a40f-27ba-4e2e-a9ef-5868d06dd226"],

Cell[BoxData[
 TagBox[GridBox[{
    {"10", 
     RowBox[{"-", "7"}], "1", 
     RowBox[{"-", "12"}], 
     RowBox[{"-", "3"}], "2"},
    {"10", 
     RowBox[{"-", "7"}], "1", 
     RowBox[{"-", "12"}], 
     RowBox[{"-", "3"}], "2"}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "5/17/20 00:55:36 \
Out[534]=",ExpressionUUID->"24270b75-ecff-4ab1-875d-1d6ecab31b01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LibraryFunctionUnload", "[", "func", "]"}], "\[IndentingNewLine]", 
 RowBox[{"LibraryUnload", "[", 
  "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\util\\\\util.dll\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Remove", "[", "func", "]"}]}], "Input",
 CellLabel->
  "5/17/20 00:55:37 \
In[535]:=",ExpressionUUID->"5f319905-cd48-4154-859d-9e1c04fb424c"],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction", "nolib", 
   "\"The library \\!\\(\\*RowBox[{\\\"\\\\\\\"D:\\\\\\\\\\\\\\\\gitrepos\\\\\
\\\\\\\\\\\\golib-demo\\\\\\\\\\\\\\\\draft\\\\\\\\\\\\\\\\util\\\\\\\\\\\\\\\
\\util.dll\\\\\\\"\\\"}]\\) cannot be found.\"", 2, 536, 238, 
   19048939273408150536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "5/17/20 00:55:37 During evaluation of \
In[535]:=",ExpressionUUID->"43e91d30-d544-4392-a3b8-94e80e2baae9"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->
  "5/17/20 00:55:37 \
Out[536]=",ExpressionUUID->"71d70aa1-2e1f-4ca2-9cb8-f103432ad7c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["demo_LinkObject.c (WSTP example) (succeed)", "Subsubsection",ExpressionUUID->"e9e847f0-2d60-436f-b47a-e5a515816615"],

Cell[TextData[{
 "MinGW-w64 GCC doesn\[CloseCurlyQuote]t understand ",
 StyleBox["__int64", "Input"],
 ", so we redefine it as ",
 StyleBox["long long", "Input"],
 " in ",
 StyleBox["extra_def_gcc.h", "CnTextEmphInCell"],
 " :"
}], "Comment",ExpressionUUID->"15f2d0c7-79d4-4b1d-96b4-364c8508f99c"],

Cell["#define __int64 long long", "Program",
 CellMargins->{{322.7999999999999, 602.}, {8., 
  8.}},ExpressionUUID->"e7dd266d-94a2-4ddf-a1d6-f2a52646618c"],

Cell[TextData[{
 "Then it can be included through gcc option ",
 StyleBox["-include ", "Input"],
 StyleBox["filepath", "Input",
  FontSlant->"Italic"],
 " .",
 "\n",
 "Reference: ",
 ButtonBox["https://stackoverflow.com/questions/28173717/int64-for-gcc-as-a-\
preprocessor-option",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://stackoverflow.com/questions/28173717/int64-for-gcc-as-a-\
preprocessor-option"], None},
  ButtonNote->
   "https://stackoverflow.com/questions/28173717/int64-for-gcc-as-a-\
preprocessor-option"]
}], "CommentText",ExpressionUUID->"37a6074e-d6aa-4102-9327-02309e0ec40e"],

Cell[TextData[{
 "There could be a linker error, possibly because ",
 StyleBox["ML64I4.dll", "Input"],
 " is made by MSVC, and GCC doesn\[CloseCurlyQuote]t understand it. To solve \
this, we link againt ",
 StyleBox["ML64I4.lib", "Input"],
 " ."
}], "Comment",ExpressionUUID->"104da30e-f824-47b7-a748-c9cfbeaab006"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<D:\\\\temp\>\"", "]"}], ";"}]], "Input",
 CellLabel->
  "5/21/20 02:57:20 \
In[43]:=",ExpressionUUID->"4ab1b06c-87e7-4942-a60d-4f10baf11da4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$CCompiler", "=", "mingw64Cfg"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"CreateLibrary", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\"\<demo_LinkObject.c\>\"", "}"}], ",", 
     "\"\<libLinkObj\>\"", "\[IndentingNewLine]", ",", 
     RowBox[{"\"\<TargetDirectory\>\"", "\[Rule]", 
      RowBox[{"Directory", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "5/21/20 02:57:28 \
In[45]:=",ExpressionUUID->"f29552e2-a582-40eb-9ca7-831723d2a42d"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\temp\\\\Working-flerkengen1-10888-9684-5>set \
PATH=C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\\\\;C:\\\\\
Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64;\
C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\12.1\\\\SystemFiles\
\\\\Libraries\\\\Windows;C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Kernel\\\\Binaries\\\\\
Windows-x86-64;C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1;C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\FrontEnd\\\\Binaries\\\\\
Windows-x86-64;C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\12.1\
\\\\SystemFiles\\\\Kernel\\\\Binaries\\\\Windows-x86-64;C:\\\\Windows\\\\\
system32;C:\\\\Windows;C:\\\\Windows\\\\System32\\\\Wbem;C:\\\\Windows\\\\\
System32\\\\WindowsPowerShell\\\\v1.0\\\\;C:\\\\Program \
Files\\\\Intel\\\\WiFi\\\\bin\\\\;C:\\\\Program Files\\\\Common \
Files\\\\Intel\\\\WirelessCommon\\\\;C:\\\\Portable\\\\tcc\\\\;C:\\\\mingw-\
w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\\\\;C:\\\\Program \
Files\\\\CMake\\\\bin;C:\\\\Program Files (x86)\\\\Wolfram \
Research\\\\WolframScript\\\\;C:\\\\Program \
Files\\\\yWorks\\\\yEd\\\\jre\\\\bin\\\\;C:\\\\Users\\\\Silvia\\\\AppData\\\\\
Local\\\\Microsoft\\\\WindowsApps; \
\\n\\nD:\\\\temp\\\\Working-flerkengen1-10888-9684-5>C:\\\\mingw-w64\\\\x86_\
64-8.1.0-posix-seh\\\\mingw64\\\\bin\\\\gcc.exe -shared -o \
\\\"D:\\\\temp\\\\Working-flerkengen1-10888-9684-5\\\\libLinkObj.dll\\\" -m64 \
-O2 -O2  -I\\\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\12.1\
\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" -I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\temp\\\\demo_LinkObject.c\\\"  -L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"  -l\\\"ml64i4m\\\"  2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 
    UpTo[300]},
  Scrollbars->True]], "Output",ExpressionUUID->"a28717cb-4edd-42b4-ac28-\
402a0858fbab"],

Cell[BoxData["\<\"D:\\\\temp\\\\libLinkObj.dll\"\>"], "Output",
 CellLabel->
  "5/21/20 02:57:28 \
Out[45]=",ExpressionUUID->"b9354f00-98ee-441c-a1ea-403e0b26e245"]
}, Open  ]],

Cell[TextData[{
 "This using ",
 StyleBox["gccCfg", "Input"],
 " :"
}], "Comment",ExpressionUUID->"1fd1b153-177f-4401-99fd-088fc74d462e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateLibrary", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "File", "@", 
    "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_LinkObject.c\>\""}], 
   ",", "\"\<libLinkObj\>\"", "\[IndentingNewLine]", ",", 
   RowBox[{
   "\"\<CompileOptions\>\"", "\[Rule]", 
    "\"\<-include \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\extra_def_gcc.h\>\""}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{
   "\"\<TargetDirectory\>\"", "\[Rule]", 
    "\"\<D:\\\\gitrepos\\\\golib-demo\\\\draft\>\""}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"\"\<Libraries\>\"", "\[Rule]", 
    RowBox[{"{", "\"\<ml64i4\>\"", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "tempInput",ExpressionUUID->"e37d9619-4878-4367-9cec-87217006dd65"],

Cell[BoxData[
 PaneBox[
  StyleBox["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Working-flerkengen1-\
19600-12992-36>C:\\\\mingw-w64\\\\x86_64-8.1.0-posix-seh\\\\mingw64\\\\bin\\\\\
gcc.exe -shared -o \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\Working-flerkengen1-19600-12992-\
36\\\\libLinkObj.dll\\\" -include \
D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\extra_def_gcc.h  -I\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\IncludeFiles\\\\C\\\" \
-I\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" \
\\\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\demo_LinkObject.c\\\"  \
-L\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Links\\\\MathLink\\\\\
DeveloperKit\\\\Windows-x86-64\\\\CompilerAdditions\\\" -L\\\"C:\\\\Program \
Files\\\\Wolfram \
Research\\\\Mathematica\\\\12.1\\\\SystemFiles\\\\Libraries\\\\Windows-x86-64\
\\\"  -l\\\"ml64i4\\\"  2>&1\"\>",
   StripOnInput->False,
   LineBreakWithin->False,
   FontSize->8],
  ImageSize->{1000, 
    UpTo[300]},
  ScrollPosition->{0., 0.},
  Scrollbars->True]], "Output",ExpressionUUID->"db7bb55e-29cc-4320-872f-\
5e75909790ab"],

Cell[BoxData["\<\"D:\\\\gitrepos\\\\golib-demo\\\\draft\\\\libLinkObj.dll\"\>\
"], "Output",
 CellLabel->
  "5/20/20 04:52:18 \
Out[109]=",ExpressionUUID->"75946f97-a670-4f01-a1a1-9629f1043e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Internal`InheritedBlock", "[", 
  RowBox[{
   RowBox[{"{", "$LibraryPath", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrependTo", "[", 
     RowBox[{"$LibraryPath", ",", 
      RowBox[{"Directory", "[", "]"}]}], "]"}], "\[IndentingNewLine]", ";", 
    RowBox[{"funReverse", "=", 
     RowBox[{"LibraryFunctionLoad", "[", 
      RowBox[{
      "\"\<libLinkObj\>\"", ",", "\"\<reverseString\>\"", ",", "LinkObject", 
       ",", "LinkObject"}], "]"}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "5/21/20 02:57:58 \
In[48]:=",ExpressionUUID->"a017c408-cb72-411c-a5f9-5a93f7910b2b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LibraryFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
                4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
                5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
                8.29796625}, {14.163129999999999`, 8.29796625}, {
                14.163129999999999`, 4.337966249999999}}}]}}, Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"reverseString\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Connection type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["LinkObject", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
                4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
                5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
                8.29796625}, {14.163129999999999`, 8.29796625}, {
                14.163129999999999`, 4.337966249999999}}}]}}, Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"reverseString\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Connection type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["LinkObject", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"libLinkObj.dll\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LibraryFunction["D:\\temp\\libLinkObj.dll", "reverseString", LinkObject],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "5/21/20 02:57:58 \
Out[48]=",ExpressionUUID->"1642780d-ff38-4a58-b508-df6d536c3adf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funReverse", "[", "\"\<a nut for a jar of tuna\>\"", "]"}]], "Input",
 CellLabel->
  "5/21/20 02:58:03 \
In[49]:=",ExpressionUUID->"290146de-8c06-4163-9c0c-e20f742fc7e5"],

Cell[BoxData["\<\"anut fo raj a rof tun a\"\>"], "Output",
 CellLabel->
  "5/21/20 02:58:03 \
Out[49]=",ExpressionUUID->"dd92dd3e-1ef9-42d9-9f89-f54eab443d01"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LibraryFunctionUnload", "[", "funReverse", "]"}]], "Input",
 CellLabel->
  "5/21/20 02:58:04 \
In[50]:=",ExpressionUUID->"7f0cd956-d131-4faf-bba8-eaf1de749560"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"RulerBar",
WindowSize->{1152., 592.8},
WindowMargins->{{Automatic, -5.399999999999864}, {
  Automatic, -5.3999999999999995`}},
ShowCellTags->True,
TrackCellChangeTimes->False,
Magnification:>0.75 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "myNoteStyle.nb"]], 
   Cell[
    StyleData["Input"], PageWidth :> Infinity, MenuSortingValue -> 10000]}, 
  Visible -> False, FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (March 14, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"0cf926ab-063c-457c-b603-eef948f7bbf4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LTemplate-demo-src"->{
  Cell[392365, 7581, 612, 22, 246, "Program",ExpressionUUID->"57984d4c-9e1b-4bfc-ab70-8f2a0892697d",
   CellTags->"LTemplate-demo-src"]},
 "wll-demo-src"->{
  Cell[386440, 7425, 280, 11, 135, "Program",ExpressionUUID->"28a85604-2bc3-45c2-90bd-b11dd43998fb",
   CellTags->"wll-demo-src"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LTemplate-demo-src", 449116, 9003},
 {"wll-demo-src", 449273, 9006}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 239, 7, 45, "InitializationCell",ExpressionUUID->"73654024-6bf4-474d-a8ed-cfd4a34270fd"],
Cell[800, 29, 481, 14, 59, "InitializationCell",ExpressionUUID->"64f2032d-2257-406d-be4a-e67ddd076aa0"],
Cell[1284, 45, 782, 20, 98, "InitializationCell",ExpressionUUID->"3cfb02b0-c687-499c-acd3-231b16d7d474"],
Cell[CellGroupData[{
Cell[2091, 69, 78, 0, 52, "Chapter",ExpressionUUID->"57deb468-cda9-4bde-b2f2-2d9ff81070de"],
Cell[CellGroupData[{
Cell[2194, 73, 4922, 120, 549, "Input",ExpressionUUID->"52765244-645c-498e-b505-0fb7d8440efc"],
Cell[CellGroupData[{
Cell[7141, 197, 704, 22, 27, "Echo",ExpressionUUID->"e3721684-c0b3-4aa7-95c3-b67a86216f62"],
Cell[7848, 221, 623, 20, 27, "Echo",ExpressionUUID->"57d1a96c-86a0-4619-a0a7-37002d735407"],
Cell[8474, 243, 649, 20, 27, "Echo",ExpressionUUID->"b602af14-94f5-4fd8-aa15-bc90a1826f8b"],
Cell[9126, 265, 778, 20, 72, "Echo",ExpressionUUID->"f3663dfa-eb8c-41ed-a1bc-c69c63e75c0b"]
}, Open  ]],
Cell[9919, 288, 135, 3, 24, "Output",ExpressionUUID->"80966364-5c9b-490d-a4a0-70d8201a16db"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10103, 297, 85, 0, 45, "Chapter",ExpressionUUID->"e9c318d5-87fc-416d-a460-dc221cf38ef5"],
Cell[10191, 299, 377, 8, 71, "InitializationCell",ExpressionUUID->"3bac92d4-f201-486d-83e3-25cf96f1a557"],
Cell[CellGroupData[{
Cell[10593, 311, 103, 0, 35, "Subsubsection",ExpressionUUID->"de4657a8-f2b5-4274-a541-f225beb5e255"],
Cell[10699, 313, 140, 4, 38, "Comment",ExpressionUUID->"3957be75-6c77-47d1-9ba9-ff0d4e069406"],
Cell[10842, 319, 140, 3, 28, "tempInput",ExpressionUUID->"6f7eca13-7cd9-4d47-ab27-05714e2a1075"],
Cell[10985, 324, 4578, 114, 276, "InitializationCell",ExpressionUUID->"baa4b874-6df5-4938-934d-141debb31da6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15600, 443, 127, 0, 35, "Subsubsection",ExpressionUUID->"fa10438c-f68b-435b-9233-de48363284bb"],
Cell[15730, 445, 150, 2, 24, "Text",ExpressionUUID->"872528fc-ae01-41ea-aff7-21862e4b0632"],
Cell[CellGroupData[{
Cell[15905, 451, 313, 6, 29, "Input",ExpressionUUID->"abcbce66-24fe-4b02-b3a2-37d76ed88b52"],
Cell[16221, 459, 1196, 24, 231, "Output",ExpressionUUID->"19616bca-6f86-4dda-a5b4-e97e14dce740"],
Cell[17420, 485, 215, 4, 26, "Output",ExpressionUUID->"186dfd1c-e7ad-4405-9aac-da007abc30c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17672, 494, 532, 13, 72, "Input",ExpressionUUID->"6ff22cba-0cf9-43d2-bd9c-2c9a014e283f"],
Cell[18207, 509, 1154, 23, 231, "Output",ExpressionUUID->"7ba96931-91c0-470f-bf32-a4952b750b17"],
Cell[19364, 534, 215, 4, 26, "Output",ExpressionUUID->"a9f2c189-e830-424d-acab-4f4dae935c6c"]
}, Open  ]],
Cell[19594, 541, 171, 4, 24, "Text",ExpressionUUID->"2f604d2f-046a-4d2f-ba7f-76b108b2360d"],
Cell[CellGroupData[{
Cell[19790, 549, 443, 10, 70, "tempInput",ExpressionUUID->"b13b6944-696d-4d3e-9fc3-a27a417853ef"],
Cell[20236, 561, 382, 9, 26, "Output",ExpressionUUID->"58b583d8-a07b-4a3e-9bb7-ce41630834ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20655, 575, 285, 8, 28, "tempInput",ExpressionUUID->"df1b1821-d49c-4705-9f24-1385dc1b5f5a"],
Cell[20943, 585, 563, 13, 51, "Output",ExpressionUUID->"ddca59c2-5d26-4ebf-875b-7804a04f7504"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21543, 603, 774, 21, 86, "Input",ExpressionUUID->"50f5e027-218f-4e7f-8d64-52122f62d19d"],
Cell[22320, 626, 12566, 242, 52, "Output",ExpressionUUID->"734fbe5b-3bb9-47aa-b982-e2ecce074a0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34923, 873, 407, 12, 28, "tempInput",ExpressionUUID->"8e889a9c-a9c1-48e3-ac15-34e741dbe6ed"],
Cell[35333, 887, 2618, 80, 91, "Output",ExpressionUUID->"0f2e1acb-aa36-4f24-abf5-1e4c85be3462"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37988, 972, 517, 16, 38, "Input",ExpressionUUID->"e10405ce-30f7-4a0d-8581-4175bcdc2659"],
Cell[38508, 990, 657, 14, 39, "Output",ExpressionUUID->"6bdd1f39-7fe3-4698-b8ac-53e29d4af4e6"]
}, Open  ]],
Cell[39180, 1007, 243, 5, 53, "Input",ExpressionUUID->"43f556ba-8853-4883-9491-5ef41b703a9c"]
}, Closed]],
Cell[CellGroupData[{
Cell[39460, 1017, 127, 0, 31, "Subsubsection",ExpressionUUID->"580cdcd0-72eb-4191-abc9-b65e2380a377"],
Cell[CellGroupData[{
Cell[39612, 1021, 938, 22, 125, "Input",ExpressionUUID->"28b35412-3bc0-423c-8eb3-60f087d80b23"],
Cell[40553, 1045, 1207, 25, 27, "Output",ExpressionUUID->"1622f3aa-32f3-4efb-80d0-3d3d388981b2"],
Cell[41763, 1072, 216, 4, 26, "Output",ExpressionUUID->"23c2f9e8-fed1-4c7d-ada3-4f651c7fc958"]
}, Open  ]],
Cell[41994, 1079, 171, 4, 24, "Text",ExpressionUUID->"b69474c4-8b37-43a7-b043-744273d3da8a"],
Cell[CellGroupData[{
Cell[42190, 1087, 444, 10, 70, "tempInput",ExpressionUUID->"c52eed22-318d-4819-baab-c0479880ead6"],
Cell[42637, 1099, 383, 9, 26, "Output",ExpressionUUID->"3d22dd9f-d60f-4198-a1fe-66118f5ecf6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43057, 1113, 286, 8, 28, "tempInput",ExpressionUUID->"40ea4245-b535-4b72-a7fe-327061ad8069"],
Cell[43346, 1123, 578, 13, 51, "Output",ExpressionUUID->"cdaad315-699a-4529-8c58-1f29a65de6bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43961, 1141, 244, 6, 38, "Input",ExpressionUUID->"c4d85d43-e72e-4f35-a7eb-87159faa09c7"],
Cell[44208, 1149, 205, 4, 26, "Output",ExpressionUUID->"47a899fe-3d24-4444-b2a1-ebb205b36979"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44450, 1158, 468, 11, 67, "Input",ExpressionUUID->"13aa06a4-39c1-429e-a4b8-bd5ee382a05e"],
Cell[44921, 1171, 573, 12, 19, "Message",ExpressionUUID->"78b01015-39e5-469c-b9e7-19d55b015f5a"],
Cell[45497, 1185, 136, 3, 25, "Output",ExpressionUUID->"92cbba78-653e-41ec-8dbb-cc92fa2efd8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45670, 1193, 153, 3, 37, "Input",ExpressionUUID->"c23ced02-e372-4133-8a45-9353160dd50c"],
Cell[45826, 1198, 209, 4, 55, "Output",ExpressionUUID->"75751607-56cc-4dc5-9301-405795249523"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46072, 1207, 408, 12, 26, "tempInput",ExpressionUUID->"6ac0ffb9-3976-49c4-823c-c122126d1784"],
Cell[46483, 1221, 2628, 80, 90, "Output",ExpressionUUID->"d0543bc0-c672-48fc-80f9-200f66c49002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49148, 1306, 600, 19, 37, "Input",ExpressionUUID->"5636bab5-4705-4c39-bc42-ce3c4df70b90"],
Cell[49751, 1327, 474, 14, 37, "Output",ExpressionUUID->"77c0309d-d013-4143-8865-b24a85293084"]
}, Open  ]],
Cell[50240, 1344, 244, 5, 52, "Input",ExpressionUUID->"c2a7c018-8f30-4998-8e43-a1f83dcd38f5"]
}, Closed]],
Cell[CellGroupData[{
Cell[50521, 1354, 109, 0, 31, "Subsubsection",ExpressionUUID->"f84aaa14-5571-4af7-973f-4598fdf9564b"],
Cell[CellGroupData[{
Cell[50655, 1358, 477, 12, 81, "Input",ExpressionUUID->"3d088984-a192-48e2-93aa-747118432f88"],
Cell[51135, 1372, 1252, 25, 22, "Output",ExpressionUUID->"c55f9ca0-aa2c-4a66-87d6-31427e67b2f0"],
Cell[52390, 1399, 234, 4, 25, "Output",ExpressionUUID->"a0fea159-0111-4f95-9e89-096940782192"]
}, Open  ]],
Cell[52639, 1406, 171, 4, 25, "Text",ExpressionUUID->"7bcc7e1d-aac2-45eb-ae15-b061c30557f3"],
Cell[CellGroupData[{
Cell[52835, 1414, 485, 11, 66, "tempInput",ExpressionUUID->"33b648fa-4f63-4d74-bbcf-19bfbb163f44"],
Cell[53323, 1427, 383, 9, 25, "Output",ExpressionUUID->"dbe48e1d-61cc-487b-bbbb-23cfe1ea3335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53743, 1441, 305, 8, 26, "tempInput",ExpressionUUID->"f03ee6ae-29db-4fb6-909d-c03c7665eb9b"],
Cell[54051, 1451, 586, 13, 52, "Output",ExpressionUUID->"a187980c-7e1d-4c20-be7a-9cdcdf55772d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54674, 1469, 539, 12, 81, "Input",ExpressionUUID->"5ac40876-1a26-43ad-80b4-58c468496e64"],
Cell[55216, 1483, 12581, 239, 48, "Output",ExpressionUUID->"6bf7b824-fcd4-4434-95ed-efbb06f93f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67834, 1727, 423, 12, 26, "tempInput",ExpressionUUID->"38eb0b1c-d0f3-4c98-a625-45d435c32d6f"],
Cell[68260, 1741, 2649, 80, 90, "Output",ExpressionUUID->"2d90d006-7391-464d-9eca-3358b7402fe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70946, 1826, 180, 4, 26, "tempInput",ExpressionUUID->"4383b62c-42a9-4ab0-b6a1-ba731585cf32"],
Cell[71129, 1832, 14581, 351, 214, "Output",ExpressionUUID->"5ff510bb-95fe-4b09-8455-f71b58951fff"]
}, Closed]],
Cell[CellGroupData[{
Cell[85747, 2188, 681, 16, 111, "Input",ExpressionUUID->"5695ac2c-1aff-40db-ab26-50a0a73417cc"],
Cell[86431, 2206, 338, 9, 25, "Output",ExpressionUUID->"0e46f2cf-d674-4883-9ff2-1c5a71260f93"]
}, Open  ]],
Cell[86784, 2218, 200, 3, 43, "Input",ExpressionUUID->"321837de-9e4b-47e3-8f91-d048945ef1c1"],
Cell[86987, 2223, 232, 4, 43, "Input",ExpressionUUID->"5005ed1f-c950-42fc-b1e7-8120f1d93279"]
}, Closed]],
Cell[CellGroupData[{
Cell[87256, 2232, 110, 0, 31, "Subsubsection",ExpressionUUID->"86b51591-fa9b-4d41-849e-224051275482"],
Cell[87369, 2234, 1301, 29, 164, "tempInput",ExpressionUUID->"228df198-a599-4ee4-bfb6-8448acedbef7"],
Cell[CellGroupData[{
Cell[88695, 2267, 644, 15, 116, "Input",ExpressionUUID->"dfc50d0c-a4e8-4ead-90ae-a3f34a5afeb2"],
Cell[89342, 2284, 1241, 24, 27, "Output",ExpressionUUID->"1160e45a-7860-4fb5-81d6-f714e75c7e82"],
Cell[90586, 2310, 232, 4, 26, "Output",ExpressionUUID->"4362876e-41c9-414d-90e7-72868732bb5f"]
}, Open  ]],
Cell[90833, 2317, 171, 4, 24, "Text",ExpressionUUID->"c9ca833b-5311-4a71-9b21-6615d43ba59b"],
Cell[CellGroupData[{
Cell[91029, 2325, 481, 11, 70, "tempInput",ExpressionUUID->"19e66e33-6949-4f98-a805-2eed00ed876a"],
Cell[91513, 2338, 383, 9, 26, "Output",ExpressionUUID->"96098baf-3530-4459-9b1e-94b61e8d87f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91933, 2352, 303, 8, 28, "tempInput",ExpressionUUID->"cdddd817-837a-4cde-b58c-67a5ec6e3a00"],
Cell[92239, 2362, 753, 17, 51, "Output",ExpressionUUID->"a9ebba5e-fc20-4d77-ba36-37c5d5017696"]
}, Open  ]],
Cell[93007, 2382, 2064, 51, 116, "Input",ExpressionUUID->"1f5272cf-a373-42dd-aaa4-614fc3c35ff1"],
Cell[CellGroupData[{
Cell[95096, 2437, 424, 12, 26, "tempInput",ExpressionUUID->"fd53d612-c737-40d5-abb3-529aa12ba9c8"],
Cell[95523, 2451, 2620, 80, 90, "Output",ExpressionUUID->"b2f1c5d0-52ae-49f4-9ab5-0be53756382c"]
}, Open  ]],
Cell[98158, 2534, 568, 14, 52, "Input",ExpressionUUID->"2002e1ac-5920-492e-85d9-a8a89571ef0a"]
}, Closed]],
Cell[CellGroupData[{
Cell[98763, 2553, 106, 0, 31, "Subsubsection",ExpressionUUID->"35afc057-47d4-41ab-9ada-2dcc3b3c2315"],
Cell[98872, 2555, 603, 13, 98, "tempInput",ExpressionUUID->"b2d0bfa5-993d-48b7-a11f-3d67a46f8f51"],
Cell[99478, 2570, 347, 7, 28, "tempInput",ExpressionUUID->"0caf8968-29ba-4d49-9b1e-dfd8c8e78458"],
Cell[CellGroupData[{
Cell[99850, 2581, 343, 10, 28, "tempInput",ExpressionUUID->"a3314c96-17a1-4511-af87-6e99dfbedeb0"],
Cell[100196, 2593, 361, 7, 26, "Output",ExpressionUUID->"c357134a-1720-4974-aaaa-39377a2e3ee6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100594, 2605, 2450, 54, 317, "Input",ExpressionUUID->"e8c535b1-dd38-488d-b66a-5cc377895739"],
Cell[103047, 2661, 10992, 162, 1475, "Print",ExpressionUUID->"991aa152-6398-4722-9d9b-07a6efea7078"],
Cell[114042, 2825, 217, 4, 26, "Output",ExpressionUUID->"97ccaae6-254c-41ca-bd1d-e6c672a95a1a"]
}, Open  ]],
Cell[114274, 2832, 275, 8, 38, "Input",ExpressionUUID->"2c65c3ef-4e45-4b2b-8e5f-f149de3bc7d7"],
Cell[114552, 2842, 621, 10, 113, "Program",ExpressionUUID->"cc8707d2-c53f-470b-8cd4-af19a4082e5f"],
Cell[115176, 2854, 1870, 44, 128, "Input",ExpressionUUID->"4b10f55d-4a14-41fb-8fc9-2d8acab6fac1"],
Cell[CellGroupData[{
Cell[117071, 2902, 504, 14, 38, "Input",ExpressionUUID->"b571c803-8e71-4e7b-9943-fbd26f5831ea"],
Cell[117578, 2918, 223, 6, 26, "Output",ExpressionUUID->"6a847f09-bc61-4b6c-a9c7-542f12af45a9"]
}, Open  ]],
Cell[117816, 2927, 544, 17, 38, "Input",ExpressionUUID->"14e43755-0aa8-49c5-b706-ce71556c80f8"],
Cell[118363, 2946, 262, 6, 28, "tempInput",ExpressionUUID->"079f6e97-2d4e-464e-b7c0-0ba2f274ff2c"],
Cell[118628, 2954, 281, 8, 28, "tempInput",ExpressionUUID->"33ec9f01-16bb-4c4c-9b53-922eb35bef1e"],
Cell[118912, 2964, 189, 3, 38, "Comment",ExpressionUUID->"470feae1-98be-4d9a-a617-1b66da82221d"],
Cell[119104, 2969, 444, 11, 28, "tempInput",ExpressionUUID->"4b8ad0d8-270f-48be-a7bd-8b773b231dbf"],
Cell[119551, 2982, 261, 8, 38, "Comment",ExpressionUUID->"1695aed4-970b-4820-9be1-622754ce3341"],
Cell[CellGroupData[{
Cell[119837, 2994, 465, 13, 40, "Input",ExpressionUUID->"d808d10a-f679-499f-a895-5b2a8a67dda2"],
Cell[120305, 3009, 149, 3, 26, "Output",ExpressionUUID->"122b312d-f06c-485f-ba89-8028c0997530"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120491, 3017, 265, 7, 38, "Input",ExpressionUUID->"dfd8218e-0337-4f14-80e3-51fc63f7845e"],
Cell[120759, 3026, 178, 5, 26, "Output",ExpressionUUID->"72200734-c2cc-461b-942b-56f7c95c4c99"]
}, Open  ]],
Cell[120952, 3034, 397, 9, 38, "Input",ExpressionUUID->"c0e87854-088c-49c1-a8a6-a356f97bf09e"],
Cell[CellGroupData[{
Cell[121374, 3047, 435, 11, 53, "Input",ExpressionUUID->"f54ea43b-83cc-447b-8db4-3694db0891a6"],
Cell[121812, 3060, 263507, 4325, 374, "Output",ExpressionUUID->"27855067-edd4-42de-a204-2049f37a411d"]
}, Open  ]],
Cell[385334, 7388, 150, 4, 38, "Input",ExpressionUUID->"e49874db-3108-45cc-b6a1-5dc76af3d926"],
Cell[CellGroupData[{
Cell[385509, 7396, 265, 7, 38, "Input",ExpressionUUID->"2bb14fcf-6cfd-4417-b99a-c43d41dcfc77"],
Cell[385777, 7405, 185, 5, 28, "Output",ExpressionUUID->"61438d73-441e-409e-89ac-aadd143faf89"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[386011, 7416, 118, 0, 31, "Subsubsection",ExpressionUUID->"ea323db1-7a17-4eae-88de-c3d05ea4ec2a"],
Cell[386132, 7418, 305, 5, 38, "Comment",ExpressionUUID->"9e264e35-1065-4223-b8b6-4be1d779cd63"],
Cell[386440, 7425, 280, 11, 135, "Program",ExpressionUUID->"28a85604-2bc3-45c2-90bd-b11dd43998fb",
 CellTags->"wll-demo-src"],
Cell[CellGroupData[{
Cell[386745, 7440, 1124, 28, 153, "Input",ExpressionUUID->"991377c3-193a-4573-a985-7de15e1a5d18"],
Cell[387872, 7470, 2162, 38, 87, "Output",ExpressionUUID->"2448491b-58fd-4101-96dd-166d2dc2a65e"],
Cell[390037, 7510, 547, 11, 19, "Message",ExpressionUUID->"57e4eae9-6457-4bb1-9127-74ac70dae63f"],
Cell[390587, 7523, 135, 3, 26, "Output",ExpressionUUID->"7af2ae35-0946-4dd3-8fa8-e335628bd1ee"]
}, Open  ]],
Cell[390737, 7529, 230, 7, 38, "Comment",ExpressionUUID->"cabb180a-f1e1-497e-b16d-e0eb8fb6b804"]
}, Closed]],
Cell[CellGroupData[{
Cell[391004, 7541, 123, 0, 31, "Subsubsection",ExpressionUUID->"3b60d883-d272-434e-98a1-6ccde4d72b27"],
Cell[391130, 7543, 284, 5, 39, "Comment",ExpressionUUID->"fd37b6ad-80fc-4c56-bd5e-ddb8afb15997"],
Cell[CellGroupData[{
Cell[391439, 7552, 154, 4, 37, "Input",ExpressionUUID->"45cb4d23-7d7d-4395-81b8-843a0d52abc9"],
Cell[391596, 7558, 342, 5, 56, "Print",ExpressionUUID->"56bd0474-750e-46e5-b064-f89ed00a5ad4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391975, 7568, 183, 4, 37, "Input",ExpressionUUID->"82278874-0528-439a-8261-e4ca6bab1c43"],
Cell[392161, 7574, 189, 4, 25, "Output",ExpressionUUID->"0a3ab520-2d0c-48f5-a7fa-db5d1be7e995"]
}, Open  ]],
Cell[392365, 7581, 612, 22, 246, "Program",ExpressionUUID->"57984d4c-9e1b-4bfc-ab70-8f2a0892697d",
 CellTags->"LTemplate-demo-src"],
Cell[CellGroupData[{
Cell[393002, 7607, 632, 16, 81, "Input",ExpressionUUID->"fa527f31-71fc-4bbd-8d80-a7db323e47fe"],
Cell[393637, 7625, 144, 3, 25, "Output",ExpressionUUID->"e0fbb1ec-07a1-400e-9fc4-127888c5a4f2"]
}, Open  ]],
Cell[393796, 7631, 5040, 109, 301, "Input",ExpressionUUID->"3e237d9d-09ac-4ab3-af3a-ceb8129ce2a5"],
Cell[398839, 7742, 1416, 33, 198, "Input",ExpressionUUID->"cb443233-1c9c-46c8-97c6-0719176673fe"],
Cell[CellGroupData[{
Cell[400280, 7779, 175, 4, 26, "tempInput",ExpressionUUID->"cccd5dda-0e29-4477-b085-3d895f45fe74"],
Cell[400458, 7785, 243, 4, 84, "Output",ExpressionUUID->"f57e738c-18f3-4636-9940-ded659c463d4"]
}, Closed]],
Cell[CellGroupData[{
Cell[400738, 7794, 1342, 31, 184, "Input",ExpressionUUID->"8eec20f5-c432-4b64-ad55-b43f521ed41f"],
Cell[CellGroupData[{
Cell[402105, 7829, 1155, 37, 29, "Print",ExpressionUUID->"caecaf0f-bbb6-42bd-afc6-5be27c7909c9"],
Cell[403263, 7868, 1490, 52, 29, "Print",ExpressionUUID->"8b656828-609b-4e9a-a46e-fdba66bbb1f4"],
Cell[404756, 7922, 482, 15, 29, "Print",ExpressionUUID->"80c96ba8-f645-4a77-9967-208093fe8eeb"],
Cell[405241, 7939, 1141, 37, 29, "Print",ExpressionUUID->"0dbd95ed-8914-4c0a-b894-8dd781aaa104"],
Cell[406385, 7978, 481, 15, 29, "Print",ExpressionUUID->"499c94fb-209d-4b14-9467-86ed42542a0c"],
Cell[406869, 7995, 7425, 111, 897, "Print",ExpressionUUID->"600b9b9d-60bc-48f1-8231-8955bb976e32"]
}, Open  ]],
Cell[414309, 8109, 425, 9, 17, "Message",ExpressionUUID->"9537c84f-158a-469b-b3e7-0615c46c3456"],
Cell[414737, 8120, 136, 3, 25, "Output",ExpressionUUID->"7fcfb0af-61f2-4352-9784-3926c352e790"]
}, Closed]],
Cell[CellGroupData[{
Cell[414910, 8128, 164, 4, 37, "Input",ExpressionUUID->"35a28ece-6b50-4a02-b978-e96609cccfd5"],
Cell[415077, 8134, 174, 3, 25, "Output",ExpressionUUID->"91ff72c8-0bf9-4a72-a1f8-270e3dae53fb"]
}, Open  ]],
Cell[415266, 8140, 163, 4, 26, "tempInput",ExpressionUUID->"159e130a-097e-4822-8fd8-909085ee628f"]
}, Closed]],
Cell[CellGroupData[{
Cell[415466, 8149, 108, 0, 31, "Subsubsection",ExpressionUUID->"829e7fda-9131-46b5-947a-875b21bcf298"],
Cell[CellGroupData[{
Cell[415599, 8153, 396, 10, 68, "tempInput",ExpressionUUID->"acac9daa-67e7-4e36-857d-8d8828b4e63b"],
Cell[415998, 8165, 382, 9, 26, "Output",ExpressionUUID->"4a21df03-f90d-439d-8262-f737bac01a39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416417, 8179, 1108, 25, 154, "Input",ExpressionUUID->"9043e9b3-1752-4105-85df-9f8b4b953bb9"],
Cell[417528, 8206, 203, 4, 26, "Output",ExpressionUUID->"c0519179-5794-4e3b-9f66-b656453c4712"]
}, Open  ]],
Cell[417746, 8213, 171, 4, 24, "Text",ExpressionUUID->"689ebfa5-18fe-4096-819b-c11cd140ffa4"],
Cell[CellGroupData[{
Cell[417942, 8221, 418, 10, 70, "tempInput",ExpressionUUID->"83896301-6490-4601-96e5-893c3b6d19c8"],
Cell[418363, 8233, 383, 9, 26, "Output",ExpressionUUID->"1443bc0d-8e7b-4c1c-88c3-acd70a00bc4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418783, 8247, 268, 7, 28, "tempInput",ExpressionUUID->"0b61488b-6aa0-48f7-9383-8dbbeb644358"],
Cell[419054, 8256, 561, 13, 51, "Output",ExpressionUUID->"5b04ff8c-0123-4b68-889a-50cb1739e83b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419652, 8274, 236, 6, 38, "Input",ExpressionUUID->"8c8c902c-5240-4666-b5b2-ddd885972487"],
Cell[419891, 8282, 196, 4, 26, "Output",ExpressionUUID->"c59136dd-4527-45a3-845d-9e7997b986b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420124, 8291, 668, 18, 85, "Input",ExpressionUUID->"920ec482-be14-43ec-a0c2-54a7535d111c"],
Cell[420795, 8311, 545, 11, 19, "Message",ExpressionUUID->"ded5576d-149b-4ef8-8af9-b9ae3fd97916"],
Cell[421343, 8324, 134, 3, 26, "Output",ExpressionUUID->"4e91ccc0-0f82-4c6f-98c5-236c6c840fda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421514, 8332, 155, 3, 28, "tempInput",ExpressionUUID->"9c5caad3-766b-45a3-a54f-170193b410aa"],
Cell[421672, 8337, 207, 4, 55, "Output",ExpressionUUID->"4c4dccc4-5b62-4b03-9530-55628322fd11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421916, 8346, 408, 12, 28, "tempInput",ExpressionUUID->"d49e2623-14d8-42b3-953c-ddfa1066ff1e"],
Cell[422327, 8360, 2613, 80, 91, "Output",ExpressionUUID->"c002b04e-c2a7-4287-8e45-80b16f75b05f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424977, 8445, 604, 19, 38, "Input",ExpressionUUID->"aa43a40f-27ba-4e2e-a9ef-5868d06dd226"],
Cell[425584, 8466, 558, 18, 39, "Output",ExpressionUUID->"24270b75-ecff-4ab1-875d-1d6ecab31b01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426179, 8489, 381, 8, 67, "Input",ExpressionUUID->"5f319905-cd48-4154-859d-9e1c04fb424c"],
Cell[426563, 8499, 479, 10, 19, "Message",ExpressionUUID->"43e91d30-d544-4392-a3b8-94e80e2baae9"],
Cell[427045, 8511, 136, 3, 26, "Output",ExpressionUUID->"71d70aa1-2e1f-4ca2-9cb8-f103432ad7c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[427230, 8520, 122, 0, 31, "Subsubsection",ExpressionUUID->"e9e847f0-2d60-436f-b47a-e5a515816615"],
Cell[427355, 8522, 297, 8, 38, "Comment",ExpressionUUID->"15f2d0c7-79d4-4b1d-96b4-364c8508f99c"],
Cell[427655, 8532, 155, 2, 36, "Program",ExpressionUUID->"e7dd266d-94a2-4ddf-a1d6-f2a52646618c"],
Cell[427813, 8536, 609, 17, 55, "CommentText",ExpressionUUID->"37a6074e-d6aa-4102-9327-02309e0ec40e"],
Cell[428425, 8555, 315, 7, 38, "Comment",ExpressionUUID->"104da30e-f824-47b7-a748-c9cfbeaab006"],
Cell[428743, 8564, 201, 5, 38, "Input",ExpressionUUID->"4ab1b06c-87e7-4942-a60d-4f10baf11da4"],
Cell[CellGroupData[{
Cell[428969, 8573, 609, 15, 114, "Input",ExpressionUUID->"f29552e2-a582-40eb-9ca7-831723d2a42d"],
Cell[429581, 8590, 2466, 42, 46, "Output",ExpressionUUID->"a28717cb-4edd-42b4-ac28-402a0858fbab"],
Cell[432050, 8634, 164, 3, 26, "Output",ExpressionUUID->"b9354f00-98ee-441c-a1ea-403e0b26e245"]
}, Open  ]],
Cell[432229, 8640, 137, 4, 38, "Comment",ExpressionUUID->"1fd1b153-177f-4401-99fd-088fc74d462e"],
Cell[CellGroupData[{
Cell[432391, 8648, 749, 18, 97, "tempInput",ExpressionUUID->"e37d9619-4878-4367-9cec-87217006dd65"],
Cell[433143, 8668, 1276, 27, 27, "Output",ExpressionUUID->"db7bb55e-29cc-4320-872f-5e75909790ab"],
Cell[434422, 8697, 194, 4, 26, "Output",ExpressionUUID->"75946f97-a670-4f01-a1a1-9629f1043e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434653, 8706, 641, 16, 87, "Input",ExpressionUUID->"a017c408-cb72-411c-a5f9-5a93f7910b2b"],
Cell[435297, 8724, 12388, 231, 52, "Output",ExpressionUUID->"1642780d-ff38-4a58-b508-df6d536c3adf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447722, 8960, 194, 4, 38, "Input",ExpressionUUID->"290146de-8c06-4163-9c0c-e20f742fc7e5"],
Cell[447919, 8966, 159, 3, 26, "Output",ExpressionUUID->"dd92dd3e-1ef9-42d9-9f89-f54eab443d01"]
}, Open  ]],
Cell[448093, 8972, 184, 4, 38, "Input",ExpressionUUID->"7f0cd956-d131-4faf-bba8-eaf1de749560"]
}, Open  ]]
}, Open  ]]
}
]
*)

